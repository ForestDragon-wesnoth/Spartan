#textdomain wesnoth-Hoplite

#define CHATMSG MSG
    #note: might not always be accurate, since if the game freezes, the miliseconds don't seem to be counted properly
    [if]
        {VARIABLE_CONDITIONAL hoplite_logging equals yes}
        [then]
            [lua]
                code=<<

    wml.variables["tmp_log_miliseconds"] = wesnoth.ms_since_init()
    >>
            [/lua]
            [chat]
                message={MSG}+" $tmp_log_miliseconds| miliseconds timer"
            [/chat]
            {LOG {MSG}}
        [/then]
    [/if]
#enddef

#define SPARTAN_BOSSMUSICEND
    {SPARTAN_SMOOTH_REPLACE_MUSIC kreepor.ogg 1000 0}
#ifndef SPARTAN_MUSIC_FOUND
    {SPARTAN_SMOOTH_REPLACE_MUSIC underground.ogg 1000 0}
#endif
#enddef

#define HOPLITE_GET_RESIST_MULT UNIT_ID TYPE
    [lua]
        code=<<

    local args = ...

    local unit = wesnoth.units.get(args.id)

    local resist_multiplier = 1 - unit:resistance_against(args.damage_type) / 100. or 1

    wml.variables["tmp_resistmult"] = resist_multiplier

	>>
        [args]
            id={UNIT_ID}
            damage_type={TYPE}
        [/args]
    [/lua]
#enddef

#define SPARTAN_SMOOTH_REPLACE_MUSIC NEW_TRACK FADE_OUT_TIME FADE_IN_TIME
    #NOTE: slightly different from GSE smooth replace, this version checks if the track is already playing, in which case it doesn't do anything
    #plus it sets a currentmusic variable

    [if]
        {VARIABLE_CONDITIONAL spartan_currentmusic equals {NEW_TRACK}}
        [else]
            {VARIABLE spartan_currentmusic {NEW_TRACK}}

            {VARIABLE tmp_smooth_volume 100}
            {VARIABLE tmp_smooth_delay_time "$({FADE_OUT_TIME} / 10)"}

            {REPEAT 10 (
                {VARIABLE_OP tmp_smooth_volume sub 10}
                [volume]
                    music=$tmp_smooth_volume
                [/volume]
                [delay]
                    time=$tmp_smooth_delay_time
                [/delay]
            )}

            [volume]
                music=0
            [/volume]

            {REPLACE_SCENARIO_MUSIC {NEW_TRACK}}

            {VARIABLE tmp_smooth_delay_time "$({FADE_IN_TIME} / 10)"}

            {REPEAT 10 (
                {VARIABLE_OP tmp_smooth_volume add 10}
                [volume]
                    music=$tmp_smooth_volume
                [/volume]
                [delay]
                    time=$tmp_smooth_delay_time
                [/delay]
            )}

            [volume]
                music=100
            [/volume]

            {CLEAR_VARIABLE tmp_smooth_volume}
            {CLEAR_VARIABLE tmp_smooth_delay_time}
        [/else]
    [/if]
#enddef

#define HOPLITE_ADD_ENERGY_BY_SIDE SIDE ENERGY_AMOUNT
    #new code, significantly simplified now that there is no need for labels anymore
    [if]
        [have_unit]
            side={SIDE}
            [and]
                side=$hoplite_playerside
            [/and]
        [/have_unit]
        [then]
            {VARIABLE_OP hoplite_energy{SIDE} add {ENERGY_AMOUNT}}
            {IF_VAR hoplite_energy{SIDE} greater_than $hoplite_maxenergy{SIDE} (
                [then]
                    {VARIABLE hoplite_energy{SIDE} $hoplite_maxenergy{SIDE}}
                [/then]
            )}
            {IF_VAR hoplite_energy{SIDE} less_than 0 (
                [then]
                    {VARIABLE hoplite_energy{SIDE} 0}
                [/then]
            )}
        [/then]
        [elseif]
            [have_unit]
                side={SIDE}
                [and]
                    side=$hoplite_allyside
                [/and]
            [/have_unit]
            [then]
                {VARIABLE_OP hoplite_energy1 add {ENERGY_AMOUNT}}
                {IF_VAR hoplite_energy1 greater_than $hoplite_maxenergy1 (
                    [then]
                        {VARIABLE hoplite_energy1 $hoplite_maxenergy1}
                    [/then]
                )}
                {IF_VAR hoplite_energy1 less_than 0 (
                    [then]
                        {VARIABLE hoplite_energy1 0}
                    [/then]
                )}
#ifdef MULTIPLAYER
                {VARIABLE_OP hoplite_energy2 add {ENERGY_AMOUNT}}
                {IF_VAR hoplite_energy2 greater_than $hoplite_maxenergy2 (
                    [then]
                        {VARIABLE hoplite_energy2 $hoplite_maxenergy2}
                    [/then]
                )}
                {IF_VAR hoplite_energy2 less_than 0 (
                    [then]
                        {VARIABLE hoplite_energy2 0}
                    [/then]
                )}
#endif
            [/then]
        [/elseif]
        [else]
        [/else]
    [/if]
    #old code:
    #[if]
    #    [have_unit]
    #        id=Hoplite2
    #    [/have_unit]
    #    [then]
    #        [if]
    #        	[have_unit]
    #        		id=Hoplite
    #        		side={SIDE}
    #        	[/have_unit]
    #            [then]
    #                {VARIABLE_OP hoplite_energy1 add {ENERGY_AMOUNT}}
    #                {IF_VAR hoplite_energy1 greater_than $hoplite_maxenergy1 (
    #                    [then]
    #                        {VARIABLE hoplite_energy1 $hoplite_maxenergy1}
    #                    [/then]
    #                )}
    #                {IF_VAR hoplite_energy1 less_than 0 (
    #                    [then]
    #                        {VARIABLE hoplite_energy1 0}
    #                    [/then]
    #                )}
    #                {SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
    #            [/then]
    #            [elseif]
    #        	[have_unit]
    #        		id=Hoplite2
    #        		side={SIDE}
    #        	[/have_unit]
    #            	[then]
    #                {VARIABLE_OP hoplite_energy2 add {ENERGY_AMOUNT}}
    #                {IF_VAR hoplite_energy2 greater_than $hoplite_maxenergy2 (
    #                    [then]
    #                        {VARIABLE hoplite_energy2 $hoplite_maxenergy2}
    #                    [/then]
    #                )}
    #                {IF_VAR hoplite_energy2 less_than 0 (
    #                    [then]
    #                        {VARIABLE hoplite_energy2 0}
    #                    [/then]
    #                )}
    #                {SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
    #                [/then]
    #            [/elseif]
    #        [/if]
    #    [/then]
    #    [else]
    #        {VARIABLE_OP hoplite_energy1 add {ENERGY_AMOUNT}}
    #        {IF_VAR hoplite_energy1 greater_than $hoplite_maxenergy1 (
    #            [then]
    #                {VARIABLE hoplite_energy1 $hoplite_maxenergy1}
    #            [/then]
    #        )}
    #        {IF_VAR hoplite_energy1 less_than 0 (
    #            [then]
    #                {VARIABLE hoplite_energy1 0}
    #            [/then]
    #        )}
    #        {SET_LABEL 10 1 "Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
    #    [/else]
    #[/if]
#enddef

#define SPARTAN_INCREASE_MAX_ENERGY_IN_UPGRADE ENERGY_AMOUNT

#ifndef MULTIPLAYER
    {VARIABLE_OP hoplite_energy1 add {ENERGY_AMOUNT}}
    {VARIABLE_OP hoplite_maxenergy1 add {ENERGY_AMOUNT}}
    #removed labels for now, in favor of the new custom UI
    #    {SET_LABEL 10 1 "Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
#endif
#ifdef MULTIPLAYER
    {IF_VAR hoplite_maxenergy1 greater_than 0 (
        [then]
            {HOPLITE_PLAYERFILTER1b (
                {VARIABLE_OP hoplite_energy1 add {ENERGY_AMOUNT}}
                {VARIABLE_OP hoplite_maxenergy1 add {ENERGY_AMOUNT}}
                #removed labels for now, in favor of the new custom UI
                #    {SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
            ) (
                {VARIABLE_OP hoplite_energy2 add {ENERGY_AMOUNT}}
                {VARIABLE_OP hoplite_maxenergy2 add {ENERGY_AMOUNT}}
                #removed labels for now, in favor of the new custom UI
                #    {SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
            )}
        [/then])}
#endif
#enddef

#define HOPLITE_APPLY_PROMETHEUS_HEART
    {SPARTAN_ADD_UPGRADES_MANUALLY_NON_SHARED 1 prometheus_heart}
#ifdef MULTIPLAYER
    {SPARTAN_ADD_UPGRADES_MANUALLY_NON_SHARED 2 prometheus_heart}
#endif
    [object]
        name="Prometheus' Heart"
        image="items/prometheus-fire1.png"
        duration=forever
        description=_"A gem containing untold power, but of which you can only harness a small portion. +50 maximum energy for the rest of the playthrough."
        [filter]
            id=Hoplite
        [/filter]
    [/object]
#enddef

#define HOPLITE_SWAP FILTER_A FILTER_B
    [animate_unit]
        flag=standing
        [filter]
            {FILTER_A}
        [/filter]
        [facing]
            [filter]
                {FILTER_B}
            [/filter]
        [/facing]
    [/animate_unit]
    [store_unit]
        [filter]
            {FILTER_A}
        [/filter]
        variable=swap_a
        kill=no
    [/store_unit]
    [store_unit]
        [filter]
            {FILTER_B}
        [/filter]
        variable=swap_b
        kill=no
    [/store_unit]
    [object]
        silent=yes
        duration=turn end
        [filter]
            {FILTER_A}
        [/filter]
        [effect]
            apply_to=new_animation
            [extra_anim]
                flag=tmp_swap$swap_b.id#adding id to the anim flag, to avoid conflicts between units, just in case
                swap2_start_time=0
                [swap2_frame]
                    duration=500
                    image=$swap_b.image
                    image_mod="~TC($swap_b.side|,magenta)~FL(horiz)"
                    offset=1.0~0.0
                    #      layer=1
                    auto_vflip=false
                [/swap2_frame]
                [frame]
                    duration=500
                    offset=0.0~1.0
                    sound={SOUND_LIST:MISS}
                [/frame]
            [/extra_anim]
        [/effect]
    [/object]

    [hide_unit]
        {FILTER_B}
    [/hide_unit]

    [animate_unit]
        flag=tmp_swap$swap_b.id
        [filter]
            {FILTER_A}
        [/filter]
    [/animate_unit]
    [lock_view]
    [/lock_view]
    {VARIABLE swap_a2_x $swap_a.x}
    {VARIABLE swap_a2_y $swap_a.y}
    {VARIABLE swap_a.x $swap_b.x}
    {VARIABLE swap_a.y $swap_b.y}
    {VARIABLE swap_b.x $swap_a2_x}
    {VARIABLE swap_b.y $swap_a2_y}

    [unlock_view]
    [/unlock_view]
    [unstore_unit]
        variable=swap_a
        find_vacant=no
    [/unstore_unit]
    [unstore_unit]
        variable=swap_b
        find_vacant=no
    [/unstore_unit]
    [unhide_unit]
        id=$swap_b.id
    [/unhide_unit]
    [sound]
        name={SOUND_LIST:MISS}
    [/sound]
    {CLEAR_VARIABLE swap_a}
    {CLEAR_VARIABLE swap_b}
    {CLEAR_VARIABLE swap_a2_x}
    {CLEAR_VARIABLE swap_a2_y}
    [redraw]
        clear_shroud=yes
    [/redraw]
#enddef

#define HOPLITE_TELEPORTANIM
    [animation]
        apply_to=pre_teleport

        start_time=-1200

        teleport_sparkle_1_start_time=-1200
        teleport_sparkle_2_start_time=-1000
        teleport_sparkle_3_start_time=-800

        [teleport_sparkle_1_frame]
            duration=800
            halo=misc/blank-hex.png:1,halo/teleport-9.png,halo/teleport-8.png,halo/teleport-1.png,halo/teleport-2.png,halo/teleport-3.png,halo/teleport-4.png,halo/teleport-5.png,halo/teleport-6.png,halo/teleport-7.png,halo/teleport-8.png,halo/teleport-9.png,misc/blank-hex.png:1
            halo_x=-10
            halo_y=30~-30
        [/teleport_sparkle_1_frame]
        [teleport_sparkle_2_frame]
            duration=800
            halo=misc/blank-hex.png:1,halo/teleport-9.png,halo/teleport-8.png,halo/teleport-1.png,halo/teleport-2.png,halo/teleport-3.png,halo/teleport-4.png,halo/teleport-5.png,halo/teleport-6.png,halo/teleport-7.png,halo/teleport-8.png,halo/teleport-9.png,misc/blank-hex.png:1
            halo_x=0
            halo_y=40~-40
        [/teleport_sparkle_2_frame]
        [teleport_sparkle_3_frame]
            duration=800
            halo=misc/blank-hex.png:1,halo/teleport-9.png,halo/teleport-8.png,halo/teleport-1.png,halo/teleport-2.png,halo/teleport-3.png,halo/teleport-4.png,halo/teleport-5.png,halo/teleport-6.png,halo/teleport-7.png,halo/teleport-8.png,halo/teleport-9.png,misc/blank-hex.png:1
            halo_x=10
            halo_y=30~-30
        [/teleport_sparkle_3_frame]

        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-0.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-1.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-2.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-3.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-4.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-5.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-6.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-7.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-8.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-9.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=200
            image="misc/blank-hex.png"
        [/frame]
    [/animation]
    [animation]
        apply_to=post_teleport
        start_time=-1200

        teleport_sparkle_1_start_time=-1200
        teleport_sparkle_2_start_time=-1000
        teleport_sparkle_3_start_time=-800

        [teleport_sparkle_1_frame]
            duration=800
            halo=misc/blank-hex.png:1,halo/teleport-9.png,halo/teleport-8.png,halo/teleport-1.png,halo/teleport-2.png,halo/teleport-3.png,halo/teleport-4.png,halo/teleport-5.png,halo/teleport-6.png,halo/teleport-7.png,halo/teleport-8.png,halo/teleport-9.png,misc/blank-hex.png:1
            halo_x=10
            halo_y=-30~30
        [/teleport_sparkle_1_frame]
        [teleport_sparkle_2_frame]
            duration=800
            halo=misc/blank-hex.png:1,halo/teleport-9.png,halo/teleport-8.png,halo/teleport-1.png,halo/teleport-2.png,halo/teleport-3.png,halo/teleport-4.png,halo/teleport-5.png,halo/teleport-6.png,halo/teleport-7.png,halo/teleport-8.png,halo/teleport-9.png,misc/blank-hex.png:1
            halo_x=0
            halo_y=-40~40
        [/teleport_sparkle_2_frame]
        [teleport_sparkle_3_frame]
            duration=800
            halo=misc/blank-hex.png:1,halo/teleport-9.png,halo/teleport-8.png,halo/teleport-1.png,halo/teleport-2.png,halo/teleport-3.png,halo/teleport-4.png,halo/teleport-5.png,halo/teleport-6.png,halo/teleport-7.png,halo/teleport-8.png,halo/teleport-9.png,misc/blank-hex.png:1
            halo_x=-10
            halo_y=-30~30
        [/teleport_sparkle_3_frame]
        [frame]
            duration=200
            image="misc/blank-hex.png"
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-9.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-8.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-7.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-6.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-5.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-4.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-3.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-2.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-1.png~SCALE(144,144))
        [/frame]
        [frame]
            duration=100
            image_mod=~MASK(masks/teleport-mask-0.png~SCALE(144,144))
        [/frame]
    [/animation]
#enddef

#to make the code a bit more clean:

#define HOPLITE_PLAYERFILTER IF ELSE
    [if]
        [have_unit]
            id=Hoplite
            side=$side_number
        [/have_unit]
        [and]
            [variable]
                name=current_side_2
                not_equals=yes
            [/variable]
        [/and]
        [then]
            {IF}
        [/then]
        [elseif]
            [variable]
                name=current_side_2
                equals=yes
            [/variable]
            [then]
                {ELSE}
            [/then]
        [/elseif]
        [else]
            {ELSE}
        [/else]
    [/if]
#enddef

#define HOPLITE_PLAYERFILTER_VAR AND AND2
    {AND}
    [and]
        [variable]
            name=current_side_2
            not_equals=yes
        [/variable]
    [/and]
    [and]
        [variable]
            name=hoplite_multiplayer
            equals=yes
        [/variable]
    [/and]
    [or]
        {AND2}
        [and]
            [variable]
                name=current_side_2
                equals=yes
            [/variable]
            [variable]
                name=hoplite_multiplayer
                equals=yes
            [/variable]
        [/and]
    [/or]
#enddef

#define HOPLITE_PLAYERFILTER_VAR2 AND AND2
    {AND}
    [and]
        [have_unit]
            id=Hoplite
            side=$side_number
        [/have_unit]
    [/and]
    [and]
        [variable]
            name=hoplite_multiplayer
            equals=yes
        [/variable]
    [/and]
    [or]
        {AND2}
        [and]
            [have_unit]
                id=Hoplite2
                side=$side_number
            [/have_unit]
        [/and]
        [and]
            [variable]
                name=hoplite_multiplayer
                equals=yes
            [/variable]
        [/and]
    [/or]
#enddef

#define HOPLITE_PLAYERFILTER2 IF ELSE
    [if]
        [have_unit]
            id=Hoplite
            x,y=$x1,$x1
        [/have_unit]
        [then]
            {IF}
        [/then]
        [else]
            {ELSE}
        [/else]
    [/if]
#enddef

#define HOPLITE_PLAYERFILTER1b IF ELSE
    [if]
        [variable]
            name=current_side_2
            equals=yes
        [/variable]
        [then]
            {ELSE}
        [/then]
        [else]
            {IF}
        [/else]
    [/if]
#enddef

#define HOPLITE_PLAYERFILTER_X1_Y1 IF ELSE
    [if]
        [have_unit]
            id=Hoplite
            x,y=$x1,$y1
        [/have_unit]
        [then]
            {IF}
        [/then]
        [elseif]
            [have_unit]
                id=Hoplite2
                x,y=$x1,$y1
            [/have_unit]
            [then]
                {ELSE}
            [/then]
        [/elseif]
    [/if]
#enddef

#define HOPLITE_PLAYERFILTER_X2_Y2 IF ELSE
    [if]
        [have_unit]
            id=Hoplite
            x,y=$x2,$y2
        [/have_unit]
        [then]
            {IF}
        [/then]
        [elseif]
            [have_unit]
                id=Hoplite2
                x,y=$x2,$y2
            [/have_unit]
            [then]
                {ELSE}
            [/then]
        [/elseif]
    [/if]
#enddef

#define HOPLITE_PLAYER_UPGRADEFILTER ID FILTER MISC
    [if]
        [variable]
            name={ID}_unlocked
            equals=yes
        [/variable]
        [or]
            [variable]
                name={ID}_unlocked1
                equals=yes
            [/variable]
            [and]
                [have_unit]
                    id=Hoplite
                    {FILTER}
                [/have_unit]
            [/and]
        [/or]
        [or]
            [variable]
                name={ID}_unlocked2
                equals=yes
            [/variable]
            [and]
                [have_unit]
                    id=Hoplite2
                    {FILTER}
                [/have_unit]
            [/and]
        [/or]
        {MISC}
    [/if]
#enddef

#define HOPLITE_SPEARIMAGE VAR
    [if]
        [variable]
            name={VAR}
            not_equals=yes
        [/variable]
        [then]
        [/then]
        [else]
            [if]
                [variable]
                    name={ID}_unlocked
                    equals=yes
                [/variable]
                [then]
                    [item]
                        x,y=$x1,$y1
                        image=items/spear-ares.png
                    [/item]
                [/then]
                [else]
                    [item]
                        x,y=$x1,$y1
                        image=items/spear.png
                    [/item]
                [/else]
            [/if]
        [/else]
    [/if]
#enddef

#define HOPLITE_ARTIFACTS
    {SPARTAN_ADD_UPGRADES_MANUALLY_NON_SHARED 1 artifacts}
#ifdef MULTIPLAYER
    {SPARTAN_ADD_UPGRADES_MANUALLY_NON_SHARED 2 artifacts}
#endif
#enddef

#define SPARTAN_RETURN_ATTACK_INDEX_BY_NAME UNITVAR NAME
    [foreach]
        array={UNITVAR}.attack
        index_var=i
        [do]
            {IF_VAR this_item.name equals {NAME} (
                [then]
                    {VARIABLE tmp_index_return $i}
                    [break][/break]#no need to continue the loop after the value is found
                [/then]
            )}
        [/do]
    [/foreach]
#enddef

#define SPARTAN_GETDIR_REVERSED X1 Y1 X2 Y2 VARNAME
    {VARIABLE tmp_reverse_dir $emptyvar}#declaring the variable, just in case it fixes the bug
    [lua]
        code=<<

    local args = ...

--direction is intentionally reversed for knockback/aiming
--                        local dir = wesnoth.map.get_relative_dir({x = args.x1, y = args.y1},{x = args.x2, y = args.y2})
    local dir = wesnoth.map.get_relative_dir({x = args.x2, y = args.y2},{x = args.x1, y = args.y1})
    wml.variables[args.varname] = dir
    >>
        [args]
            x1={X1}
            y1={Y1}
            x2={X2}
            y2={Y2}
            varname={VARNAME}
        [/args]
    [/lua]
    #failed attempt to make slightly simpler WML implementation
    #[store_relative_direction]
    #    [source]
    #        x,y={X2},{Y2}
    #    [/source]
    #    [destination]
    #        x,y={X1},{Y1}
    #    [/destination]
    #    variable=tmp_reverse_dir
    #[/store_relative_direction]
#enddef

#define SPARTAN_HIDE_SCREEN
    [hide_unit]
        x=0-99
        y=0-99
    [/hide_unit]
    [lock_view][/lock_view]
    #[change_theme]
    #    theme="Cutscene_Minimal"
    #[/change_theme]
#failed experiment (unfortunately screen fade takes priority over [print], making print text invisible)

##ifver WESNOTH_VERSION > 1.17.6
#    #screen becomes fully black, hiding even most UI elements
#    [screen_fade]
#        red,green,blue=0,0,0
#        alpha=255
#        duration=0
#    [/screen_fade]    
##else
    {COLOR_ADJUST -512 -512 -512}
##endif
#enddef

#define SPARTAN_UNHIDE_SCREEN
    [unhide_unit]
        x=0-99
        y=0-99
    [/unhide_unit]
    [unlock_view][/unlock_view]
    #return the screen to normal color

#failed experiment (unfortunately screen fade takes priority over [print], making print text invisible)

##ifver WESNOTH_VERSION > 1.17.6
#    [screen_fade]
#        red,green,blue=0,0,0
#        alpha=0#alpha 0 = return screen to normal
#        duration=0
#    [/screen_fade]    
##else
    {COLOR_ADJUST 0 0 0}
##endif
#enddef

#define SPARTAN_PLACE_ALGADUR X Y
    {UNIT $hoplite_allyside (Hoplite_Steelclad2) {X} {Y} (
        id=Algadur
        name=_"Algadur"
        facing=s
        placement=map
        passable=yes
        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
    )}
    [if]
        [have_unit]
            id=Hoplite2
        [/have_unit]
        [then]
            [object]
                silent=yes
                duration=forever
                [filter]
                    id=Algadur
                [/filter]
                [effect]
                    apply_to=attack
                    range=melee
                    increase_damage=3#this way, when at Algadur II upgrade, he'll deal 15 damage with axe, enough to one-shot normal enemies in MP
                [/effect]
            [/object]
        [/then]
    [/if]
#enddef

#define SPARTAN_PLACE_ELIZABETH X Y
    {UNIT $hoplite_allyside (Hoplite_Elizabeth) {X} {Y} (
        id=Elizabeth
        name=_"Elizabeth"
        facing=s
        placement=map
        passable=yes
        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
    )}
    [if]
        [have_unit]
            id=Hoplite2
        [/have_unit]
        [then]
            [object]
                silent=yes
                duration=forever
                [filter]
                    id=Elizabeth
                [/filter]
                [effect]
                    apply_to=attack
                    range=melee
                    increase_damage=2#to two-shot normal enemies in MP
                [/effect]
                [effect]
                    apply_to=attack
                    range=ranged
                    increase_damage=4#to one-shot normal enemies in MP
                [/effect]
            [/object]
        [/then]
    [/if]
#enddef

#define SPARTAN_UNITSPAWN_TERRAIN
U*^*,Urb^*,D*^*,A*^*,R*^*,G*^*,I*^*,Wwf^*,C*^*,K*^*#enddef

#define SPARTAN_WALL_TERRAIN
Xu*^*,Xo*^*,*^Xm,*^Maus,*^Mauz,Xyui^*#enddef


#terrain such as forest/webs, used for forge/lore item/random portal filters
#define SPARTAN_USUALLY_NOT_WALKABLE_BY_PLAYER
*^F*,*^Wybs#enddef


#for forges/lore items/portals
#define SPARTAN_INTERACTABLE_ITEM_TERRAIN_FILTER
    terrain=U*^*,Urb^*,D*^*,A*^*,R*^*,G*^*,I*^*
    [not]
        terrain={SPARTAN_WALL_TERRAIN},{SPARTAN_USUALLY_NOT_WALKABLE_BY_PLAYER}
    [/not]
#enddef


#needed as workaround to variation-changing/type-changing's behavior when it comes to hp percentage
#(the "40 hp reset when changing variations" and "avatar of war hp reset when changing variation" bugs)

#define SPARTAN_GET_HP_RATIO FILTER OUTPUTVAR
    [store_unit]
        [filter]
            {FILTER}
        [/filter]
        variable=spartan_hpratio_unit
        kill=no
    [/store_unit]
    {VARIABLE {OUTPUTVAR} "$($spartan_hpratio_unit.hitpoints| / $spartan_hpratio_unit.max_hitpoints| * 1000)"}
#enddef

#define SPARTAN_CHANGE_VARIATION_PRESERVING_HP_EXACT FILTER VARIATION
    [store_unit]
        [filter]
            {FILTER}
        [/filter]
        variable=tmp_spartan_variationchanged_unit_stored
        kill=no
    [/store_unit]
    [object]
        silent=yes
        duration=forever
        [filter]
            {FILTER}
        [/filter]
        [effect]
            apply_to=variation
            name={VARIATION}
        [/effect]
    [/object]
    [modify_unit]
        [filter]
            {FILTER}
        [/filter]
        hitpoints=$tmp_spartan_variationchanged_unit_stored.hitpoints
        kill=no
    [/modify_unit]
    {CLEAR_VARIABLE tmp_spartan_variationchanged_unit_stored}
#enddef

#define SPARTAN_CHANGE_VARIATION_PRESERVING_HP_EXACT_DURATION DURATION FILTER VARIATION
    [store_unit]
        [filter]
            {FILTER}
        [/filter]
        variable=tmp_spartan_variationchanged_unit_stored
        kill=no
    [/store_unit]
    [object]
        silent=yes
        duration={DURATION}
        [filter]
            {FILTER}
        [/filter]
        [effect]
            apply_to=variation
            name={VARIATION}
        [/effect]
    [/object]
    [modify_unit]
        [filter]
            {FILTER}
        [/filter]
        hitpoints=$tmp_spartan_variationchanged_unit_stored.hitpoints
        kill=no
    [/modify_unit]
    {CLEAR_VARIABLE tmp_spartan_variationchanged_unit_stored}
#enddef

#define SPARTAN_BOSSES_BEATEN_BASED_ON_START DEPTH
    {VARIABLE tmp_bossdepth {DEPTH}}
    {IF_VAR tmp_bossdepth greater_than 5 (
        [or]
            {VARIABLE_CONDITIONAL tmp_bossdepth less_than 0}
        [/or]
        [then]
            {VARIABLE spiderqueen_beaten yes}
        [/then])}
        {IF_VAR tmp_bossdepth greater_than 10 (
            [or]
                {VARIABLE_CONDITIONAL tmp_bossdepth less_than 0}
            [/or]
            [then]
                {VARIABLE archmage_beaten yes}
            [/then])}
            {IF_VAR tmp_bossdepth greater_than 15 (
                [or]
                    {VARIABLE_CONDITIONAL tmp_bossdepth less_than 0}
                [/or]
                [then]
                    {HOPLITE_ARTIFACTS}
                    {VARIABLE ares_beaten yes}
                [/then])}
                {IF_VAR tmp_bossdepth greater_than 20 (
                    [or]
                        {VARIABLE_CONDITIONAL tmp_bossdepth less_than 0}
                    [/or]
                    [then]
                        {VARIABLE donovan_beaten yes}
                    [/then])}
                    {IF_VAR tmp_bossdepth greater_than 20 (
                        [or]
                            {VARIABLE_CONDITIONAL tmp_bossdepth less_than 0}
                        [/or]
                        [then]
                            {VARIABLE scylla_beaten yes}
                        [/then])}
                        {IF_VAR tmp_bossdepth greater_than 30 (
                            [or]
                                {VARIABLE_CONDITIONAL tmp_bossdepth less_than 0}
                            [/or]
                            [then]
                                {VARIABLE duo_beaten yes}
                            [/then])}

                            {IF_VAR tmp_bossdepth greater_than 30 (
                                [or]
                                    {VARIABLE_CONDITIONAL tmp_bossdepth less_than -10}
                                [/or]
                                [then]
                                    {VARIABLE reaper_beaten yes}
                                [/then])}

                                {IF_VAR tmp_bossdepth greater_than 35 (
                                    [or]
                                        {VARIABLE_CONDITIONAL tmp_bossdepth less_than -10}
                                    [/or]
                                    [then]
                                        {VARIABLE grandseer_beaten yes}
                                    [/then])}
                                    {CLEAR_VARIABLE tmp_bossdepth}
#enddef

#define SPARTAN_DEFENSE_ANIM_TWOSOUND REACTION_IMAGE BASE_IMAGE HIT_SOUND HIT_SOUND2
    # Define a defensive animation moving from a specified BASE_IMAGE
    # to REACTION_IMAGE, with HIT_SOUND playing only if a hit occurs.
    [defend]
        start_time=-126
        [frame]
            image={BASE_IMAGE}:1,{REACTION_IMAGE}:250,{BASE_IMAGE}:1
        [/frame]
        # Do not change to SOUND:HIT, this has to remain a hit_sound_frame
        [if]
            hit_sound_start_time=-25
            hit_sound2_start_time=-25
            hits=hit
            [hit_sound_frame]
                sound={HIT_SOUND}
            [/hit_sound_frame]
            [hit_sound2_frame]
                sound={HIT_SOUND2}
            [/hit_sound2_frame]
        [/if]
    [/defend]
#enddef

#define SPARTAN_DEATH_ANIM_TWOSOUND SOUND SOUND2
    #a way to play two death sounds for units without a proper death anim
    [death]
        start_time=0
        sound_start_time=0
        sound_2start_time=0
        [sound_frame]
            sound={SOUND}
        [/sound_frame]
        [sound2_frame]
            sound={SOUND2}
        [/sound2_frame]
    [/death]
#enddef

#define SPARTAN_IS_BOSS
    # Embed this into a unit declaration to add a hero icon to the unit.
    [+modifications]
        [object]
            [effect]
                apply_to=overlay
                add="misc/spartan-bosscrown.png"
            [/effect]
            [effect]
                apply_to=ellipse
                ellipse="misc/ellipse-hero"
            [/effect]
        [/object]
    [/modifications]
#enddef

#moved here, so it's usable in companion dialog

#define SPARTAN_GET_SHOP_DATA_GLOBAL_VARS
    [get_global_variable]
        namespace=spartan
        from_global=spartan_orbshop_data
        to_local=spartan_orbshop_data1
        side=1
    [/get_global_variable]
#ifdef MULTIPLAYER
#ifndef LOCALMP
    [get_global_variable]
        namespace=spartan
        from_global=spartan_orbshop_data
        to_local=spartan_orbshop_data2
        side=2
    [/get_global_variable]
#endif
#endif

    [if]
        {VARIABLE_CONDITIONAL spartan_orbshop_data1.visited_across_playthroughs equals $emptyvar}
        [then]
            [set_variables]
                name=spartan_orbshop_data1
                mode=replace
                [value]
                    visited_across_playthroughs=0
                    orbs_spent=0
                    #unused for now, could be used later for lines like "Ah, I see you brought a friend this time" if previous playthroughs were in SP
                    visited_in_sp=no
                    visited_in_mp=no
                [/value]
            [/set_variables]
        [/then]
    [/if]

#ifdef MULTIPLAYER
#ifndef LOCALMP
    [if]
        {VARIABLE_CONDITIONAL spartan_orbshop_data2.visited_across_playthroughs equals $emptyvar}
        [then]
            [set_variables]
                name=spartan_orbshop_data2
                mode=replace
                [value]
                    visited_across_playthroughs=0
                    orbs_spent=0
                    #unused for now, could be used later for lines like "Ah, I see you brought a friend this time" if previous playthroughs were in SP
                    visited_in_sp=no
                    visited_in_mp=no
                [/value]
            [/set_variables]
        [/then]
    [/if]
#endif
#endif
#enddef

#define SPARTAN_SYNC_ORBSHOP_DATA
    [set_global_variable]
        namespace=spartan
        from_local=spartan_orbshop_data1
        to_global=spartan_orbshop_data
        side=1
        immediate=yes
    [/set_global_variable]
#ifdef MULTIPLAYER
#ifndef LOCALMP
    [set_global_variable]
        namespace=spartan
        from_local=spartan_orbshop_data2
        to_global=spartan_orbshop_data
        side=2
        immediate=yes
    [/set_global_variable]
#endif
#endif
#enddef

#define SPARTAN_CHECK_MOVECOST UNIT_ID X Y
    [store_locations]
        x,y={X},{Y}
        include_borders=yes#necessary for knockback code to work properly
        variable=tmp_spartan_movecost_loc
    [/store_locations]

    #important note: when a unit is slowed, the movecost is doubled, so this code is mostly good for just checking if a tile is completely impossible
    #if this macro is used for precise movecost calculation, make sure to check for slow otherwise it will be inconsistent

    [lua]
        code=<<

    local args = ...

local u = wesnoth.units.get(args.unit_id)
local t = wml.variables["tmp_spartan_movecost_loc[0].terrain"]
if t then
    local move_cost = wesnoth.units.movement_on(u, t)
    wml.variables["tmp_return_movecost"] = move_cost
    if(move_cost>19) then
        wml.variables["tmp_return_passable"] = "no"
    else
        wml.variables["tmp_return_passable"] = "yes"
    end
end

    >>
        [args]
            unit_id={UNIT_ID}
        [/args]
    [/lua]
    #[chat]
    #    message=$tmp_return_movecost
    #[/chat]
    {CLEAR_VARIABLE tmp_spartan_movecost_loc}
    {CLEAR_VARIABLE test_movecost}
#enddef

#define SPARTAN_CYCLOPS_FIST_ANIM_1 UNIT
    [attack_anim]
        [filter_attack]
            name=fist
        [/filter_attack]
        start_time=-325
        [frame]
            image="units/cyclopes/{UNIT}-attack-[1,1,2,2,3].png:[75,100,75,175,100]"
        [/frame]
        {SOUND:HIT_AND_MISS fist.ogg {SOUND_LIST:MISS} -75}
    [/attack_anim]
#enddef
#----------------------------------------------------------------------------------------
#define SPARTAN_CYCLOPS_FIST_ANIM_2 UNIT
    [attack_anim]
        [filter_attack]
            name=fist
        [/filter_attack]
        start_time = -325
        [frame]
            image="units/cyclopes/{UNIT}-attack-[4,4,5~7].png:[75,100,75,175,100]"
        [/frame]
        {SOUND:HIT_AND_MISS fist.ogg {SOUND_LIST:MISS} -75}
    [/attack_anim]
#enddef

#define SPARTAN_CYCLOPS_TREE_ATTACK_ANIM UNIT ATTACKFILTER
    [attack_anim]
        [filter_attack]
            name={ATTACKFILTER}
        [/filter_attack]
        start_time=-400
        [frame]
            image="units/cyclopes/{UNIT}-se[1~5].png:100"
        [/frame]
        {SOUND:HIT_AND_MISS mace.wav {SOUND_LIST:MISS} -100}
    [/attack_anim]
    [attack_anim]
        [filter_attack]
            name={ATTACKFILTER}
        [/filter_attack]
        start_time=-400
        [frame]
            image="units/cyclopes/{UNIT}-se[5~9].png:100"
        [/frame]
        {SOUND:HIT_AND_MISS mace.wav {SOUND_LIST:MISS} -100}
    [/attack_anim]
    [attack_anim]
        [filter_attack]
            name=tree2
        [/filter_attack]
        [missile_frame]
        [/missile_frame]
        start_time=-400
        [frame]
            image="units/cyclopes/{UNIT}-se[5~9].png:100"
        [/frame]
        {SOUND:HIT_AND_MISS mace.wav {SOUND_LIST:MISS} -100}
    [/attack_anim]
#enddef

#define ALGADUR_LINE VAR CODE
    [if]
        [have_unit]
            id=Algadur
        [/have_unit]
        [then]
            {IF_VAR algadur_line_{VAR} equals yes (
                [else]
                    {CODE}
                    {VARIABLE algadur_line_{VAR} yes}
                [/else]
            )}
        [/then]
    [/if]
#enddef

#define ELIZABETH_LINE VAR CODE
    [if]
        [have_unit]
            id=Elizabeth
        [/have_unit]
        [then]
            {IF_VAR elizabeth_line_{VAR} equals yes (
                [else]
                    {CODE}
                    {VARIABLE elizabeth_line_{VAR} yes}
                [/else]
            )}
        [/then]
    [/if]
#enddef

#define ELIZABETH_MAGIC_LINE VAR CODE
    [if]
        [have_unit]
            id=Elizabeth
        [/have_unit]
        [then]
            {IF_VAR elizabeth_line_{VAR} equals yes (
                [else]
                    {CODE}
                    {VARIABLE elizabeth_line_{VAR} yes}
                    {VARIABLE_OP elizabeth_magic_lines add 1}#so I can maybe later add a line about how the hoplite has become basically an archmage, if the value is high enough TODO: maybe make the values seperate in MP
                [/else]
            )}
        [/then]
    [/if]
#enddef

#define SPARTAN_IRONMAN_GET_TURN
    #only get variable from player 1 (since he is usually the host in multiplayer)
    [get_global_variable]
        namespace=spartan
        from_global=ironman_latest_turn
        to_local=spartan_ironman_latest_turn
        side=1
    [/get_global_variable]
#enddef

#define SPARTAN_IRONMAN_UPDATE_TURN
    [set_global_variable]
        namespace=spartan
        from_local=spartan_ironman_latest_turn
        to_global=ironman_latest_turn
        side=1
        immediate=yes
    [/set_global_variable]
#enddef

#define SPARTAN_GET_UPGRADE_NAME ID
    [foreach]
        array=hoplite_forge_upgrade
        variable=this_item_get_upgrade
        index_var=i
        [do]
            [if]
                {VARIABLE_CONDITIONAL this_item_get_upgrade.id equals {ID}}
                [then]
                    {VARIABLE tmp_upgradename $this_item_get_upgrade.name}
                [/then]
            [/if]
        [/do]
    [/foreach]
#enddef

#define HOPLITE_UNSTORE_COMPANIONS
    {IF_VAR Algadur_stored.x greater_than 0 (
        [then]
            [unstore_unit]
                variable=Algadur_stored
                find_vacant=yes
                x,y=6,10
            [/unstore_unit]
            {CLEAR_VARIABLE Algadur_stored}
        [/then]
    )}
    {IF_VAR Elizabeth_stored.x greater_than 0 (
        [then]
            [unstore_unit]
                variable=Elizabeth_stored
                find_vacant=yes
                x,y=6,10
            [/unstore_unit]
            {CLEAR_VARIABLE Elizabeth_stored}
            [animate_unit]
                flag=post_teleport
                [filter]
                    id=Elizabeth
                [/filter]
            [/animate_unit]
        [/then]
    )}
#enddef

#used for flying units, as well as the Levitation upgrade

#define SPARTAN_FLY_MOVESCOSTS
    [movement_costs]
        deep_water=1
        shallow_water=1
        reef=1
        swamp_water=1
        flat=1
        sand=1
        forest=1
        hills=1
        mountains=1
        village=1
        castle=1
        cave=1
        fungus=1
        frozen=1
        unwalkable=1
    [/movement_costs]
#enddef

#define SPARTAN_TRUE_DEBUG_CHECK
    [lua]
        code=<<

        if wesnoth.game_config.debug == true then
            return true;
        end

        if wesnoth.game_config.mp_debug == true then
            return true;
        end

            return false;

        >>
    [/lua]
#enddef

#define SPARTAN_SET_PROTAGONIST_NAME SIDE NAME
    {MODIFY_UNIT (
        side={SIDE}
        canrecruit=yes
    ) name {NAME}}
    {VARIABLE protagonist_name{SIDE} {NAME}}
#enddef

#define SPARTAN_REWIND_TIME_ENDING
    #delete any units that aren't players, mainly to prevent allies from carrying over
    [kill]
        [not]
            side=$hoplite_playerside
        [/not]
        fire_event=no
        animate=no
    [/kill]

    #TODO: make it clear other companions if those get added later

    {CLEAR_VARIABLE Algadur_stored}
    {CLEAR_VARIABLE Elizabeth_stored}

    {HOPLITE_CLEAR_UPGRADES 1}
#ifdef MULTIPLAYER
    {HOPLITE_CLEAR_UPGRADES 2}
#endif

    #reset player stats to old stats:
    [store_unit]
        [filter]
            canrecruit=yes
            side=1
        [/filter]
        variable=protagonist_rewindtime_upgraded_stored1
        kill=yes
    [/store_unit]
    [unstore_unit]
        variable=protagonist_rewindtime_stored1
        find_vacant=yes
        x,y=$protagonist_rewindtime_upgraded_stored1.x,$protagonist_rewindtime_upgraded_stored1.y
    [/unstore_unit]
    #ifdef MULTIPLAYER
    [store_unit]
        [filter]
            canrecruit=yes
            side=2
        [/filter]
        variable=protagonist_rewindtime_upgraded_stored2
        kill=yes
    [/store_unit]
    [unstore_unit]
        variable=protagonist_rewindtime_stored2
        find_vacant=yes
        x,y=$protagonist_rewindtime_upgraded_stored2.x,$protagonist_rewindtime_upgraded_stored2.y
    [/unstore_unit]
    #endif

    {VARIABLE hoplite_tutorial yes}
    {VARIABLE hoplite_tutorialdepth 1}#so that time is rewinded to the "hoplite enters Irdya" part
    {VARIABLE hoplite_depth 0}
#    {VARIABLE depthdescent_nofade yes}
    {VARIABLE spartan_rewindtime_ending yes}#to make the campaign actually end after rewind
    [fire_event]
        id=hoplite_depthdescent
    [/fire_event]
#enddef

#workaround due to end_text being static for the entire campaign regardless of what ending is chosen

#for most endings it will be "The End?", but beating the true final boss will change it to "The End"

#define SPARTAN_PSEUDO_END_SCREEN TEXT
    {SPARTAN_HIDE_SCREEN}
    [remove_item]
        x=0-99
        y=0-99
    [/remove_item]
    [print]
        #wmllint: markcheck off
        text="<b>"+{TEXT}+"</b>"
        #wmllint: markcheck on
        size=50
        duration=3500
        color=255,255,255
    [/print]
    [delay]
        time=4500
    [/delay]
#enddef

#define SPARTAN_PLACE_DARKPORTAL X Y
    [item]
        image="scenery/summoning-center.png~GS()~CS(150,0,180)~NO_TOD_SHIFT()"
        x,y={X},{Y}
    [/item]
    {VARIABLE darkcircle_x {X}}
    {VARIABLE darkcircle_y {Y}}
#enddef

#define SPARTAN_PLACE_RETURN_PORTAL X Y
    [item]
        image="scenery/summoning-center.png~NO_TOD_SHIFT()"
        x,y={X},{Y}
    [/item]
    {VARIABLE circle_x {X}}
    {VARIABLE circle_y {Y}}
#enddef

#define SPARTAN_PLACE_GALATEA_SKIP_TUNNEL X Y
    [item]
        image="scenery/trapdoor-open.png"
        x,y={X},{Y}
    [/item]
    {VARIABLE galatea_sidetunnel_x {X}}
    {VARIABLE galatea_sidetunnel_y {Y}}
#enddef

#calculates damage including slow status. right now mostly used for player attacks since enemies can't shoot when slowed

#intended to be used for direct played attacks (stuff like bow, flame blast, ring of frost, etc.), but not more indirect things like knockback damage/phoenix amulet aoe

#define SPARTAN_CALCULATE_DAMAGE UNITVAR BASEDAMAGE
{VARIABLE tmp_spartan_calculated_damage {BASEDAMAGE}}
[if]
    {VARIABLE_CONDITIONAL {UNITVAR}.status.slowed boolean_equals yes}
    [then]
        {VARIABLE_OP tmp_spartan_calculated_damage divide 2}
        {VARIABLE_OP tmp_spartan_calculated_damage round floor}
    [/then]
[/if]
#enddef

#define SPARTAN_DIALOG_MP_DEPENDING_ON_CLASS CLASS BOTH ONLY_ONE NEITHER
[if]
{VARIABLE_CONDITIONAL spartan_selected_character1 equals {CLASS}}
[and]
{VARIABLE_CONDITIONAL spartan_selected_character2 equals {CLASS}}
[/and]
[then]
    {BOTH}
[/then]
[elseif]
{VARIABLE_CONDITIONAL spartan_selected_character1 equals {CLASS}}
[or]
{VARIABLE_CONDITIONAL spartan_selected_character2 equals {CLASS}}
[/or]
[then]
    {ONLY_ONE}
[/then]
[/elseif]
[else]
    {NEITHER}
[/else]
[/if]
#enddef

#define SPARTAN_GET_CLASS_STATS_DATA_GLOBAL_VARS
    [get_global_variable]
        namespace=spartan
        from_global=spartan_class_stats_data
        to_local=spartan_class_stats_data1
        side=1
    [/get_global_variable]
#ifdef MULTIPLAYER
#ifndef LOCALMP
    [get_global_variable]
        namespace=spartan
        from_global=spartan_class_stats_data
        to_local=spartan_class_stats_data2
        side=2
    [/get_global_variable]
#endif
#endif

    [if]
        {VARIABLE_CONDITIONAL spartan_class_stats_data1.hoplite_victories equals $emptyvar}
        [then]
            [set_variables]
                name=spartan_class_stats_data1
                mode=replace
                [value]
                    hoplite_victories=0
                    hoplite_highest_difficulty_num=0
                [/value]
            [/set_variables]
        [/then]
    [/if]

#ifdef MULTIPLAYER
#ifndef LOCALMP
    [if]
        {VARIABLE_CONDITIONAL spartan_class_stats_data2.hoplite_victories equals $emptyvar}
        [then]
            [set_variables]
                name=spartan_class_stats_data2
                mode=replace
                [value]
                    hoplite_victories=0
                    hoplite_highest_difficulty_num=0
                [/value]
            [/set_variables]
        [/then]
    [/if]
#endif
#endif

#in local mp, copy player 1 class data to player 2 (most other code still uses player 1 data, this is just for the UI)

#ifdef LOCALMP
    [set_variables]
        name=spartan_class_stats_data2
        mode=replace
        to_variable=spartan_class_stats_data1
    [/set_variables]
#endif

#enddef

#define SPARTAN_SYNC_CLASS_STATS_DATA
    [set_global_variable]
        namespace=spartan
        from_local=spartan_class_stats_data1
        to_global=spartan_class_stats_data
        side=1
        immediate=yes
    [/set_global_variable]
#ifdef MULTIPLAYER
#ifndef LOCALMP
    [set_global_variable]
        namespace=spartan
        from_local=spartan_class_stats_data2
        to_global=spartan_class_stats_data
        side=2
        immediate=yes
    [/set_global_variable]
#endif
#endif
#enddef



#define SPARTAN_GET_CLASS_UNLOCKS_GLOBAL_VARS
    [get_global_variable]
        namespace=spartan
        from_global=spartan_class_unlocks_data
        to_local=spartan_class_unlocks_data1
        side=1
    [/get_global_variable]
#ifdef MULTIPLAYER
#ifndef LOCALMP
    [get_global_variable]
        namespace=spartan
        from_global=spartan_class_unlocks_data
        to_local=spartan_class_unlocks_data2
        side=2
    [/get_global_variable]
#endif
#endif

    [if]
        {VARIABLE_CONDITIONAL spartan_class_unlocks_data1.hoplite_unlocked equals $emptyvar}
        [then]
            [set_variables]
                name=spartan_class_unlocks_data1
                mode=replace
                [value]
                    hoplite_unlocked=yes#the game doesn't actually check whether the class is unlocked or not, but putting it here so the variable is not empty
                [/value]
            [/set_variables]
        [/then]
    [/if]

#ifdef MULTIPLAYER
#ifndef LOCALMP
    [if]
        {VARIABLE_CONDITIONAL spartan_class_unlocks_data2.hoplite_unlocked equals $emptyvar}
        [then]
            [set_variables]
                name=spartan_class_unlocks_data2
                mode=replace
                [value]
                    hoplite_unlocked=yes#the game doesn't actually check whether the class is unlocked or not, but putting it here so the variable is not empty
                [/value]
            [/set_variables]
        [/then]
    [/if]
#endif
#endif

#in local mp, copy player 1 class data to player 2

#ifdef LOCALMP
    [set_variables]
        name=spartan_class_unlocks_data2
        mode=replace
        to_variable=spartan_class_unlocks_data1
    [/set_variables]
#endif

#enddef

#define SPARTAN_SYNC_CLASS_UNLOCKS_DATA
    [set_global_variable]
        namespace=spartan
        from_local=spartan_class_unlocks_data1
        to_global=spartan_class_unlocks_data
        side=1
        immediate=yes
    [/set_global_variable]
#ifdef MULTIPLAYER
#ifndef LOCALMP
    [set_global_variable]
        namespace=spartan
        from_local=spartan_class_unlocks_data2
        to_global=spartan_class_unlocks_data
        side=2
        immediate=yes
    [/set_global_variable]
#endif
#endif
#enddef

#edited version of the highlight image macro, so [remove_image] only removes the flashing image but NOT anything behind it
#(used for highlight image on top of a bookshelf for example). also removing the BACKGROUND_VALUE macro here

#define HIGHLIGHT_IMAGE_SPARTAN X Y IMAGE
    [scroll_to]
        x,y={X},{Y}
        check_fogged=no
    [/scroll_to]

    [repeat]
        times=3
        [do]
            [item]
                x,y={X},{Y}
                halo={IMAGE}
            [/item]

            [redraw][/redraw]

            [delay]
                time=300
            [/delay]

            [remove_item]
                x,y={X},{Y}
                image={IMAGE}
            [/remove_item]

            [redraw][/redraw]

            [delay]
                time=300
            [/delay]
        [/do]
    [/repeat]

    [item]
        x,y={X},{Y}
        image={IMAGE}
    [/item]

    [redraw][/redraw]
#enddef

#define SPARTAN_GET_CUSTOM_DIFFICULTY_PRESET_GLOBAL_VARS
#NOTE: only player 1's data is actually needed, but loading player 2's data just in case since that's how I handle most other global vars
    [get_global_variable]
        namespace=spartan
        from_global=spartan_customdifficulty_preset_data
        to_local=spartan_customdifficulty_preset_data1
        side=1
    [/get_global_variable]
#ifdef MULTIPLAYER
#ifndef LOCALMP
    [get_global_variable]
        namespace=spartan
        from_global=spartan_customdifficulty_preset_data
        to_local=spartan_customdifficulty_preset_data2
        side=2
    [/get_global_variable]
#endif
#endif

#enddef

#define SPARTAN_SYNC_CUSTOM_DIFFICULTY_PRESET_DATA
#NOTE: only player 1's data is actually needed, but loading player 2's data just in case since that's how I handle most other global vars
    [set_global_variable]
        namespace=spartan
        from_local=spartan_customdifficulty_preset_data1
        to_global=spartan_customdifficulty_preset_data
        side=1
        immediate=yes
    [/set_global_variable]
#ifdef MULTIPLAYER
#ifndef LOCALMP
    [set_global_variable]
        namespace=spartan
        from_local=spartan_customdifficulty_preset_data2
        to_global=spartan_customdifficulty_preset_data
        side=2
        immediate=yes
    [/set_global_variable]
#endif
#endif
#enddef

#define SPARTAN_HIT_BOSS_KILLSTREAK_AND_ENERGY ATTACKER_SIDE FILTER
    [store_unit]
        [filter]
            side=$hoplite_enemyside
            ability=hoplite_boss
            [and]
                {FILTER}
            [/and]
        [/filter]
        variable=tmp_hoplite_bosses_that_got_hit
        kill=no
    [/store_unit]
    [foreach]
        array=tmp_hoplite_bosses_that_got_hit
        index_var=i
        [do]
        {VARIABLE hoplite_continue_killstreak_thisturn{ATTACKER_SIDE} yes}

        {VARIABLE hitboss_energybonus $this_item.level}
        {VARIABLE_OP hitboss_energybonus multiply 5}

        {HOPLITE_ADD_ENERGY_BY_SIDE {ATTACKER_SIDE} $hitboss_energybonus}

        {CLEAR_VARIABLE hitboss_energybonus}

        [/do]
    [/foreach]
    {CLEAR_VARIABLE tmp_hoplite_bosses_that_got_hit}    
#enddef

#define SPARTAN_ATTACKER_UNCOVER_INVISIBILITY FILTER
    [modify_unit]
        [filter]
            {FILTER}
        [/filter]
        [status]
            uncovered=yes
        [/status]
    [/modify_unit]
#enddef

#define ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY VAR_NAME
    [set_variables]
        name=spartan_turn_cooldown_variables
        mode=append
        [value]
            var_name={VAR_NAME}
        [/value]
    [/set_variables]
#enddef

#define ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY VAR_NAME
    [set_variables]
        name=spartan_depth_cooldown_variables
        mode=append
        [value]
            var_name={VAR_NAME}
        [/value]
    [/set_variables]
#enddef

#these two macros are called in prestart event in Spartan.cfg

#define SPARTAN_TURN_COOLDOWNS_LIST
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY hoplite_deployshield_cooldown1}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY hoplite_deployshield_cooldown2}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY hoplite_wizardbeam_cooldown1}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY hoplite_wizardbeam_cooldown2}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY rat_cooldown1}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY rat_cooldown2}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY curse_fear_cooldown1}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY curse_fear_cooldown2}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY staff_arcane_cooldown1}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY staff_arcane_cooldown2}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY staff_fire_cooldown1}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY staff_fire_cooldown2}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY staff_cold_cooldown1}
    {ADD_TURN_COOLDOWN_VARIABLE_TO_ARRAY staff_cold_cooldown2}
#enddef

#define SPARTAN_DEPTH_COOLDOWNS_LIST
    {ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY algadur_cooldown}
    {ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY elizabeth_cooldown}
    {ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY hoplite_revive_cooldown1}
    {ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY hoplite_revive_cooldown2}
    {ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY hoplite_adrenalinerush_cooldown1}
    {ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY hoplite_adrenalinerush_cooldown2}
    {ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY hoplite_shadowclone_cooldown1}
    {ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY hoplite_shadowclone_cooldown2}
    {ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY hoplite_summonedarcher_cooldown1}
    {ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY hoplite_summonedarcher_cooldown2}
    {ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY hoplite_book_of_pacts_cooldown1}
    {ADD_DEPTH_COOLDOWN_VARIABLE_TO_ARRAY hoplite_book_of_pacts_cooldown2}
#enddef