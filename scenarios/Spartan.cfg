#textdomain wesnoth-Hoplite

#macro is used instead of variable for event names

#old side order: player>enemy>ally
#current side order: player>ally>enemy

#ifdef MULTIPLAYER

#define SPARTAN_ALLY_SIDE
3#enddef

#define SPARTAN_ENEMY_SIDE
4#enddef

#else

#define SPARTAN_ALLY_SIDE
2#enddef

#define SPARTAN_ENEMY_SIDE
3#enddef

#endif

[scenario]
    id=spartan
    next_scenario=null
    name= _ "Spartan"
#ifdef MULTIPLAYER
    map_file=~add-ons/Spartan/maps/Hoplite_Multiplayer.map
#else
    map_file=~add-ons/Spartan/maps/Hoplite.map
#endif
    turns=-1
    #WIP:
    theme=Spartan_customtheme
    victory_when_enemies_defeated=no

    {SPARTAN_UNDERGROUND}

    #commented out, since it's now done lower via prestart, to set music variables properly
    ##ifndef SPARTAN_MUSIC_FOUND
    #    {SCENARIO_MUSIC underground.ogg}
    ##endif
    ##ifdef SPARTAN_MUSIC_FOUND
    #    {SCENARIO_MUSIC kreepor.ogg}
    ##endif

    ## [event]
    ## name=unused#preload
    ## #debugging code.
    ## [lua]
    ## code=<<
    ## local old = wesnoth.wml_actions.store_unit
    ## function wesnoth.wml_actions.store_unit(cfg)
    ## wesnoth.message("store_unit:",cfg.variable)
    ## wesnoth.message(wml.get_child(cfg,"filter").type)old(cfg)
    ## end
    ## local old = wesnoth.wml_actions.unstore_unit
    ## function wesnoth.wml_actions.unstore_unit(cfg)
    ## wesnoth.message("unstore_unit:",cfg.variable)
    ## old(cfg)
    ## end
    ## >>
    ## [/lua]
    ## [/event]
    [event]
        name=prestart
        id=spartan_set_music
        {SPARTAN_SMOOTH_REPLACE_MUSIC kreepor.ogg 0 0}
#ifndef SPARTAN_MUSIC_FOUND
        {SPARTAN_SMOOTH_REPLACE_MUSIC underground.ogg 0 0}
#endif
    [/event]

    #[lua] is now directly in scenario toplevel as suggested by CelticMinstrel
    #IMPORTANT: doing it this way to ensure theme items are loaded properly in replays

    #[event]
    #    # is used to show icon in status bar
    #    name=preload
    #    first_time_only=no
    #    id=spartan_load_lua
        [lua]
            code=<<
            --sets poison damage to 4, and rest heal to 0
            wesnoth.game_config.poison_amount = 4
            wesnoth.game_config.rest_heal_amount = 0
            
            --loads the spartan_harm_unit/spartan_kill tags:
            wesnoth.require("~add-ons/Spartan/lua/spartan_kill.lua")
            wesnoth.require("~add-ons/Spartan/lua/spartan_harm_unit.lua")
            --loads custom theme
            wesnoth.require "~add-ons/Spartan/theme/theme_items.lua"

            --cursed status icon:

                 local _ = wesnoth.textdomain "wesnoth-Hoplite"
                 local old_unit_status = wesnoth.interface.game_display.unit_status
                 function wesnoth.interface.game_display.unit_status()
                     local u = wesnoth.interface.get_displayed_unit()
                     if not u then return {} end
                     local s = old_unit_status()
                     if u.status.unhealable then
                         table.insert(s, { "element", {
                             image = "misc/status-cursed.png",
                             tooltip = _"Cursed: You are unable to use healing potions, phoenix amulet revival (and most other methods of healing), and killing enemies only restores half as much energy as normal. Companions who are reduced to 0 hp while cursed take 1 depth longer to respawn."
                         } })
                     end
                     return s
                 end

             >>
        [/lua]
    #[/event]

    [side]
        side=1
        controller=human
        team_name=hoplite
        user_team_name= _ "team_name^Hoplite"
        color=red

        type=Hoplite
        id=Hoplite
        name= _ "Hoplite"
        #        unrenamable=yes
        canrecruit=yes
        facing=n
        recruit=

        gold=0
        income=-2
        suppress_end_turn_confirmation=yes
        gold_lock=yes
        income_lock=yes
        faction_lock=yes
        team_lock=yes
        leader_lock=yes
        color_lock=yes
        fog=no
    [/side]

#ifdef MULTIPLAYER
    [side]
        side=2
        controller=human
        team_name=hoplite
        user_team_name= _ "team_name^Hoplite"
        color=teal

        type=Hoplite_teal
        id=Hoplite2
        name= _ "Hoplite"
        #        unrenamable=yes
        canrecruit=yes
        facing=n
        recruit=

        gold=0
        income=-2
        suppress_end_turn_confirmation=yes
        gold_lock=yes
        income_lock=yes
        faction_lock=yes
        team_lock=yes
        leader_lock=yes
        color_lock=yes
        fog=no
    [/side]
#endif

    #originally enemies were before allies, but ended up swapping that later on

    [side]
#ifdef MULTIPLAYER
        side=3
#else
        side=2
#endif
        controller=null#until unlocked
        team_name=hoplite
        user_team_name= _ "team_name^Allies"
        color=green
        no_leader=yes
        hidden=yes

        recruit=

        [ai]
            aggression=1.0
            caution=0.0
            [goal]
                name=protect_unit
                [criteria]
                    id=Hoplite,Hoplite2
                [/criteria]
                value=20
                protect_radius=3
            [/goal]
            simple_targeting=yes
        [/ai]
        gold=0
        income=-2
        allow_player=no
    [/side]

    [side]
#ifdef MULTIPLAYER
        side=4
#else
        side=3
#endif
        controller=ai
        team_name=enemy
        user_team_name= _ "team_name^Enemies"
        color=blue
        no_leader=yes

        recruit=

        [ai]
            aggression=1.0
            caution=0.0
            grouping=no
            simple_targeting=yes
            [goal]
                [criteria]
                    canrecruit=yes#try to move towards hoplite/hoplites when possible
                [/criteria]
                value=20
            [/goal]
        [/ai]

        gold=0
        income=-2
        allow_player=no
    [/side]

    [event]
        name=prestart
        #MOVED TO MACROS AT THE BOTTOM OF THE FILE
        #        {~add-ons/Spartan/macros/level_generation.cfg}
        #        {~add-ons/Spartan/macros/upgrade_events.cfg}
        #        {~add-ons/Spartan/macros/misc_events.cfg}
        #        {~add-ons/Spartan/macros/companion_dialog.cfg}

#ifndef MULTIPLAYER
        {VARIABLE hoplite_playerside 1}
        #        {VARIABLE hoplite_enemyside 2}
        #        {VARIABLE hoplite_allyside 3}
#endif
#ifdef MULTIPLAYER
        {VARIABLE hoplite_playerside 1,2}
        #        {VARIABLE hoplite_enemyside 3}
        #        {VARIABLE hoplite_allyside 4}
        {VARIABLE hoplite_multiplayer yes}
#endif

        #just in case I want to check without using ifdef

#ifdef LOCALMP
        {VARIABLE hoplite_localmp yes}
#endif

        #now ally/enemy sides are handled via the macros at the top of this file
        {VARIABLE hoplite_allyside {SPARTAN_ALLY_SIDE}}
        {VARIABLE hoplite_enemyside {SPARTAN_ENEMY_SIDE}}

#ifndef MULTIPLAYER
        #        {VARIABLE hoplite_energy 100}
        #        {VARIABLE hoplite_maxenergy 100}
#endif

        {VARIABLE hoplite_energy1 100}
        {VARIABLE hoplite_maxenergy1 100}

        #removed labels for now, in favor of the new custom UI
        #        {SET_LABEL 10 1 "Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}

#ifdef MULTIPLAYER
        {VARIABLE hoplite_energy2 100}
        {VARIABLE hoplite_maxenergy2 100}
        #removed labels for now, in favor of the new custom UI
        #        {SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
        #        {SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
#endif
        {VARIABLE hoplite_spearthrow_radius1 2}
#ifdef MULTIPLAYER
        {VARIABLE hoplite_spearthrow_radius2 2}
#endif
        {VARIABLE hoplite_teleport_radius1 2}
#ifdef MULTIPLAYER
        {VARIABLE hoplite_teleport_radius2 2}
#endif
        {VARIABLE_OP forge_delay add 1}
        {VARIABLE hoplite_shield_distance1 1}
        {VARIABLE hoplite_shield_distance2 1}

        [disallow_end_turn]
        [/disallow_end_turn]

        [item]
            image="scenery/trapdoor-open.png"
            x,y=6,2
        [/item]
        {VARIABLE_OP hoplite_depth add 1}
        {VARIABLE hoplite_biome cave}
        #removed labels for now, in favor of the new custom UI
        #        {SET_LABEL 2 1 "Depth: $hoplite_depth|"}
        {HOPLITE_GENERATE_TERRAIN}
        {HOPLITE_GENERATE_FORGE 2-10 4-5}

        {HOPLITE_SCATTER_ENEMY 2 Hoplite_Orcgrunt Ur}

        #        {SPARTAN_RANGED_MICROAIS}

        {SPARTAN_MICRO_AIS}

        [tunnel]
            [filter]
            [/filter]
            [source]
                terrain=*^Pob
            [/source]
            [target]
                terrain=*^Pob
            [/target]
        [/tunnel]
        [tunnel]
            [filter]
            [/filter]
            [source]
                terrain=*^Por
            [/source]
            [target]
                terrain=*^Por
            [/target]
        [/tunnel]
        [tunnel]
            [filter]
            [/filter]
            [source]
                terrain=*^Pog
            [/source]
            [target]
                terrain=*^Pog
            [/target]
        [/tunnel]
        #	{VARIABLE orcarcher_charging no}
        #	{VARIABLE skelearcher_charging no}
        #	{VARIABLE nagahunter_charging no}
        #	{VARIABLE darkwizard_charging no}
        #	{VARIABLE spiderqueen_web_charging no}
        #	{VARIABLE archmage_charging no}

        [objectives]
            side=$hoplite_playerside
            [objective]
                #                description= _ "Descend into the dungeon."
                #                description= _ "Retrieve the Prometheus' heart at depth 40 and exit the cave at any depth afterwards via the stairs."
                description= _ "Find and defeat Galatea"
                condition=win
            [/objective]
#ifdef MULTIPLAYER
            [objective]
                description= _ "Death of $protagonist_name1|"
                condition=lose
            [/objective]
            [objective]
                description= _ "Death of $protagonist_name2|"
                condition=lose
            [/objective]
#else
            [objective]
                description= _ "Death of $protagonist_name1|"
                condition=lose
            [/objective]
#endif
            [note]
                description=_"If you want to learn more about the custom mechanics or see your achievements, check the 'information menu' right-click option."
            [/note]
            [note]
                description=_"In multiplayer, enemies are stronger than usual (+5 hitpoints for normal enemies, +50% for bosses), and there are roughly 1.5 times as many of them."
                [show_if]
                    {VARIABLE_CONDITIONAL hoplite_multiplayer equals yes}
                [/show_if]
            [/note]
            #to ensure this works properly even if protagonist name is changed
            delayed_variable_substitution=yes
        [/objectives]
    [/event]
    [event]
        name=start
        {SPARTAN_HIDE_SCREEN}
        {SPARTAN_GET_CHECKPOINTS 1}
#ifdef MULTIPLAYER
#ifndef LOCALMP
        {SPARTAN_GET_CHECKPOINTS 2}
#endif
#endif

        {SPARTAN_START_MENU}

        {IF_VAR hoplite_debug equals yes (
            [then]
                [modify_side]
                    side=$hoplite_allyside
                    controller=ai
                    hidden=no
                [/modify_side]
            [/then]
        )}
    [/event]
    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=$hoplite_playerside
            [not]
                [filter_wml]
                    attacks_left=1
                [/filter_wml]
                [filter_adjacent]
                    side=$hoplite_enemyside
                [/filter_adjacent]
            [/not]
        [/filter]
        [if]
            [have_unit]
                side=$hoplite_enemyside
                [not]
                    #if the only enemies are stuff like gates, do not block infinite movement
                    ability=hoplite_unimportant_enemy
                [/not]
            [/have_unit]
            [or]
                {VARIABLE_CONDITIONAL noinfinitemove_this_depth equals yes}
            [/or]
            [then]
                {IF_VAR hoplite_footwork_enabled$side_number equals yes (
                    [else]
                        [end_turn]
                        [/end_turn]
                    [/else]
                )}
            [/then]
            [else]
                {MODIFY_UNIT id=$unit.id moves $unit.max_moves}
                #to prevent spam-leaping after enemies are dead:
                [if]
                    [have_unit]
                        x,y=$x1,$y1
                        ability=hoplite_leap
                        [or]
                            x,y=$x1,$y1
                            ability=hoplite_teleport
                        [/or]
                    [/have_unit]
                    [then]
                        [object]
                            silent=yes
                            duration=turn end
                            [filter]
                                x,y=$x1,$y1
                            [/filter]
                            [effect]
                                apply_to=remove_ability
                                [abilities]
                                    {ABILITY_LEAPING2}
                                    {ABILITY_HOPLITE_TELEPORTING}
                                [/abilities]
                            [/effect]
                        [/object]
                    [/then]
                [/if]
            [/else]
        [/if]
    [/event]
    #if hoplite has hit-and-run and is not slowed, then he's allowed to move after attacking. if slowed, turn ends as usual
    [event]
        name=attack end
        first_time_only=no
        [filter]
            side=$hoplite_playerside
            [not]
                [filter_wml]
                    [status]
                        slowed=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        [filter_attack]
            [not]
                special_id=hoplite_hitandrun
            [/not]
        [/filter_attack]
        [end_turn]
        [/end_turn]
    [/event]
    [event]
        name=attack end
        first_time_only=no
        [filter]
            side=$hoplite_playerside
            [filter_wml]
                [status]
                    slowed=yes
                [/status]
            [/filter_wml]
        [/filter]
        [end_turn]
        [/end_turn]
    [/event]
    #to prevent units from receiving rest healing:
    [event]
        name=moveto
        id=forge
        first_time_only=no
        [filter]
            side=$hoplite_playerside
        [/filter]
        [if]
            [have_unit]
                id=$unit.id
                x,y=$forge_x,$forge_y
            [/have_unit]
            [then]
#                {IF_VAR goldenforge equals yes (
                {IF_VAR forge_value greater_than_equal_to 2 (
                    [then]
                        [if]
                            [have_unit]
                                id=Hoplite2
                            [/have_unit]
                            [then]
                                {VARIABLE hoplite_upgradesleft1 $forge_value}
                                {VARIABLE hoplite_upgradesleft2 $forge_value}
                            [/then]
                            [else]
                                {VARIABLE hoplite_upgradesleft $forge_value}
                            [/else]
                        [/if]
                    [/then]
                )}
                [fire_event]
                    id=forge_dialog
                [/fire_event]
            [/then]
            [elseif]
                [have_unit]
                    id=$unit.id
                    x,y=$circle_x,$circle_y
                [/have_unit]
                [and]
                    [variable]
                        name=bossfight
                        not_equals=yes
                    [/variable]
                [/and]
                [then]
                    {HOPLITE_PORTALMENU}
                [/then]
            [/elseif]
            [elseif]
                [have_unit]
                    id=$unit.id
                    x,y=$darkcircle_x,$darkcircle_y
                [/have_unit]
                [and]
                    [variable]
                        name=bossfight
                        not_equals=yes
                    [/variable]
                [/and]
                [then]
                    {HOPLITE_DARKPORTALMENU}
                [/then]
            [/elseif]
            [elseif]
                [have_unit]
                    id=$unit.id
                    x,y=$galatea_sidetunnel_x,$galatea_sidetunnel_y
                [/have_unit]
                [and]
                    [variable]
                        name=bossfight
                        not_equals=yes
                    [/variable]
                [/and]
                [then]
                    {HOPLITE_TUNNEL_SKIP_GALATEA_MENU}
                [/then]
            [/elseif]
            [elseif]
                [have_unit]
                    id=$unit.id
                    x,y=$textitem.x,$textitem.y
                [/have_unit]
                [then]
                    [message]
                        speaker=narrator
                        caption=$textitem.caption
                        image=$textitem.image
                        message=$textitem.message
                    [/message]
                    {VARIABLE textitem_seen yes}
                [/then]
            [/elseif]
        [/if]
    [/event]
    [event]
        #moveto is replaced with enter hex, so that the "end turn on moveto" simply does not trigger
        #therefore, after moving to a new depth, the player can immediately act again
        #however, there is a small issue in MP that unlike automove, if player 2 moves, it stays player 2's turn instead of switching to player 1
        #but I suppose it's an okay enough trade for not killing all enemies in a level
        name=enter hex
        first_time_only=no
        [filter]
            side=$hoplite_playerside
            x,y=6,2
        [/filter]
        #stairs are no longer needed now that the Galatea boss fight exists
        #{IF_VAR bossfight not_equals yes (
        #    [and]
        #        [variable]
        #            name=hoplite_stairway
        #            not_equals=yes
        #        [/variable]
        #    [/and]
        #    [and]
        #        [variable]
        #            name=hoplite_depth
        #            less_than=40
        #        [/variable]
        #    [/and]
        #    [and]
        #        {VARIABLE_CONDITIONAL spartan_exitlocked_this_depth not_equals yes}
        #    [/and]
        #    [then]

        [if]
            {VARIABLE_CONDITIONAL bossfight not_equals yes}
            [and]
                {VARIABLE_CONDITIONAL spartan_exitlocked_this_depth not_equals yes}
            [/and]
            [then]
                [fire_event]
                    id=hoplite_depthdescent
                [/fire_event]
            [/then]
        [/if]
        #    [/then]
        #)}

#stairs are no longer needed now that the Galatea boss fight exists

#        {IF_VAR hoplite_depth greater_than 99 (
#            [then]
#                [sound]
#                    name=fanfare-short.wav
#                [/sound]
#                [message]
#                    speaker=narrator
#                    caption=_ "Victory"
#                    message=_"You have retrieved the artifacts, and slain the mighty beings inhabiting the dungeon. You can put the campaign down, or #return to complete the achievements (which remain complete even if you restart the campaign) and get further than you previously have."
#                    image=wesnoth-icon.png
#                [/message]
#                [fire_event]
#                    id=spartan_victory_achievements
#                [/fire_event]
#                {SPARTAN_VICTORY_REWARD 1}
##ifdef MULTIPLAYER
##ifndef LOCALMP
#                {SPARTAN_VICTORY_REWARD 2}
##endif
##endif
#                [delay]
#                    time=1000
#                [/delay]
#                {SPARTAN_PSEUDO_END_SCREEN _"The End?"}
#                [endlevel]
#                    result=victory
#                    linger_mode=no
#                    carryover_report=no
#                [/endlevel]
#            [/then]
#        )}
    [/event]

#stairs are no longer needed now that the Galatea boss fight exists

#    [event]
#        #moveto is replaced with enter hex, so that the "end turn on moveto" simply does not trigger
#        #therefore, after moving to a new depth, the player can immediately act again
#        #however, there is a small issue in MP that unlike automove, if player 2 moves, it stays player 2's turn instead of switching to player 1
#        #but I suppose it's an okay enough trade for not killing all enemies in a level
#        name=enter hex
#        first_time_only=no
#        [filter]
#            side=$hoplite_playerside
#            x,y=7,2
#        [/filter]
#        {IF_VAR bossfight not_equals yes (
#            [and]
#                #                [variable]
#                #                    name=hoplite_stairway
#                #                    equals=yes
#                #                [/variable]
#                [variable]
#                    name=hoplite_depth
#                    greater_than_equal_to=40
#                [/variable]
#            [/and]
#            [and]
#                [variable]
#                    name=hoplite_depth
#                    less_than=100
#                [/variable]
#            [/and]
#            [and]
#                {VARIABLE_CONDITIONAL spartan_exitlocked_this_depth not_equals yes}
#            [/and]
#            [then]
#                [fire_event]
#                    id=hoplite_depthdescent
#                [/fire_event]
#            [/then]
#        )}
#    [/event]
#    [event]
#        #moveto is replaced with enter hex, so that the "end turn on moveto" simply does not trigger
#        #therefore, after moving to a new depth, the player can immediately act again
#        #however, there is a small issue in MP that unlike automove, if player 2 moves, it stays player 2's turn instead of switching to player 1
#        #but I suppose it's an okay enough trade for not killing all enemies in a level
#        name=enter hex
#        first_time_only=no
#        [filter]
#            side=$hoplite_playerside
#            x,y=5,2
#        [/filter]
#        {IF_VAR bossfight not_equals yes (
#            [and]
#                [variable]
#                    name=hoplite_depth
#                    greater_than_equal_to=40
#                [/variable]
#                #                [variable]
#                #                    name=hoplite_stairway
#                #                    equals=yes
#                #                [/variable]
#            [/and]
#            [and]
#                [variable]
#                    name=hoplite_depth
#                    less_than=100
#                [/variable]
#            [/and]
#            [then]
#                [sound]
#                    name=fanfare-short.wav
#                [/sound]
#                [message]
#                    speaker=narrator
#                    caption=_ "Victory"
#                    message=_"You have retrieved the artifacts, and slain the mighty beings inhabiting the dungeon. You can put the campaign down, or #return to complete the achievements (which remain complete even if you restart the campaign) and get further than you previously have."
#                    image=wesnoth-icon.png
#                [/message]
#                [fire_event]
#                    id=spartan_victory_achievements
#                [/fire_event]
#                {SPARTAN_VICTORY_REWARD 1}
##ifdef MULTIPLAYER
##ifndef LOCALMP
#                {SPARTAN_VICTORY_REWARD 2}
##endif
##endif
#                [delay]
#                    time=1000
#                [/delay]
#                {SPARTAN_PSEUDO_END_SCREEN _"The End?"}
#                [endlevel]
#                    result=victory
#                    linger_mode=no
#                    carryover_report=no
#                [/endlevel]
#            [/then]
#        )}
#    [/event]

    [event]
        name=side turn,side turn end
        id=hoplite_clear_order_unit
        first_time_only=no
        [filter_condition]
            {VARIABLE_CONDITIONAL spartan_order_currentselected not_equals $emptyvar}
        [/filter_condition]
        {CLEAR_VARIABLE spartan_order_currentselected}
        [remove_item]
            x=0-99
            y=0-99
            image=hoplite_order_pointer
        [/remove_item]
    [/event]

    [event]
        name=start
        #        [set_menu_item]
        #            id=hoplite_controlai
        #            description= _ "Order nearby allies to to move here"
        #            [show_if]
        #                [have_unit]
        #                    side=$hoplite_allyside
        #                    [filter_location]
        #                        x,y=$x1,$y1
        #                        radius=2
        #                    [/filter_location]
        #                [/have_unit]
        #                [and]
        #                    [not]
        #                        [have_unit]
        #                            x,y=$x1,$y1
        #                        [/have_unit]
        #                    [/not]
        #                [/and]
        #            [/show_if]
        #            [command]
        #                [modify_unit]
        #                    [filter]
        #                        side=$hoplite_allyside
        #                        [filter_location]
        #                            x,y=$x1,$y1
        #                            radius=2
        #                        [/filter_location]
        #                    [/filter]
        #                    goto_x,goto_y=$x1,$y1
        #                [/modify_unit]
        #            [/command]
        #        [/set_menu_item]

        [set_menu_item]
            id=hoplite_controlai1
            description= _ "Order this ally to move somewhere"
            image="misc/ally_order1.png"
            [show_if]
                [have_unit]
                    side=$hoplite_allyside
                    x,y=$x1,$y1
                    formula="max_moves > 0"#immobile units like deployed shield cannot be ordered to move (but you can still swap with shield)
                    [not]
                        ability=spartan_ally_immovable
                    [/not]
                [/have_unit]
                [and]
                    {VARIABLE_CONDITIONAL spartan_order_currentselected equals $emptyvar}
                [/and]
            [/show_if]
            [command]
                [store_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    variable=spartan_order_unit
                    kill=no
                [/store_unit]
                {VARIABLE spartan_order_currentselected $spartan_order_unit.id}
                {CLEAR_VARIABLE spartan_order_unit}
                [item]
                    x,y=$x1,$y1
                    name=hoplite_order_pointer
                    halo="misc/unit-pointer.png"
                [/item]
                [print]
                    text= _ "Select tile to move"
                    size=20
                    blue=255
                    duration=2000
                [/print]
                [modify_unit]
                    [filter]
                        side=$hoplite_allyside
                        [filter_location]
                            x,y=$x1,$y1
                            radius=2
                        [/filter_location]
                    [/filter]
                    goto_x,goto_y=$x1,$y1
                [/modify_unit]
            [/command]
        [/set_menu_item]
        [set_menu_item]
            id=hoplite_controlai2
            description= _ "Order ally to move here"
            image="misc/ally_order2.png"
            [show_if]
                [have_location]
                    x,y=$x1,$y1
                    terrain=!,Xu*,Xo*
                [/have_location]
                [and]
                    {VARIABLE_CONDITIONAL spartan_order_currentselected not_equals $emptyvar}
                [/and]
            [/show_if]
            [command]
                [modify_unit]
                    [filter]
                        id=$spartan_order_currentselected
                    [/filter]
                    goto_x,goto_y=$x1,$y1
                [/modify_unit]
                {CLEAR_VARIABLE spartan_order_currentselected}
                [remove_item]
                    x=0-99
                    y=0-99
                    image=hoplite_order_pointer
                [/remove_item]
                [print]
                    text= _ "Unit will move to "$x1,$y1
                    size=20
                    blue=255
                    duration=2000
                [/print]
            [/command]
        [/set_menu_item]
        #SCRAPPED for now, as swapping with allies is more interesting imo (and pushing was useless if the ally was in front of a wall anyway)
        #        [set_menu_item]
        #            id=hoplite_pushally
        #            description= _ "Push this ally."
        #            [show_if]
        #                [have_unit]
        #                    side=$hoplite_allyside
        #                    x,y=$x1,$y1
        #                    [filter_location]
        #                        [filter]
        #                            id=Hoplite,Hoplite2
        #                        [/filter]
        #                        radius=1
        #                    [/filter_location]
        #                [/have_unit]
        #                [or]
        #                    [have_unit]
        #                        id=Hoplite2
        #                        x,y=$x1,$y1
        #                        [filter_location]
        #                            [filter]
        #                                id=Hoplite
        #                                side=$side_number
        #                            [/filter]
        #                            radius=1
        #                        [/filter_location]
        #                    [/have_unit]
        #                [/or]
        #                [or]
        #                    [have_unit]
        #                        id=Hoplite
        #                        x,y=$x1,$y1
        #                        [filter_location]
        #                            [filter]
        #                                id=Hoplite2
        #                                side=$side_number
        #                            [/filter]
        #                            radius=1
        #                        [/filter_location]
        #                    [/have_unit]
        #                [/or]
        #            [/show_if]
        #            [command]
        #                [animate_unit]
        #                    flag=standing
        #                    [facing]
        #                        [filter]
        #                            x,y=$x1,$y1
        #                        [/filter]
        #                    [/facing]
        #                    [filter]
        #                        id=Hoplite,Hoplite2
        #                        side=$side_number
        #                    [/filter]
        #                [/animate_unit]
        #                [store_unit]
        #                    [filter]
        #                        id=Hoplite,Hoplite2
        #                        side=$side_number
        #                    [/filter]
        #                    variable=hoplitefacing
        #                    kill=no
        #                [/store_unit]
        #                [store_locations]
        #                    [not]
        #                        [filter]
        #                        [/filter]
        #                    [/not]
        #
        #                    [filter_adjacent_location]
        #                        x,y=$x1,$y1
        #                        adjacent=-$hoplitefacing.facing
        #                    [/filter_adjacent_location]
        #
        #                    variable=knockback_target_hex
        #                [/store_locations]
        #
        #                [if]
        #                    [variable]
        #                        name=knockback_target_hex.length
        #                        greater_than=0
        #                    [/variable]
        #                    [and]
        #                        [have_location]
        #                            x,y=$knockback_target_hex.x,$knockback_target_hex.y
        #                            terrain=!,Xo*,Xu,Qlf,W**
        #                        [/have_location]
        #                    [/and]
        #
        #                    [then]
        #                        [sound]
        #                            name=mace.wav
        #                        [/sound]
        #                        {MOVE_UNIT x,y=$x1,$y1 $knockback_target_hex.x $knockback_target_hex.y}
        #                    [/then]
        #                    [else]
        #                        [print]
        #                            text= _ "Ally can't be pushed in that direction!"
        #                            size=20
        #                            red=255
        #                            duration=2000
        #                        [/print]
        #                    [/else]
        #                [/if]
        #                {CLEAR_VARIABLE knockback_direction,knockback_target_hex,hoplitefacing}
        #            [/command]
        #        [/set_menu_item]
        [set_menu_item]
            id=hoplite_recallelizabeth
            description=_"Teleport Elizabeth to your position (once per turn)"
            [show_if]
                [have_unit]
                    id=Elizabeth
                    x,y=$x1,$y1
                    [not]
                        #this is to make the menu usable by both players per turn in multiplayer
                        ability=elizabeth_teleported_to_player_$side_number|_used_this_turn
                    [/not]
                [/have_unit]
            [/show_if]
            [command]
                [store_unit]
                    [filter]
                        id=Hoplite,Hoplite2
                        side=$side_number
                    [/filter]
                    variable=current_hopliteloc
                    kill=no
                [/store_unit]
                [animate_unit]
                    flag=pre_teleport
                    [filter]
                        id=Elizabeth
                    [/filter]
                [/animate_unit]
                {TELEPORT_UNIT id=Elizabeth $current_hopliteloc.x $current_hopliteloc.y}
                [animate_unit]
                    flag=post_teleport
                    [filter]
                        id=Elizabeth
                    [/filter]
                [/animate_unit]
                [object]
                    silent=yes
                    duration=turn end
                    [filter]
                        id=Elizabeth
                    [/filter]
                    [effect]
                        apply_to=new_ability
                        [abilities]
                            [dummy]
                                id=elizabeth_teleported_to_player_$side_number|_used_this_turn
                            [/dummy]
                        [/abilities]
                    [/effect]
                [/object]
                {HOPLITE_UPDATE_TARGETHEXES_BY_ID Elizabeth}
                {CLEAR_VARIABLE current_hopliteloc}
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=hoplite_swapally
            description= _ "Swap places with this ally."
            [show_if]
                [have_unit]
                    side=$hoplite_allyside
                    x,y=$x1,$y1
                    [filter_adjacent]
                        side=$side_number
                        canrecruit=yes
                    [/filter_adjacent]
                    [not]
                        ability=spartan_ally_immovable
                    [/not]
                [/have_unit]
            [/show_if]
            [command]
                [store_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    variable=tmp_hoplite_swapped_unit
                    kill=no
                [/store_unit]
                [store_unit]
                    [filter]
                        id=Hoplite,Hoplite2
                        side=$side_number
                    [/filter]
                    variable=tmp_hoplite_swapping_unit
                    kill=no
                [/store_unit]

                #sets tmp_return_movecost and tmp_return_passable variables, the latter of which is used for the code:
                {SPARTAN_CHECK_MOVECOST $tmp_hoplite_swapping_unit.id $x1 $y1}

                {IF_VAR tmp_return_passable equals no (
                    [then]
                        [print]
                            text= _ "Can't move onto this terrain!"
                            size=20
                            red=255
                            duration=2000
                        [/print]
                    [/then]
                    [else]
                        #make sure the other player can move to player position too
                        {SPARTAN_CHECK_MOVECOST $tmp_hoplite_swapped_unit.id $tmp_hoplite_swapping_unit.x $tmp_hoplite_swapping_unit.y}
                        {IF_VAR tmp_return_passable equals no (
                            [then]
                                [print]
                                    text= _ "Ally can't move onto your tile's terrain!"
                                    size=20
                                    red=255
                                    duration=2000
                                [/print]
                            [/then]
                            [else]
                                {HOPLITE_SWAP (
                                    side=$side_number
                                    canrecruit=yes
                                ) (
                                    x,y=$x1,$y1
                                )}
                                #            {HOPLITE_CLEAR_TARGETHEXES_IF_UNIT_NOT_FOUND}
                                {HOPLITE_UPDATE_TARGETHEXES_BY_ID $tmp_hoplite_swapped_unit.id}
                                {HOPLITE_UPDATE_TARGETHEXES_BY_ID $tmp_hoplite_swapping_unit.id}
                            [/else]
                        )}
                    [/else]
                )}

                {CLEAR_VARIABLE tmp_hoplite_swapped_unit}
                {CLEAR_VARIABLE tmp_hoplite_swapping_unit}
                {CLEAR_VARIABLE tmp_return_movecost}
                {CLEAR_VARIABLE tmp_return_passable}
            [/command]
        [/set_menu_item]

#ifdef MULTIPLAYER
        [set_menu_item]
            id=hoplite_swapplayer
            description= _ "Swap places with your teammate."
            [show_if]
                [have_unit]
                    id=Hoplite,Hoplite2
                    x,y=$x1,$y1
                    side=$side_number
                    [filter_location]
                        [filter]
                            id=Hoplite,Hoplite2
                            [not]
                                side=$side_number
                            [/not]
                        [/filter]
                        radius=1
                    [/filter_location]
                [/have_unit]
                [or]
                    [have_unit]
                        id=Hoplite,Hoplite2
                        x,y=$x1,$y1
                        [not]
                            side=$side_number
                        [/not]
                        [filter_location]
                            [filter]
                                id=Hoplite,Hoplite2
                                side=$side_number
                            [/filter]
                            radius=1
                        [/filter_location]
                    [/have_unit]
                [/or]
            [/show_if]
            [command]
                [store_unit]
                    [filter]
                        id=Hoplite,Hoplite2
                        [not]
                            side=$side_number
                        [/not]
                    [/filter]
                    variable=tmp_hoplite_swapped_unit
                    kill=no
                [/store_unit]
                [store_unit]
                    [filter]
                        id=Hoplite,Hoplite2
                        side=$side_number
                    [/filter]
                    variable=tmp_hoplite_swapping_unit
                    kill=no
                [/store_unit]
                #sets tmp_return_movecost and tmp_return_passable variables, the latter of which is used for the code:
                {SPARTAN_CHECK_MOVECOST $tmp_hoplite_swapping_unit.id $x1 $y1}

                #this is relatively rare, but possible if for example one player has Swimming upgrade, but the other does not
                {IF_VAR tmp_return_passable equals no (
                    [then]
                        [print]
                            text= _ "Can't move onto this terrain!"
                            size=20
                            red=255
                            duration=2000
                        [/print]
                    [/then]
                    [else]
                        #make sure the other player can move to player position too
                        {SPARTAN_CHECK_MOVECOST $tmp_hoplite_swapped_unit.id $tmp_hoplite_swapping_unit.x $tmp_hoplite_swapping_unit.y}
                        {IF_VAR tmp_return_passable equals no (
                            [then]
                                [print]
                                    text= _ "Teammate can't move onto your tile's terrain!"
                                    size=20
                                    red=255
                                    duration=2000
                                [/print]
                            [/then]
                            [else]
                                {HOPLITE_SWAP (
                                    side=$side_number
                                    canrecruit=yes
                                ) (
                                    side=$hoplite_playerside
                                    [not]
                                        side=$side_number
                                    [/not]
                                    canrecruit=yes
                                )}
                                {HOPLITE_UPDATE_TARGETHEXES_BY_ID $tmp_hoplite_swapped_unit.id}
                                #            {HOPLITE_UPDATE_TARGETHEXES_BY_ID $tmp_hoplite_swapping_unit.id}
                            [/else]
                        )}
                    [/else]
                )}
                {CLEAR_VARIABLE tmp_hoplite_swapped_unit}
                #            {CLEAR_VARIABLE tmp_hoplite_swapping_unit}
                {CLEAR_VARIABLE tmp_return_movecost}
                {CLEAR_VARIABLE tmp_return_passable}
            [/command]
        [/set_menu_item]
#endif
    [/event]
    [event]
        name=die
        first_time_only=no
        [filter]
            side=$hoplite_playerside
            canrecruit=yes
        [/filter]
#ifdef MULTIPLAYER
        [message]
            id=Hoplite,Hoplite2
            [not]
                side=$unit.side
            [/not]
            message=_"$protagonist_name$unit.side||? No, no, no, $protagonist_name$unit.side||, don't die, please!"
        [/message]
#endif

        # wmllint: recognize Elizabeth
        {ELIZABETH_LINE hoplite_death (
            {IF_VAR hoplite_depth less_than 0 (
                [then]
                    [message]
                        speaker=Elizabeth
                        message=_"Wait, no! Get up, please! You can't die just yet or we're all doomed! ...$protagonist_name$unit.side||?!"
                    [/message]
                [/then]
                [else]
                    [message]
                        speaker=Elizabeth
                        message=_"N-No! Oh lords of light please, not him! Please, $protagonist_name$unit.side||, please stand up...!"
                    [/message]
                [/else]
            )}
        )}
        # wmllint: recognize Algadur
        {ALGADUR_LINE hoplite_death (
            [message]
                speaker=Algadur
                message=_"$protagonist_name$unit.side||? Oi, get up, $protagonist_name$unit.side||! Ye can't just die here, get up! Please.. I-I.. I haven't even repaid me debt to ya.. I can't just let me friend die!"
            [/message]
        )}

        [if]
            [have_unit]
                # wmllint: recognize Mentor
                id=Mentor
            [/have_unit]
            [and]
                {VARIABLE_CONDITIONAL hoplite_tutorial equals yes}
            [/and]
            [then]
                [message]
                    speaker=Mentor
                    message=_"(facepalms)"
                [/message]
                {ACHIEVEMENT_MESSAGE_LONE tutorial_death $unit.side}
                {SPARTAN_FORCE_ACHIEVEMENT_UPDATE_ON_NEXT_RELOAD}
            [/then]
        [/if]

        #if ironman is enabled, prevent reloading the save from the same turn as you lost by increasing the minimum turn by 1

        {IF_VAR spartan_ironman equals yes (
        [then]
            {VARIABLE_OP spartan_ironman_latest_turn add 1}
            {SPARTAN_IRONMAN_UPDATE_TURN}
        [/then]
        )}

        {SPARTAN_SMOOTH_REPLACE_MUSIC silence.ogg 1000 0}
        {SPARTAN_PSEUDO_END_SCREEN _"The End?"}
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]

    #events from other files:
    {HOPLITE_ABILITY_EVENTS}
    {SPARTAN_LEVEL_GENERATION_EVENTS}
    {SPARTAN_UPGRADE_EVENTS}
    {SPARTAN_MISC_EVENTS}
    {SPARTAN_COMPANION_DIALOG_EVENTS}
    {HOPLITE_INFO_MENU}
    {SPARTAN_FORGE_EVENTS}
    #secret hoplite debug menu (the menu is accessed by having wesnoth debug enabled or starting in sandbox mode):
    {HOPLITE_DEBUG_MENU}
    {HOPLITE_ACHIEVEMENT_EVENTS}
    {HOPLITE_ORB_SHOP_EVENTS}
    {SPARTAN_TUTORIAL_EVENTS}
[/scenario]
