#textdomain wesnoth-Hoplite

#define TARGETUNITS_FILTER_PART_NEW VAR DIR
    [or]
        #todo: add an enemy side filter with [filter_side]
        side=$hoplite_playerside,$hoplite_allyside
        [filter_location]
            find_in=$ranged_targetlocs{DIR}#TODO: make it checked by id too
        [/filter_location]
    [/or]
#enddef

#define STORE_TARGETLOCS_PART_NEW VAR DIR DISTANCE BLINDSPOT
    {VARIABLE previousloc.x ${VAR}.x}
    {VARIABLE previousloc.y ${VAR}.y}
    {VARIABLE blindspot_index -1}
    {REPEAT {BLINDSPOT} (
        [store_locations]
            terrain=!,Xu*,Xo*
            [filter_adjacent_location]
                x,y=$previousloc.x,$previousloc.y
                adjacent={DIR}
            [/filter_adjacent_location]
            variable=ranged_blindspots{VAR}{DIR}
            include_borders=no
            mode=append
        [/store_locations]
        {VARIABLE_OP blindspot_index add 1}
        {IF_VAR ranged_blindspots{DIR}[$blindspot_index].x greater_than 0 (
        [then]
            {VARIABLE previousloc.x $ranged_blindspots{DIR}[$blindspot_index].x}
            {VARIABLE previousloc.y $ranged_blindspots{DIR}[$blindspot_index].y}
        [/then]
        )}
    )}

    {VARIABLE range_truerange {DISTANCE}}
    {VARIABLE_OP ranged_truerange sub {BLINDSPOT}}
    {VARIABLE targetloc_index -1}

    {REPEAT $ranged_truerange (
        [store_locations]
            terrain=!,Xu*,Xo*
            [filter_adjacent_location]
                x,y=$previousloc.x,$previousloc.y
                adjacent={DIR}
            [/filter_adjacent_location]
            variable=ranged_targetlocs{DIR}
            include_borders=no
            mode=append
        [/store_locations]
        {VARIABLE_OP targetloc_index add 1}
        {IF_VAR ranged_targetlocs{DIR}[$targetloc_index].x greater_than 0 (
        [then]
            {VARIABLE previousloc.x $ranged_targetlocs{DIR}[$targetloc_index].x}
            {VARIABLE previousloc.y $ranged_targetlocs{DIR}[$targetloc_index].y}
        [/then]
        )}
    )}
#enddef

#define HOPLITE_IFHAVELOC_NEW LOC1 DIR DISTANCE BLINDSPOT STORELOC
    [store_locations]
        [filter_adjacent_location]
            x,y={LOC1}
            adjacent={DIR}
        [/filter_adjacent_location]
        variable=targethex_test
        include_borders=no
    [/store_locations]
    [if]
        [have_location]
            x=$targethex_test.x
            y=$targethex_test.y
        [not]
            terrain=Xu*,Xo*
        [/not]
        [filter_adjacent_location]
                x,y={LOC1}
        [/filter_adjacent_location]
#            [and]
#                x,y={LOC1}
#                radius=1
#            [/and]
        [/have_location]
    [and]
        [have_location]
            x=$targethex_test.x
            y=$targethex_test.y
        [/have_location]
    [/and]
    [and]
        [have_location]
            x,y={LOC1}
        terrain=!,Xu*,Xo*
        [/have_location]
    [/and]
        [then]
            {STORELOC}
        [/then]
        [else]
        [/else]
    [/if]
    {CLEAR_VARIABLE targethex_test}
#enddef

#define STORE_TARGETHEX_LOC_NEW VAR DISTANCE BLINDSPOT
    {STORE_TARGETLOCS_PART_NEW {VAR} n {DISTANCE} {BLINDSPOT}}
    {STORE_TARGETLOCS_PART_NEW {VAR} ne {DISTANCE} {BLINDSPOT}}
    {STORE_TARGETLOCS_PART_NEW {VAR} nw {DISTANCE} {BLINDSPOT}}
    {STORE_TARGETLOCS_PART_NEW {VAR} s {DISTANCE} {BLINDSPOT}}
    {STORE_TARGETLOCS_PART_NEW {VAR} se {DISTANCE} {BLINDSPOT}}
    {STORE_TARGETLOCS_PART_NEW {VAR} sw {DISTANCE} {BLINDSPOT}}
#enddef

#define TARGETUNITS_FILTER_NEW VAR
    {TARGETUNITS_FILTER_PART_NEW {VAR} n}
    {TARGETUNITS_FILTER_PART_NEW {VAR} ne}
    {TARGETUNITS_FILTER_PART_NEW {VAR} nw}
    {TARGETUNITS_FILTER_PART_NEW {VAR} s}
    {TARGETUNITS_FILTER_PART_NEW {VAR} se}
    {TARGETUNITS_FILTER_PART_NEW {VAR} sw}
#enddef

#define ABILITY_HOPLITE_RANGED ID ATTACK_INDEX RANGE BLINDSPOT ONHIT_EFFECTS
    [dummy]
        id=hoplite_ranged{ID}
        name= _ "ranged attack"
        description=_"TODO: add description"
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=new turn
    id=rangedcombat{ID}_aim
    first_time_only=no

    {CHATMSG "reworked ranged aim"}

    [store_unit]
        [filter]
            ability=hoplite_ranged{ID}
            [not]
                [filter_wml]
                    [status]
                        slowed=yes
                    [/status]
                [/filter_wml]
                [or]
                    ability=hoplite_ranged_cooldown
                [/or]
            [/not]
        [/filter]
        variable=rangedunit_aiming_{ID}
        kill=no
    [/store_unit]

    [foreach]
        array=rangedunit_aiming_{ID}
        index_var=a
        [do]
    {STORE_TARGETHEX_LOC_NEW this_item {RANGE} {BLINDSPOT}}
    [store_unit]
        [filter]
            [filter_side]
                [enemy_of]
                    side=$this_item.side
                [/enemy_of]
            [/filter_side]
            {TARGETUNITS_FILTER_NEW this_item}
            [not]
                ability_type_active=hides
            [/not]
        [/filter]
        variable=hoplite_loc
        kill=no
    [/store_unit]
    {RANDOM 0.."$($hoplite_loc.length| - 1)"}
    {VARIABLE rangedunit_{ID}_hopliteloc_x $hoplite_loc[$random].x}
    {VARIABLE rangedunit_{ID}_hopliteloc_y $hoplite_loc[$random].y}
    [animate_unit]
        flag=standing
        [facing]
            [filter]
                x=$rangedunit_{ID}_hopliteloc_x
                y=$rangedunit_{ID}_hopliteloc_y
            [/filter]
        [/facing]
        [filter]
            x=$this_item.x
            y=$this_item.y
        [/filter]
    [/animate_unit]

    [lua]
        code=<<

        local args = ...

        --direction is intentionally reversed for aiming
        --                        local dir = wesnoth.map.get_relative_dir({x = args.x1, y = args.y1},{x = args.x2, y = args.y2})
        local dir = wesnoth.map.get_relative_dir({x = args.x2, y = args.y2},{x = args.x1, y = args.y1})
        wesnoth.set_variable("tmp_ranged_dir", dir)

        >>
        [args]
            x1=$this_item.x
            y1=$this_item.y
            x2=$rangedunit_{ID}_hopliteloc_x
            y2=$rangedunit_{ID}_hopliteloc_y
        [/args]
    [/lua]

    [if]
        [have_unit]
            [filter_side]
                [enemy_of]
                    side=$this_item.side
                [/enemy_of]
            [/filter_side]
            [filter_location]
                find_in=ranged_targetlocs$tmp_ranged_dir
            [/filter_location]
            [not]
                ability_type_active=hides
            [/not]
        [/have_unit]
        [then]

            [foreach]
                array=ranged_targetlocs$tmp_ranged_dir
                index_var=e
                [do]

                [item]
                    x,y=$this_item.x,$this_item.y
                    image="misc/targethex-archer.png"
                [/item]

                [/do]
            [/foreach]

            [sound]
                name=magic-dark-big-miss.ogg
            [/sound]
            [object]
                silent=yes
                duration=turn
                [filter]
                    find_in=this_item
                [/filter]
                [effect]
                    apply_to=new_ability
                    [abilities]
                        [dummy]
                            id=hoplite_charging
                        [/dummy]
                    [/abilities]
                [/effect]
            [/object]
            {MODIFY_UNIT id=$this_item.id moves 0}
            {MODIFY_UNIT id=$this_item.id max_moves 0}
        [/then]
    [/if]

        [/do]
    [/foreach]


#   {IF_VAR rangedunit_{ID}.length greater_than 0 (
#   [then]
    {FOREACH rangedunit_{ID} a}


    {NEXT a}
    {CLEAR_VARIABLE rangedunit_aiming_{ID}}
[/event]
#TODO: uncomment and rework
#[event]
#    name=side turn
#    id=rangedcombat{ID}
#    {CHATMSG "reworked ranged combat"}
#    first_time_only=no
#    [if]
#    [have_unit]
#        ability=hoplite_ranged{ID}
#    [/have_unit]
#    [then]
#    [store_unit]
#        [filter]
#            ability=hoplite_ranged{ID}
#            [and]
#                ability=hoplite_charging
#            [/and]
#            side=$side_number
#            [not]
#                [filter_wml]
#                    [status]
#                        slowed=yes
#                    [/status]
#                [/filter_wml]
#            [/not]
#        [/filter]
#        variable=rangedunit_{ID}
#        kill=no
#    [/store_unit]
##   {IF_VAR rangedunit_{ID}.length greater_than 0 (
##   [then]
#    {FOREACH rangedunit_{ID} a}
#        [if]
#            [have_unit]
#                id=$rangedunit_{ID}[$a].id
#                [not]
#                    ability=hoplite_ranged_cooldown
#                [/not]
#            [/have_unit]
#            [then]
#                [animate_unit]
#                    flag=idle
#                    [facing]
#                        [filter]
#                            id=Hoplite
#                        [/filter]
#                    [/facing]
#                    [filter]
#                        x=$rangedunit_{ID}[$a].x
#                        y=$rangedunit_{ID}[$a].y
#                    [/filter]
#                [/animate_unit]
#                [remove_item]
#                    image=misc/targethex-archer.png
#                    x,y=$targethex_rangedunit_{ID}2[$a].x,$targethex_rangedunit_{ID}2[$a].y
#                [/remove_item]
#                [remove_item]
#                    image=misc/targethex-archer.png
#                    x,y=$targethex_rangedunit_{ID}3[$a].x,$targethex_rangedunit_{ID}3[$a].y
#                [/remove_item]
#                [remove_item]
#                    image=misc/targethex-archer.png
#                    x,y=$targethex_rangedunit_{ID}4[$a].x,$targethex_rangedunit_{ID}4[$a].y
#                [/remove_item]
#                [store_unit]
#                    [filter]
#                        side=$hoplite_playerside,$hoplite_allyside
#                        x,y=$targethex_rangedunit_{ID}2[$a].x,$targethex_rangedunit_{ID}2[$a].y
#                        [not]
#                            ability_type_active=hides
#                        [/not]
#                        [or]
#                            side=$hoplite_playerside,$hoplite_allyside
#                            x,y=$targethex_rangedunit_{ID}3[$a].x,$targethex_rangedunit_{ID}3[$a].y
#                            [not]
#                                ability_type_active=hides
#                            [/not]
#                        [/or]
#                        [or]
#                            side=$hoplite_playerside,$hoplite_allyside
#                            x,y=$targethex_rangedunit_{ID}4[$a].x,$targethex_rangedunit_{ID}4[$a].y
#                            [not]
#                                ability_type_active=hides
#                            [/not]
#                        [/or]
#                    [/filter]
#                    variable=rangedunit_{ID}_target
#                [/store_unit]
#                {IF_VAR rangedunit_{ID}_target.length greater_than 0 (
#                    [then]
#                        [fire_event]
#                            name=attack#to trigger teleportaway event
#                            [primary_unit]
#                                id=$rangedunit_{ID}[$a].id
#                            [/primary_unit]
#                            [secondary_unit]
#                                x,y=$targethex_rangedunit_{ID}2[$a].x,$targethex_rangedunit_{ID}2[$a].y
#                                [not]
#                                    ability_type_active=hides
#                                [/not]
#                                [or]
#                                    x,y=$targethex_rangedunit_{ID}3[$a].x,$targethex_rangedunit_{ID}3[$a].y
#                                    [not]
#                                        ability_type_active=hides
#                                    [/not]
#                                [/or]
#                                [or]
#                                    x,y=$targethex_rangedunit_{ID}4[$a].x,$targethex_rangedunit_{ID}4[$a].y
#                                    [not]
#                                        ability_type_active=hides
#                                    [/not]
#                                [/or]                                
#                            [/secondary_unit]
#                            [primary_attack]
#                                name=$rangedunit_{ID}[$a].attack[{ATTACK_INDEX}].name
#                                damage=$rangedunit_{ID}[$a].attack[{ATTACK_INDEX}].damage
#                                type=$rangedunit_{ID}[$a].attack[{ATTACK_INDEX}].type
#                            [/primary_attack]
#                        [/fire_event]
#                        [harm_unit]
#                            [filter]
#                                id=$rangedunit_{ID}_target[0].id
#                                x,y=$targethex_rangedunit_{ID}2[$a].x,$targethex_rangedunit_{ID}2[$a].y
#                                [not]
#                                    ability_type_active=hides
#                                [/not]
#                                [or]
#                                    id=$rangedunit_{ID}_target[0].id
#                                    x,y=$targethex_rangedunit_{ID}3[$a].x,$targethex_rangedunit_{ID}3[$a].y
#                                    [not]
#                                        ability_type_active=hides
#                                    [/not]
#                                [/or]
#                                [or]
#                                    id=$rangedunit_{ID}_target[0].id
#                                    x,y=$targethex_rangedunit_{ID}4[$a].x,$targethex_rangedunit_{ID}4[$a].y
#                                    [not]
#                                        ability_type_active=hides
#                                    [/not]
#                                [/or]
#                            [/filter]
#                            [filter_second]
#                                id=$rangedunit_{ID}[$a].id
#                            [/filter_second]
#                            [primary_attack]
#                                name=$rangedunit_{ID}[$a].attack[{ATTACK_INDEX}].name
#                            [/primary_attack]
#                            amount=$rangedunit_{ID}[$a].attack[{ATTACK_INDEX}].damage
#                            damage_type=$rangedunit_{ID}[$a].attack[{ATTACK_INDEX}].type
#                            alignment=$unit.alignment
#                            fire_event=yes
#                            animate=yes
#                            delay=0
#                            experience=no
#                        [/harm_unit]
#                        [fire_event]
#                        id=hoplite_adrenaline
#                    [/fire_event]
#                    [/then]
#                )}
#                {MODIFY_UNIT id=$rangedunit_{ID}[$a].id max_moves 1}
#                {MODIFY_UNIT id=$rangedunit_{ID}[$a].id moves 1}
#                [object]
#                    silent=yes
#                    duration=turn
#                    [filter]
#                        find_in=rangedunit_{ID}[$a]
#                    [/filter]
#                    [effect]
#                        apply_to=new_ability
#                        [abilities]
#                            [dummy]
#                                id=ability=hoplite_ranged_cooldown
#                            [/dummy]
#                        [/abilities]
#                    [/effect]
#                [/object]
#                {CLEAR_VARIABLE rangedunit_{ID}[$a]}
#                {CLEAR_VARIABLE rangedunit_{ID}_target}
#                {CLEAR_VARIABLE targethex_rangedunit_{ID}1[$a]}
#                {CLEAR_VARIABLE targethex_rangedunit_{ID}2[$a]}
#                {CLEAR_VARIABLE targethex_rangedunit_{ID}3[$a]}
#                {CLEAR_VARIABLE targethex_rangedunit_{ID}4[$a]}
#            [/then]
#        [/if]
#    {NEXT a}
#    [/then]
#    [/if]
##   [/then]
##   )}
#    {CLEAR_VARIABLE hoplite_loc}
#    {CLEAR_VARIABLE rangedunit_{ID}}
#[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef