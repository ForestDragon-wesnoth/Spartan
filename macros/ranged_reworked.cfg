#textdomain wesnoth-Hoplite

#define TARGETUNITS_FILTER_PART_NEW VAR DIR
    [or]
        #todo: add an enemy side filter with [filter_side]
        side=$hoplite_playerside,$hoplite_allyside
        [filter_location]
            find_in=$ranged_targetlocs{DIR}#TODO: make it checked by id too
        [/filter_location]
    [/or]
#enddef

#define STORE_TARGETLOCS_PART_NEW VAR DIR DISTANCE BLINDSPOT
    {VARIABLE previousloc.x ${VAR}.x}
    {VARIABLE previousloc.y ${VAR}.y}
    {VARIABLE blindspot_index -1}
    {REPEAT {BLINDSPOT} (
        [store_locations]
            terrain=!,Xu*,Xo*
            [filter_adjacent_location]
                x,y=$previousloc.x,$previousloc.y
                adjacent={DIR}
            [/filter_adjacent_location]
            variable=ranged_blindspots{DIR}
            include_borders=no
            mode=append
        [/store_locations]
        {VARIABLE_OP blindspot_index add 1}
        {IF_VAR ranged_blindspots{DIR}[$blindspot_index].x greater_than 0 (
        [then]
            {VARIABLE previousloc.x $ranged_blindspots{DIR}[$blindspot_index].x}
            {VARIABLE previousloc.y $ranged_blindspots{DIR}[$blindspot_index].y}
        [/then]
        )}
    )}

    {VARIABLE ranged_truerange {DISTANCE}}
    {VARIABLE_OP ranged_truerange sub {BLINDSPOT}}
    {VARIABLE targetloc_index -1}

    {REPEAT $ranged_truerange (
        [store_locations]
            terrain=!,Xu*,Xo*
            [filter_adjacent_location]
                x,y=$previousloc.x,$previousloc.y
                adjacent={DIR}
            [/filter_adjacent_location]
            variable=ranged_targetlocs{DIR}
            include_borders=no
            mode=append
        [/store_locations]
        {VARIABLE_OP targetloc_index add 1}
        {IF_VAR ranged_targetlocs{DIR}[$targetloc_index].x greater_than 0 (
        [then]
            {VARIABLE previousloc.x $ranged_targetlocs{DIR}[$targetloc_index].x}
            {VARIABLE previousloc.y $ranged_targetlocs{DIR}[$targetloc_index].y}
        [/then]
        )}
    )}
#enddef

#define CLEAR_DIRECTIONAL_VARS VAR
{CLEAR_VARIABLE {VAR}n}
{CLEAR_VARIABLE {VAR}ne}
{CLEAR_VARIABLE {VAR}nw}
{CLEAR_VARIABLE {VAR}s}
{CLEAR_VARIABLE {VAR}se}
{CLEAR_VARIABLE {VAR}sw}
#enddef

#define HOPLITE_CLEAR_TMP_TARGETHEXES
    {CLEAR_DIRECTIONAL_VARS ranged_blindspots}
    {CLEAR_DIRECTIONAL_VARS ranged_targetlocs}
#enddef

#define HOPLITE_REMOVE_CURRENT_TARGEHEX
    [set_variables]
        name=tmp_remove_item_tag_container
        [value]
            x=$hoplite_targethexes[$c].x
            y=$hoplite_targethexes[$c].y
            image=$hoplite_targethexes[$c].name
        [/value]
    [/set_variables]

    #am using [insert_tag] instead of just remove_item, otherwise the game doesn't substitute the id variable for some reason

    [insert_tag]
        name=remove_item
        variable=tmp_remove_item_tag_container
    [/insert_tag]

    {CLEAR_VARIABLE tmp_remove_item_tag_container}
#enddef

#define HOPLITE_CLEAR_TARGETHEXES_BY_ID ID
#using a while loop (original deprecated FOREACH implementation) instead of foreach as it's better for deleting array elements
{VARIABLE c 0}
[while]
    [variable]
    name=c
    less_than=$hoplite_targethexes.length
    [/variable]
    [do]
        {IF_VAR hoplite_targethexes[$c].unit_id equals {ID} (
            [then]
                [chat]
                    message=$hoplite_targethex$hoplite_targethexes[$c].unit_id
                [/chat]
                {HOPLITE_REMOVE_CURRENT_TARGEHEX}
                {CLEAR_VARIABLE hoplite_targethexes[$c]}
                {VARIABLE_OP c sub 1}#this is to fix weirdness when something in an array is deleted
            [/then]
        )}
    [set_variable]
    name=c
    add=1
    [/set_variable]
    [/do]
[/while]
{CLEAR_VARIABLE c}
#enddef

#TODO: use this in level generation code for going into next depth

#define HOPLITE_CLEAR_ALL_TARGETHEXES
#using a while loop (original deprecated FOREACH implementation) instead of foreach as it's better for deleting array elements
{VARIABLE c 0}
[while]
    [variable]
    name=c
    less_than=$hoplite_targethexes.length
    [/variable]
    [do]
        {HOPLITE_REMOVE_CURRENT_TARGEHEX}
        {CLEAR_VARIABLE hoplite_targethexes[$c]}
#        {VARIABLE_OP c sub 1}#this is to fix weirdness when something in an array is deleted
#    [set_variable]
#    name=c
#    add=1
#    [/set_variable]
    [/do]
[/while]
{CLEAR_VARIABLE c}
#enddef

#define HOPLITE_CLEAR_TARGETHEXES_IF_UNIT_NOT_FOUND
#using a while loop (original deprecated FOREACH implementation) instead of foreach as it's better for deleting array elements
{VARIABLE c 0}
[while]
    [variable]
    name=c
    less_than=$hoplite_targethexes.length
    [/variable]
    [do]
        [if]
        [have_unit]
            id=$hoplite_targethexes[$c].unit_id
        [/have_unit]
        [else]
            {HOPLITE_REMOVE_CURRENT_TARGEHEX}            
            {CLEAR_VARIABLE hoplite_targethexes[$c]}
            {VARIABLE_OP c sub 1}#this is to fix weirdness when something in an array is deleted
        [/else]
        [/if]
    [set_variable]
    name=c
    add=1
    [/set_variable]
    [/do]
[/while]
{CLEAR_VARIABLE c}
#enddef

#define HOPLITE_IFHAVELOC_NEW LOC1 DIR DISTANCE BLINDSPOT STORELOC
    [store_locations]
        [filter_adjacent_location]
            x,y={LOC1}
            adjacent={DIR}
        [/filter_adjacent_location]
        variable=targethex_test
        include_borders=no
    [/store_locations]
    [if]
        [have_location]
            x=$targethex_test.x
            y=$targethex_test.y
        [not]
            terrain=Xu*,Xo*
        [/not]
        [filter_adjacent_location]
                x,y={LOC1}
        [/filter_adjacent_location]
#            [and]
#                x,y={LOC1}
#                radius=1
#            [/and]
        [/have_location]
    [and]
        [have_location]
            x=$targethex_test.x
            y=$targethex_test.y
        [/have_location]
    [/and]
    [and]
        [have_location]
            x,y={LOC1}
        terrain=!,Xu*,Xo*
        [/have_location]
    [/and]
        [then]
            {STORELOC}
        [/then]
        [else]
        [/else]
    [/if]
    {CLEAR_VARIABLE targethex_test}
#enddef

#define STORE_TARGETHEX_LOC_NEW VAR DISTANCE BLINDSPOT
    {STORE_TARGETLOCS_PART_NEW {VAR} n {DISTANCE} {BLINDSPOT}}
    {STORE_TARGETLOCS_PART_NEW {VAR} ne {DISTANCE} {BLINDSPOT}}
    {STORE_TARGETLOCS_PART_NEW {VAR} nw {DISTANCE} {BLINDSPOT}}
    {STORE_TARGETLOCS_PART_NEW {VAR} s {DISTANCE} {BLINDSPOT}}
    {STORE_TARGETLOCS_PART_NEW {VAR} se {DISTANCE} {BLINDSPOT}}
    {STORE_TARGETLOCS_PART_NEW {VAR} sw {DISTANCE} {BLINDSPOT}}
#enddef

#define TARGETUNITS_FILTER_NEW VAR
    {TARGETUNITS_FILTER_PART_NEW {VAR} n}
    {TARGETUNITS_FILTER_PART_NEW {VAR} ne}
    {TARGETUNITS_FILTER_PART_NEW {VAR} nw}
    {TARGETUNITS_FILTER_PART_NEW {VAR} s}
    {TARGETUNITS_FILTER_PART_NEW {VAR} se}
    {TARGETUNITS_FILTER_PART_NEW {VAR} sw}
#enddef

#define ABILITY_HOPLITE_RANGED ID ATTACK_INDEX RANGE BLINDSPOT TARGETHEX_IMG ONHIT_EFFECTS
    [dummy]
        id=hoplite_ranged{ID}
        name= _ "ranged attack"
        description=_"TODO: add description"
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=new turn
    id=rangedcombat{ID}_aim
    first_time_only=no

    {CHATMSG "reworked ranged aim"}

    [store_unit]
        [filter]
            ability=hoplite_ranged{ID}
            [not]
                [filter_wml]
                    [status]
                        slowed=yes
                    [/status]
                [/filter_wml]
                [or]
                    ability=hoplite_ranged_cooldown
                [/or]
            [/not]
        [/filter]
        variable=rangedunit_aiming_{ID}
        kill=no
    [/store_unit]

    [foreach]
        array=rangedunit_aiming_{ID}
        index_var=a
        [do]
    {STORE_TARGETHEX_LOC_NEW this_item {RANGE} {BLINDSPOT}}
    [store_unit]
        [filter]
            [filter_side]
                [enemy_of]
                    side=$this_item.side
                [/enemy_of]
            [/filter_side]
            {TARGETUNITS_FILTER_NEW this_item}
            [not]
                ability_type_active=hides
            [/not]
        [/filter]
        variable=hoplite_loc
        kill=no
    [/store_unit]
    {RANDOM 0.."$($hoplite_loc.length| - 1)"}
    {VARIABLE rangedunit_{ID}_hopliteloc_x $hoplite_loc[$random].x}
    {VARIABLE rangedunit_{ID}_hopliteloc_y $hoplite_loc[$random].y}
    [animate_unit]
        flag=standing
        [facing]
            [filter]
                x=$rangedunit_{ID}_hopliteloc_x
                y=$rangedunit_{ID}_hopliteloc_y
            [/filter]
        [/facing]
        [filter]
            x=$this_item.x
            y=$this_item.y
        [/filter]
    [/animate_unit]

    [if]
    {VARIABLE_CONDITIONAL hoplite_loc.length greater_than 0}
    [then]

    [lua]
        code=<<

        local args = ...

        --direction is intentionally reversed for aiming
        --                        local dir = wesnoth.map.get_relative_dir({x = args.x1, y = args.y1},{x = args.x2, y = args.y2})
        local dir = wesnoth.map.get_relative_dir({x = args.x2, y = args.y2},{x = args.x1, y = args.y1})
        wesnoth.set_variable("tmp_ranged_dir", dir)

        >>
        [args]
            x1=$this_item.x
            y1=$this_item.y
            x2=$rangedunit_{ID}_hopliteloc_x
            y2=$rangedunit_{ID}_hopliteloc_y
        [/args]
    [/lua]

    [/then]
    [/if]


    [if]
        [have_unit]
            [filter_side]
                [enemy_of]
                    side=$this_item.side
                [/enemy_of]
            [/filter_side]
            [filter_location]
                find_in=ranged_targetlocs$tmp_ranged_dir
            [/filter_location]
            [not]
                ability_type_active=hides
            [/not]
        [/have_unit]
        [then]

            [foreach]
                array=ranged_targetlocs$tmp_ranged_dir
                variable=this_item2
                index_var=e
                [do]

                [set_variables]
                    name=tmp_item_tag_container
                    [value]
                        x=$this_item2.x
                        y=$this_item2.y
                        image={TARGETHEX_IMG}
                        name=hoplite_targethex$this_item.id
                    [/value]
                [/set_variables]

                #am using [insert_tag] instead of just item, otherwise the game doesn't substitute the id variable for some reason

                [insert_tag]
                    name=item
                    variable=tmp_item_tag_container
                [/insert_tag]

                {CLEAR_VARIABLE tmp_item_tag_container}

#                [item]
#                    x,y=$this_item2.x,$this_item2.y
#                    image="misc/targethex-archer.png"
#                    name=hoplite_targethex$|this_item.id
#                [/item]

#                [store_locations]
#                    x,y=$this_item2.x,$this_item2.y
#                    variable=$this_item.id|targethexes
#                    mode=append
#                [/store_locations]

                [set_variables]
                    name=hoplite_targethexes
                    mode=append
                    [value]
                        unit_id=$this_item.id
                        x=$this_item2.x
                        y=$this_item2.y
                        name=hoplite_targethex$this_item.id
                    [/value]
                [/set_variables]

                [/do]
            [/foreach]

            [store_items]
                x=0-99
                y=0-99
                variable=stored_items
            [/store_items]

            [sound]
                name=magic-dark-big-miss.ogg
            [/sound]
            [object]
                silent=yes
                duration=turn
                [filter]
                    find_in=this_item
                [/filter]
                [effect]
                    apply_to=new_ability
                    [abilities]
                        [dummy]
                            id=hoplite_charging
                        [/dummy]
                    [/abilities]
                [/effect]
            [/object]
            {MODIFY_UNIT id=$this_item.id moves 0}
            {MODIFY_UNIT id=$this_item.id max_moves 0}
        [/then]
    [/if]

    [delay]
        time=500
    [/delay]

#    {HOPLITE_CLEAR_TARGETHEXES_BY_ID $this_item.id}

    {HOPLITE_CLEAR_TMP_TARGETHEXES}

        [/do]
    [/foreach]


#   {IF_VAR rangedunit_{ID}.length greater_than 0 (
#   [then]
    {FOREACH rangedunit_{ID} a}


    {NEXT a}
    {CLEAR_VARIABLE rangedunit_aiming_{ID}}
[/event]
[event]
    name=side turn,die
    id=hoplite_clear_targethexes
    first_time_only=no
    {HOPLITE_CLEAR_TARGETHEXES_IF_UNIT_NOT_FOUND}
[/event]
[event]
    name=side turn
    id=rangedcombat{ID}
    {CHATMSG "reworked ranged combat"}
    first_time_only=no
    [if]
    [have_unit]
        ability=hoplite_ranged{ID}
    [/have_unit]
    [then]
    [store_unit]
        [filter]
            ability=hoplite_ranged{ID}
            [and]
                ability=hoplite_charging
            [/and]
            side=$side_number
            [not]
                [filter_wml]
                    [status]
                        slowed=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=rangedunit_{ID}
        kill=no
    [/store_unit]
#   {IF_VAR rangedunit_{ID}.length greater_than 0 (
#   [then]
    {FOREACH rangedunit_{ID} a}
        [if]
            [have_unit]
                id=$rangedunit_{ID}[$a].id
                [not]
                    ability=hoplite_ranged_cooldown
                [/not]
            [/have_unit]
            [then]
                [animate_unit]
                    flag=idle
                    [facing]
                        [filter]
                            id=Hoplite
                        [/filter]
                    [/facing]
                    [filter]
                        x=$rangedunit_{ID}[$a].x
                        y=$rangedunit_{ID}[$a].y
                    [/filter]
                [/animate_unit]
                [remove_item]
                    image=misc/targethex-archer.png
                    x,y=$targethex_rangedunit_{ID}2[$a].x,$targethex_rangedunit_{ID}2[$a].y
                [/remove_item]
                [remove_item]
                    image=misc/targethex-archer.png
                    x,y=$targethex_rangedunit_{ID}3[$a].x,$targethex_rangedunit_{ID}3[$a].y
                [/remove_item]
                [remove_item]
                    image=misc/targethex-archer.png
                    x,y=$targethex_rangedunit_{ID}4[$a].x,$targethex_rangedunit_{ID}4[$a].y
                [/remove_item]
                [store_unit]
                    [filter]
                        side=$hoplite_playerside,$hoplite_allyside
                        x,y=$targethex_rangedunit_{ID}2[$a].x,$targethex_rangedunit_{ID}2[$a].y
                        [not]
                            ability_type_active=hides
                        [/not]
                        [or]
                            side=$hoplite_playerside,$hoplite_allyside
                            x,y=$targethex_rangedunit_{ID}3[$a].x,$targethex_rangedunit_{ID}3[$a].y
                            [not]
                                ability_type_active=hides
                            [/not]
                        [/or]
                        [or]
                            side=$hoplite_playerside,$hoplite_allyside
                            x,y=$targethex_rangedunit_{ID}4[$a].x,$targethex_rangedunit_{ID}4[$a].y
                            [not]
                                ability_type_active=hides
                            [/not]
                        [/or]
                    [/filter]
                    variable=rangedunit_{ID}_target
                [/store_unit]
                {IF_VAR rangedunit_{ID}_target.length greater_than 0 (
                    [then]
                        [fire_event]
                            name=attack#to trigger teleportaway event
                            [primary_unit]
                                id=$rangedunit_{ID}[$a].id
                            [/primary_unit]
                            [secondary_unit]
                                x,y=$targethex_rangedunit_{ID}2[$a].x,$targethex_rangedunit_{ID}2[$a].y
                                [not]
                                    ability_type_active=hides
                                [/not]
                                [or]
                                    x,y=$targethex_rangedunit_{ID}3[$a].x,$targethex_rangedunit_{ID}3[$a].y
                                    [not]
                                        ability_type_active=hides
                                    [/not]
                                [/or]
                                [or]
                                    x,y=$targethex_rangedunit_{ID}4[$a].x,$targethex_rangedunit_{ID}4[$a].y
                                    [not]
                                        ability_type_active=hides
                                    [/not]
                                [/or]                                
                            [/secondary_unit]
                            [primary_attack]
                                name=$rangedunit_{ID}[$a].attack[{ATTACK_INDEX}].name
                                damage=$rangedunit_{ID}[$a].attack[{ATTACK_INDEX}].damage
                                type=$rangedunit_{ID}[$a].attack[{ATTACK_INDEX}].type
                            [/primary_attack]
                        [/fire_event]
                        [harm_unit]
                            [filter]
                                id=$rangedunit_{ID}_target[0].id
                                x,y=$targethex_rangedunit_{ID}2[$a].x,$targethex_rangedunit_{ID}2[$a].y
                                [not]
                                    ability_type_active=hides
                                [/not]
                                [or]
                                    id=$rangedunit_{ID}_target[0].id
                                    x,y=$targethex_rangedunit_{ID}3[$a].x,$targethex_rangedunit_{ID}3[$a].y
                                    [not]
                                        ability_type_active=hides
                                    [/not]
                                [/or]
                                [or]
                                    id=$rangedunit_{ID}_target[0].id
                                    x,y=$targethex_rangedunit_{ID}4[$a].x,$targethex_rangedunit_{ID}4[$a].y
                                    [not]
                                        ability_type_active=hides
                                    [/not]
                                [/or]
                            [/filter]
                            [filter_second]
                                id=$rangedunit_{ID}[$a].id
                            [/filter_second]
                            [primary_attack]
                                name=$rangedunit_{ID}[$a].attack[{ATTACK_INDEX}].name
                            [/primary_attack]
                            amount=$rangedunit_{ID}[$a].attack[{ATTACK_INDEX}].damage
                            damage_type=$rangedunit_{ID}[$a].attack[{ATTACK_INDEX}].type
                            alignment=$unit.alignment
                            fire_event=yes
                            animate=yes
                            delay=0
                            experience=no
                        [/harm_unit]
                        [fire_event]
                        id=hoplite_adrenaline
                    [/fire_event]
                    [/then]
                )}
                {MODIFY_UNIT id=$rangedunit_{ID}[$a].id max_moves 1}
                {MODIFY_UNIT id=$rangedunit_{ID}[$a].id moves 1}
                [object]
                    silent=yes
                    duration=turn
                    [filter]
                        find_in=rangedunit_{ID}[$a]
                    [/filter]
                    [effect]
                        apply_to=new_ability
                        [abilities]
                            [dummy]
                                id=ability=hoplite_ranged_cooldown
                            [/dummy]
                        [/abilities]
                    [/effect]
                [/object]
                {CLEAR_VARIABLE rangedunit_{ID}[$a]}
                {CLEAR_VARIABLE rangedunit_{ID}_target}
                {CLEAR_VARIABLE targethex_rangedunit_{ID}1[$a]}
                {CLEAR_VARIABLE targethex_rangedunit_{ID}2[$a]}
                {CLEAR_VARIABLE targethex_rangedunit_{ID}3[$a]}
                {CLEAR_VARIABLE targethex_rangedunit_{ID}4[$a]}
            [/then]
        [/if]
    {NEXT a}
    [/then]
    [/if]
#   [/then]
#   )}
    {CLEAR_VARIABLE hoplite_loc}
    {CLEAR_VARIABLE rangedunit_{ID}}
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef