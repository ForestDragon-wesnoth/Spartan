#textdomain wesnoth-Hoplite

#define ADD_ACHIEVEMENT_TO_LIST ID DESCR
   [set_variables]
       name=hoplite_achievements
       mode=append
       [value]
           id={ID}
           descr={DESCR}
           type=normal
       [/value]
   [/set_variables]
#enddef

#define ADD_ACHIEVEMENT_TO_LIST2 ID GOAL DESCR
   [set_variables]
       name=hoplite_achievements
       mode=append
       [value]
           id={ID}
           descr={DESCR}
           type=progress
           progress_goal={GOAL}
       [/value]
   [/set_variables]
   {IF_VAR {ID}_progress not_equals $emptyvar (
   [else]
       {VARIABLE {ID}_progress1 0}
   [/else]
   )}
#ifdef MULTIPLAYER
   {IF_VAR {ID}_progress not_equals $emptyvar (
   [else]
       {VARIABLE {ID}_progress2 0}
   [/else]
   )}
#endif
#enddef

#simple hidden achievement:
#define ADD_ACHIEVEMENT_TO_LIST3 ID DESCR HIDDEN_DESCR
   [set_variables]
       name=hoplite_achievements
       mode=append
       [value]
           id={ID}
           descr={DESCR}
           hidden_descr={HIDDEN_DESCR}
           type=hidden
       [/value]
   [/set_variables]
#enddef

#hidden with progress achievement:
#define ADD_ACHIEVEMENT_TO_LIST4 ID GOAL DESCR HIDDEN_DESCR
   [set_variables]
       name=hoplite_achievements
       mode=append
       [value]
           id={ID}
           descr={DESCR}
           hidden_descr={HIDDEN_DESCR}
           type=hidden_progress
           progress_goal={GOAL}
       [/value]
   [/set_variables]
   {IF_VAR {ID}_progress not_equals $emptyvar (
   [else]
       {VARIABLE {ID}_progress1 0}
   [/else]
   )}
#ifdef MULTIPLAYER
   {IF_VAR {ID}_progress not_equals $emptyvar (
   [else]
       {VARIABLE {ID}_progress2 0}
   [/else]
   )}
#endif
#enddef

#define ACHIEVEMENT_RETURN_VALUE ID VALUE
[foreach]
    array=hoplite_achievements
    index_var=i
    [do]
    {IF_VAR this_item.id equals {ID} (
    [then]
    {VARIABLE tmp_achievement_return $this_item.{VALUE}}
    [break][/break]#no need to continue the loop after the value is found
    [/then]
    )}
    [/do]
[/foreach]
#enddef

#define ACHIEVEMENT_MESSAGE ID
    {IF_VAR {ID}_complete1 not_equals yes (
    [and]
    {VARIABLE_CONDITIONAL hoplite_noachieve not_equals yes}
    [/and]
    #ifdef MULTIPLAYER
    [or]
    {VARIABLE_CONDITIONAL {ID}_complete2 not_equals yes}
    [and]
    {VARIABLE_CONDITIONAL hoplite_noachieve not_equals yes}
    [/and]
    [/or]
    #endif
        [then]
            [sound]
                name=fanfare-short.wav
            [/sound]
            {ACHIEVEMENT_RETURN_VALUE {ID} descr}
            [object]
                name="Achievement Complete"
                image=misc/laurel.png
                duration=forever
                description=$tmp_achievement_return
                [filter]
                    id=Hoplite
                [/filter]
            [/object]
            {CLEAR_VARIABLE tmp_achievement_return}
            {VARIABLE {ID}_complete1 yes}
            [set_global_variable]
                namespace=spartan
                from_local={ID}_complete1
                to_global={ID}_complete
                side=1
                immediate=yes
            [/set_global_variable]
            #ifdef MULTIPLAYER
            {VARIABLE {ID}_complete2 yes}
            [set_global_variable]
                namespace=spartan
                from_local={ID}_complete2
                to_global={ID}_complete
                side=2
                immediate=yes
            [/set_global_variable]
            #endif
            [fire_event]
                id=spartan_check_if_all_achievements_unlocked
            [/fire_event]
        [/then]
    )}
#enddef

#define CHECKPOINT_MESSAGE TEXT ID FILTER FILTER2 FILTER3
        {IF_VAR {FILTER} {FILTER2} {FILTER3} (
        [and]
            [variable]
                name=hoplite_{ID}_unlocked
                not_equals=yes
            [/variable]
        [/and]
        [then]
            [sound]
                name=fanfare-short.wav
            [/sound]
            [object]
                name="Starting point unlocked"
                image=scenery/trapdoor-open.png
                duration=forever
                description={TEXT}
                [filter]
                    id=Hoplite
                [/filter]
            [/object]
            {VARIABLE hoplite_{ID}_unlocked yes}
            [set_global_variable]
                namespace=spartan
                from_local=hoplite_{ID}_unlocked
                to_global={ID}_unlocked
                side=1#in multiplayer, the depth choice will be in an [options] tag
                immediate=yes
            [/set_global_variable]
        [/then]
        )}
#enddef

#define ACHIEVEMENT_MESSAGE_LONE ID SIDE
    {IF_VAR {ID}_complete{SIDE} not_equals yes (
    [and]
    {VARIABLE_CONDITIONAL hoplite_noachieve not_equals yes}
    [/and]
        [then]
            [sound]
                name=fanfare-short.wav
            [/sound]
            {ACHIEVEMENT_RETURN_VALUE {ID} descr}
            [object]
                name="Achievement Complete"
                image=misc/laurel.png
                duration=forever
                description=$tmp_achievement_return
                [filter]
                    side={SIDE}
                    canrecruit=yes
                [/filter]
            [/object]
            {CLEAR_VARIABLE tmp_achievement_return}
            {VARIABLE {ID}_complete{SIDE} yes}
            [set_global_variable]
                namespace=spartan
                from_local={ID}_complete{SIDE}
                to_global={ID}_complete
                side={SIDE}
                immediate=yes
            [/set_global_variable]
            [fire_event]
                id=spartan_check_if_all_achievements_unlocked
            [/fire_event]
        [/then]
    )}
#enddef

#define HOPLITE_ACHIEVEMENT_DEPTHCHECK
    {IF_VAR hoplite_depth equals 5 (
        [and]
            [variable]
                name=hoplite_killedenemy1
                not_equals=yes
            [/variable]
        [/and]
        [then]
            {ACHIEVEMENT_MESSAGE_LONE pacifist 1}
        [/then]
    )}
#ifdef MULTIPLAYER
    {IF_VAR hoplite_depth equals 5 (
        [and]
            [variable]
                name=hoplite_killedenemy2
                not_equals=yes
            [/variable]
        [/and]
        [then]
            {ACHIEVEMENT_MESSAGE_LONE pacifist 2}
        [/then]
    )}
#endif
    {IF_VAR hoplite_depth equals 10 (
        [and]
            [variable]
                name=turn_number
                less_than_equal_to=110
            [/variable]
        [/and]
        [then]
            {ACHIEVEMENT_MESSAGE speedrun}
        [/then]
    )}
    {IF_VAR hoplite_depth equals 5 (
        [and]
            [variable]
                name=hoplite_upgrades
                less_than=1
            [/variable]
        [/and]
        [and]
            [variable]
                name=hoplite_upgrades1
                less_than=1
            [/variable]
        [/and]
        [and]
            [variable]
                name=hoplite_upgrades2
                less_than=1
            [/variable]
        [/and]
        [then]
            {ACHIEVEMENT_MESSAGE specialist}#message for both, since you can't really have upgrades for only one player
        [/then]
    )}
    {IF_VAR hoplite_depth equals 28 (
        [then]
            {ACHIEVEMENT_MESSAGE depth28}
        [/then]
    )}
    {IF_VAR hoplite_depth equals 51 (
        [then]
            {ACHIEVEMENT_MESSAGE depth51}
        [/then]
    )}
    {IF_VAR hoplite_depth equals 100 (
        [then]
            {ACHIEVEMENT_MESSAGE depth100}
        [/then]
    )}
    {IF_VAR hoplite_depth less_than_equal_to -15 (
        [then]
            {ACHIEVEMENT_MESSAGE depthminus15}
        [/then]
    )}
#enddef

#define HOPLITE_RETREIVE_ACHIEVEMENT ID
    [get_global_variable]
        namespace=spartan
        from_global={ID}_complete
        to_local={ID}_complete1
        side=1
    [/get_global_variable]
    #ifdef MULTIPLAYER
    [get_global_variable]
        namespace=spartan
        from_global={ID}_complete
        to_local={ID}_complete2
        side=2
    [/get_global_variable]
    #endif
#enddef

#used for debug:
#define HOPLITE_SET_ACHIEVEMENT ID
    {VARIABLE {ID}_complete1 yes}
    [set_global_variable]
        namespace=spartan
        from_local={ID}_complete1
        to_global={ID}_complete
        side=1
        immediate=yes
    [/set_global_variable]
    #ifdef MULTIPLAYER
    {VARIABLE {ID}_complete2 yes}
    [set_global_variable]
        namespace=spartan
        from_local={ID}_complete2
        to_global={ID}_complete
        side=2
        immediate=yes
    [/set_global_variable]
    #endif
#enddef

#define HOPLITE_CLEAR_ACHIEVEMENT ID
    {VARIABLE {ID}_complete no}
    [clear_global_variable]
        namespace=spartan
        global={ID}_complete
        side=$side_number#so that you can't erase your teammate's achievements in debug multiplayer
        immediate=yes
    [/clear_global_variable]
#enddef

#macro for easily applying code to every achievements:
#define HOPLITE_ACHIEVEMENTLIST MACRO
[foreach]
    array=hoplite_achievements
    index_var=i
    [do]
    {HOPLITE_{MACRO} $this_item.id|}#adding the | at the end on purpose, otherwise the variable names would be incorrect
    [/do]
[/foreach]
#enddef

#define HOPLITE_CREATE_ACHIEVEMENT_DIALOG_OPTIONS
[foreach]
    array=hoplite_achievements
    index_var=i
    [do]

    {VARIABLE tmp_achievement_complete $$this_item.id|_complete$side_number||}

    [switch]
        variable=this_item.type
        [case]
            value=normal
            {IF_VAR tmp_achievement_complete equals yes (
            [then]
            {VARIABLE tmp_achievement_icon "misc/laurel.png"}
#            {VARIABLE tmp_achievement_descr _"(Completed) "+$this_item.descr}
            {VARIABLE tmp_achievement_descr $this_item.descr}
            [/then]
            [else]
            {VARIABLE tmp_achievement_icon "misc/laurel-bronze.png~BLIT(misc/red-x.png,28,28)"}
            {VARIABLE tmp_achievement_descr $this_item.descr}
            [/else]
            )}
        [/case]
        [case]
            value=progress
            {IF_VAR tmp_achievement_complete equals yes (
            [then]
            {VARIABLE tmp_achievement_icon "misc/laurel.png"}
#            {VARIABLE tmp_achievement_descr _"(Completed) "+$this_item.descr}
            {VARIABLE tmp_achievement_descr $this_item.descr}
            [/then]
            [else]
            {VARIABLE tmp_achievement_icon "misc/laurel-bronze.png~BLIT(misc/red-x.png,28,28)"}
            {VARIABLE tmp_achievement_descr "("+$$this_item.id|_progress$side_number||+"/$this_item.progress_goal|) "+$this_item.descr}
            [/else]
            )}
        [/case]
        [case]
            value=hidden
            {IF_VAR tmp_achievement_complete equals yes (
            [then]
            {VARIABLE tmp_achievement_icon "misc/laurel.png"}
#            {VARIABLE tmp_achievement_descr _"(Completed) "+$this_item.descr}
            {VARIABLE tmp_achievement_descr $this_item.descr}
            [/then]
            [else]
            {VARIABLE tmp_achievement_icon "units/unknown-unit.png~RC(magenta>white)"}
            {VARIABLE tmp_achievement_descr $this_item.hidden_descr}

            {IF_VAR $this_item.id|_hintunlocked$side_number not_equals yes (
            [then]
                {VARIABLE tmp_achievement_can_unlock_hint yes}
            [/then]
            )}

            [/else]
            )}
        [/case]
        [case]
            value=hidden_progress
            {IF_VAR tmp_achievement_complete equals yes (
            [then]
            {VARIABLE tmp_achievement_icon "misc/laurel.png"}
#            {VARIABLE tmp_achievement_descr _"(Completed) "+$this_item.descr}
            {VARIABLE tmp_achievement_descr $this_item.descr}
            [/then]
            [else]
            {VARIABLE tmp_achievement_icon "units/unknown-unit.png~RC(magenta>white)"}
            {VARIABLE tmp_achievement_descr "("+$$this_item.id|_progress$side_number||+"/$this_item.progress_goal|) "+$this_item.hidden_descr}

            {IF_VAR $this_item.id|_hintunlocked$side_number not_equals yes (
            [then]
                {VARIABLE tmp_achievement_can_unlock_hint yes}
                {VARIABLE tmp_achievementhidden_prefix "("+$$this_item.id|_progress$side_number||+"/$this_item.progress_goal|) "}
            [/then]
            )}

            [/else]
            )}
        [/case]
    [/switch]

    {CLEAR_VARIABLE tmp_achievement_complete}

    [if]
    {VARIABLE_CONDITIONAL tmp_achievement_can_unlock_hint equals yes}
    [then]
    [set_variables]
        name=hoplite_achievement_options
        mode=append
        [value]
            image=$tmp_achievement_icon
            description=$tmp_achievement_descr|
            [show_if]
                {VARIABLE_CONDITIONAL $this_item.id|_hintunlocked$side_number equals yes}
            [/show_if]
            [command]
            [/command]
        [/value]
    [/set_variables]
    [set_variables]
        name=hoplite_achievement_options
        mode=append
        [value]
            image=$tmp_achievement_icon
            description=$tmp_achievementhidden_prefix|+_"??? (Select to spend <span color='#a456ff'>1 orb of insight</span> to unlock hint)"
            [show_if]
                {VARIABLE_CONDITIONAL $this_item.id|_hintunlocked$side_number not_equals yes}
                [and]
                    {VARIABLE_CONDITIONAL spartan_orbs_of_insight$side_number| greater_than 0}
                [/and]
            [/show_if]
            [command]
                [sound]
                   name=magic-faeriefire.ogg
                [/sound]
                {VARIABLE_OP spartan_orbs_of_insight$side_number sub 1}
                {HOPLITE_SYNC_ORBS_OF_INSIGHT_TO_GLOBAL_VAR}
                {SPARTAN_ADD_ACHIEVEMENT_HINT $this_item.id| $side_number}
            [/command]
        [/value]
    [/set_variables]
    [set_variables]
        name=hoplite_achievement_options
        mode=append
        [value]
            image=$tmp_achievement_icon
            description=$tmp_achievementhidden_prefix|+_"???"
            [show_if]
                {VARIABLE_CONDITIONAL $this_item.id|_hintunlocked$side_number not_equals yes}
                [not]
                    {VARIABLE_CONDITIONAL spartan_orbs_of_insight$side_number| greater_than 0}
                [/not]
            [/show_if]
            [command]
            [/command]
        [/value]
    [/set_variables]
    [/then]
    [else]
    [set_variables]
        name=hoplite_achievement_options
        mode=append
        [value]
            image=$tmp_achievement_icon
            description=$tmp_achievement_descr|
            [command]
            [/command]
        [/value]
    [/set_variables]
    [/else]
    [/if]
    {CLEAR_VARIABLE tmp_achievement_can_unlock_hint}
    {CLEAR_VARIABLE tmp_achievementhidden_prefix}

    [/do]
[/foreach]
#enddef

#define HOPLITE_RAGE_EVENT ID
    [sound]
        name=fire.wav
    [/sound]
    [object]
        silent=yes
        duration=forever
        id=bloodlustIII
        take_only_once=no
        [filter]
            id={ID}
        [/filter]
        [effect]
            apply_to=attack
            increase_damage=5
        [/effect]
        [effect]
            apply_to=image_mod
            add="~CS(0,-40,-50)"
        [/effect]
    [/object]
    [redraw]
    [/redraw]
    [store_unit]
        [filter]
            id={ID}
        [/filter]
        kill=no
        variable=hoplite_enraged
    [/store_unit]

    [unstore_unit]
        variable=hoplite_enraged
        text= _ "Enraged!"
        {COLOR_HARM}
    [/unstore_unit]
#enddef

#define HOPLITE_GET_ORBS_OF_INSIGHT
    [get_global_variable]
        namespace=spartan
        from_global=orbs_of_insight
        to_local=spartan_orbs_of_insight1
        side=1
    [/get_global_variable]
    {IF_VAR spartan_orbs_of_insight1 greater_than 0 (
    [else]
        {VARIABLE spartan_orbs_of_insight1 0}
    [/else]
    )}
    #ifdef MULTIPLAYER
    [get_global_variable]
        namespace=spartan
        from_global=orbs_of_insight
        to_local=spartan_orbs_of_insight2
        side=2
    [/get_global_variable]
    {IF_VAR spartan_orbs_of_insight2 greater_than 0 (
    [else]
        {VARIABLE spartan_orbs_of_insight2 0}
    [/else]
    )}
    #endif
#enddef

#define HOPLITE_SYNC_ORBS_OF_INSIGHT_TO_GLOBAL_VAR
    [set_global_variable]
        namespace=spartan
        from_local=spartan_orbs_of_insight1
        to_global=orbs_of_insight
        side=1
        immediate=yes
    [/set_global_variable]
    #ifdef MULTIPLAYER
    [set_global_variable]
        namespace=spartan
        from_local=spartan_orbs_of_insight2
        to_global=orbs_of_insight
        side=2
        immediate=yes
    [/set_global_variable]
    #endif
#enddef

#define SPARTAN_ADD_INSIGHT_ORB_WITH_POPUP
    {VARIABLE_OP spartan_orbs_of_insight1 add 1}
    [object]
        name="<span color='#a456ff'>Orb of Insight</span>"
        image=items/purple-orb.png
        duration=forever
        description=_"These mysterious orbs can be used to reveal hints for hidden achievements, or spent as currency in a certain rare location. Both the hints and the orb itself carry over between playthroughs."
        [filter]
            side=1
            canrecruit=yes
        [/filter]
    [/object]
    #ifdef MULTIPLAYER
    #ifndef LOCALMP
    {VARIABLE_OP spartan_orbs_of_insight2 add 1}
    [object]
        name="<span color='#a456ff'>Orb of Insight</span>"
        image=items/purple-orb.png
        duration=forever
        description=_"These mysterious orbs can be used to reveal hints for hidden achievements, or spent as currency in a certain rare location. Both the hints and the orb itself carry over between playthroughs."
        [filter]
            side=2
            canrecruit=yes
        [/filter]
    [/object]
    #endif
    #endif
    {HOPLITE_SYNC_ORBS_OF_INSIGHT_TO_GLOBAL_VAR}
#enddef

#define SPARTAN_ADD_ACHIEVEMENT_HINT ID SIDE
    {VARIABLE {ID}_hintunlocked{SIDE} yes}
    [set_variables]
       name=hoplite_achievementhints{SIDE}
       mode=append
       [value]
          id={ID}
       [/value]
    [/set_variables]
    [set_global_variable]
       namespace=spartan
       from_local=hoplite_achievementhints{SIDE}
       to_global=achievementhints_array
       side={SIDE}
       immediate=yes
    [/set_global_variable]
#enddef

#define HOPLITE_UNPACK_ACHIEVEMENT_HINTS_ARRAY SIDE
[foreach]
    array=hoplite_achievementhints{SIDE}
    index_var=i
    [do]
        {VARIABLE $this_item.id|_hintunlocked{SIDE} yes}
    [/do]
[/foreach]
#enddef

#define HOPLITE_RETREIVE_ACHIEVEMENT_HINTS
    [get_global_variable]
        namespace=spartan
        from_global=achievementhints_array
        to_local=hoplite_achievementhints1
        side=1
    [/get_global_variable]
    {HOPLITE_UNPACK_ACHIEVEMENT_HINTS_ARRAY 1}
    #ifdef MULTIPLAYER
    [get_global_variable]
        namespace=spartan
        from_global=achievementhints_array
        to_local=hoplite_achievementhints2
        side=2
    [/get_global_variable]
    {HOPLITE_UNPACK_ACHIEVEMENT_HINTS_ARRAY 2}
    #endif
#enddef

#define HOPLITE_ACHIEVEMENT_EVENTS
    [event]
        name=prestart

        #TODO: sort this achievement list, so hidden achievements are at the bottom

    #commented out achievements mean TODO or screapped
        {ADD_ACHIEVEMENT_TO_LIST2 shieldbash 10 _"This is Sparta! : Kill 10 enemies by bashing them into lava/chasms in one playthrough."}
        {ADD_ACHIEVEMENT_TO_LIST2 ratmaster 30 _"Who's a good rat? Yes, you are : have your rats kill 10 enemies in one playthrough"}
        {ADD_ACHIEVEMENT_TO_LIST depth28 _"Crusader: Reach depth 28"}
        {ADD_ACHIEVEMENT_TO_LIST3 depth51 _"Bearer of the Flame: Reach depth 51" _"Reach depth 51"}
        {ADD_ACHIEVEMENT_TO_LIST3 depth100 _"Where no man has ever gone: Reach depth 100" _"Reach depth 100"}#TODO: make a secret ending at depth 100
         #WARNING: reaching depth -15 is currently impossible since there is no way to return to underworld without debug!
        {ADD_ACHIEVEMENT_TO_LIST3 depthminus15 _"Underworld Roamer: " _"Reach the depth -15"}
        {ADD_ACHIEVEMENT_TO_LIST spiderqueen _"Arachnid Slayer: defeat the spider queen on depth 5"}
        {ADD_ACHIEVEMENT_TO_LIST archmage _"Wizard Bane: defeat the archmage on depth 10"}
        #{ADD_ACHIEVEMENT_TO_LIST3 spiderqueen2 _"Pest Exterminator: defeat the spider queen on depth 30"}#scrapped
        {ADD_ACHIEVEMENT_TO_LIST ares _"Hero: defeat the avatar of war on depth 15"}#todo: rename the achievement
        {ADD_ACHIEVEMENT_TO_LIST donovan _"You shall not pass!: defeat the knight of chaos at depth 25"}
        {ADD_ACHIEVEMENT_TO_LIST duo _"Always two, there are: defeat the minotaur/warlock duo on depth 30"}
        {ADD_ACHIEVEMENT_TO_LIST3 reaper _"Angel of Death: defeat the grim reaper in the depths of the underworld" _"defeat the grim reaper in the depths of the underworld"}
        {ADD_ACHIEVEMENT_TO_LIST3 archmage2 _"Shaxtal Bane: defeat the archmage once again on depth 35" _"defeat a familiar foe on depth 35"}
        {ADD_ACHIEVEMENT_TO_LIST3 return _"To hell and back: Return to the mortal realm from the underworld." _"Return to the mortal realm from the underworld."}
        {ADD_ACHIEVEMENT_TO_LIST victory _"Victory: leave the dungeon via the stairs after obtaining the Prometheus' Heart"}
        #{ADD_ACHIEVEMENT_TO_LIST3 finalboss _"The Chosen One: defeat the true final boss at depth 100"}#TODO
        {ADD_ACHIEVEMENT_TO_LIST2 warrior 30 _"Warrior: Kill 30 enemies in one playthrough."}
        {ADD_ACHIEVEMENT_TO_LIST2 warmonger 100 _"Warmonger: Kill 100 enemies in one playthrough."}
        {ADD_ACHIEVEMENT_TO_LIST2 godofwar 300 _"God of War: Kill 300 enemies in one playthrough."}
        {ADD_ACHIEVEMENT_TO_LIST3 algadur _"The Knalgan: recruit Algadur" _"recruit a certain companion in the dwarven caves"}
        {ADD_ACHIEVEMENT_TO_LIST3 elizabeth _"The Mage: recruit Elizabeth" _"recruit a certain companion in the Underworld"}
        {ADD_ACHIEVEMENT_TO_LIST pacifist _"Pacifist: Reach depth 5 without killing enemies. (You can still attack them, though, as long as you don't kill. Also, kills done by allies don't count)"}
        {ADD_ACHIEVEMENT_TO_LIST speedrun _"Speedrun: reach depth 10 in 110 turns or less."}
        {ADD_ACHIEVEMENT_TO_LIST specialist _"Specialist: reach depth 5 without using forges. Note: you're automatically moved to a forge when killing all enemies, so make sure to keep at least one enemy alive on depths that have a forge."}
        #TODO: maybe rework powerhouse into a hidden progress achievement instead of just hidden
        {ADD_ACHIEVEMENT_TO_LIST3 powerhouse _"Powerhouse: obtain 30 upgrades in one playthrough." _"obtain 30 upgrades in one playthrough."}
        {ADD_ACHIEVEMENT_TO_LIST2 discover_upgrades 20 _"Student: discover 20 different upgrades (carries over across playthroughs)"}
        {ADD_ACHIEVEMENT_TO_LIST2 discover_upgradesII 40 _"Scholar: discover 40 different upgrades (carries over across playthroughs)"}
        {ADD_ACHIEVEMENT_TO_LIST2 discover_upgradesIII 60 _"Sage: discover 60 different upgrades (carries over across playthroughs)"}
    #    {ADD_ACHIEVEMENT_TO_LIST3 over9000 _"It's over nine thousaaaaand!: obtain every single upgrade in one playthrough."}
#        {ADD_ACHIEVEMENT_TO_LIST2 frenzy 7 _"Frenzy: Kill at least one enemy per turn for 7 turns in a row."}
#        {ADD_ACHIEVEMENT_TO_LIST2 berserk 12 _"Berserk: Kill at least one enemy per turn for 12 turns in a row."}
        {ADD_ACHIEVEMENT_TO_LIST2 frenzy 7 _"Frenzy: Kill 7 enemies in a row (you need to kill at least one enemy per turn to maintain the killstreak. hitting bosses also won't reset the killstreak)."}
        {ADD_ACHIEVEMENT_TO_LIST2 berserk 14 _"Berserk: Kill 14 enemies in a row (you need to kill at least one enemy per turn to maintain the killstreak. hitting bosses also won't reset the killstreak)."}
    #    {ADD_ACHIEVEMENT_TO_LIST3 madman _"Madman: Kill at least one enemy per turn for 16 turns in a row."}
    #scrapped:
#        {ADD_ACHIEVEMENT_TO_LIST4 impale 50 _"Vlad the Impaler: kill 50 enemies using the impale special in one playthrough." _"kill 50 enemies using the impale special in one playthrough."}
    #TODO
        {ADD_ACHIEVEMENT_TO_LIST3 runesmith _"Smithing master: rescue a dwarf runesmith." _"rescue a dwarf runesmith."}
        {ADD_ACHIEVEMENT_TO_LIST4 revive 5 _"Not today, Death! : cheat death with the Phoenix Amulet upgrade 5 times in one playthrough." _"cheat death 5 times in one playthrough, with the phoenix amulet."}
        #TODO:
        #{ADD_ACHIEVEMENT_TO_LIST spearthrow _"Spear Thrower: Kill 20 enemies with a spear throw in one playthrough."}
        {ADD_ACHIEVEMENT_TO_LIST3 enthrall_master _"Enthralling Master: enthrall a lvl3 enemy." _"enthrall a very powerful foe"}
        {ADD_ACHIEVEMENT_TO_LIST3 mrgrizz _"Mr. Grizz: kill a cuttlefish with a bear" _"kill a cuttlefish with a bear"}

        {ADD_ACHIEVEMENT_TO_LIST unscathed _"Unscathed: kill a boss while at full hitpoints (healing mid-fight is allowed)"}
        {ADD_ACHIEVEMENT_TO_LIST3 tis_but_a_scratch _"Tis' but a scratch! : kill a boss while at 5 or less hitpoints" _"kill a boss while at 5 or less hitpoints"}

#keep this achievement lower than all others, since it is the one players can only get last anyway
        {ADD_ACHIEVEMENT_TO_LIST allachievements _"Unrivaled Champion: complete every achievement in Spartan (besides this one)"}

        #TODO: achievement ideas:
         #hidden: That was close: use a healing potion while at 5 hp or less
         #Wall of Steel: kill all enemies in a depth without moving
         #hidden: Return to Sender: kill a bomb-throwing enemy with a bomb you knocked back with a shield
         #add some more hidden progress achievements, so it's not just the revive achievement
         #hidden progress: maybe an even harder version of berserk that takes 21 kills in a row
         #hidden progress: Favorite Customer: spent at least 5 orbs of insight in the shop across playthroughs
         #hidden: Fine Print: take a cursed pact
        {HOPLITE_ACHIEVEMENTLIST RETREIVE_ACHIEVEMENT}
        {HOPLITE_GET_ORBS_OF_INSIGHT}
        {HOPLITE_RETREIVE_ACHIEVEMENT_HINTS}
    [/event]
    #allows keeping frenzy/bloodlustIII streak if you hit a boss, and gives some energy
    [event]
        name=attacker hits
        id=hoplite_hitboss
        first_time_only=no
        [filter]
            id=Hoplite,Hoplite2
        [/filter]
        [filter_second]
            ability=hoplite_boss
        [/filter_second]
        {VARIABLE hoplite_continue_killstreak_thisturn$unit.side| yes}

        {VARIABLE hitboss_energybonus $second_unit.level}
        {VARIABLE_OP hitboss_energybonus multiply 5}

        {HOPLITE_ADD_ENERGY_BY_VAR unit hitboss_energybonus}

        {CLEAR_VARIABLE hitboss_energybonus}
    [/event]
    [event]
         name=side 1 turn refresh
         first_time_only=no
         [if]
             {VARIABLE_CONDITIONAL hoplite_killedenemy_thisturn equals yes}
             [or]
                 {VARIABLE_CONDITIONAL hoplite_killedenemy_thisturn1 equals yes}
             [/or]
             [then]
                 [if]
                     [have_unit]
                         id=Hoplite2
                     [/have_unit]
                     [then]
                          {CLEAR_VARIABLE hoplite_killedenemy_thisturn1}
                     [/then]
                     [else]
                         {CLEAR_VARIABLE hoplite_killedenemy_thisturn}
                     [/else]
                 [/if]
#now killing multiple enemies per turn grants multiple points instead of one
#                 {VARIABLE_OP frenzy_progress1 add 1}
#                 {VARIABLE_OP berserk_progress1 add 1}
#                 {HOPLITE_PLAYER_UPGRADEFILTER bloodlustIII (side=$side_number) (
#                     [and]
#                         {VARIABLE_CONDITIONAL bloodlustIII_active not_equals yes}
#                         [and]
#                             [have_unit]
#                                 id=Hoplite
#                                 side=$side_number
#                             [/have_unit]
#                         [/and]
#                         [or]
#                             {HOPLITE_PLAYERFILTER_VAR (
#                                 {VARIABLE_CONDITIONAL bloodlustIII_active1 not_equals yes}
#                                 [and]
#                                     [have_unit]
#                                         id=Hoplite
#                                         side=$side_number
#                                     [/have_unit]
#                                 [/and]
#                             ) ()}
#                         [/or]
#                     [/and]
#                     [then]
#                         [if]
#                             [have_unit]
#                                 id=Hoplite2
#                             [/have_unit]
#                             [then]
#                                 {HOPLITE_PLAYERFILTER (
#                                     {VARIABLE_OP bloodlustIII_progress1 add 1}
#                                 ) (
#                                 )}
#                             [/then]
#                             [else]
#                                 {VARIABLE_OP bloodlustIII_progress add 1}
#                             [/else]
#                         [/if]
#                     [/then]
#                 )}
             [/then]
             [else]
             #hitting a boss lets you keep the killstreak
             [if]
                {VARIABLE_CONDITIONAL hoplite_continue_killstreak_thisturn1 equals yes}
                [then]
                    {CLEAR_VARIABLE hoplite_continue_killstreak_thisturn1}
                [/then]
                [else]
                 [if]
                     [have_unit]
                         id=Hoplite2
                     [/have_unit]
                     [then]
                         {VARIABLE frenzy_progress1 0}
                         {VARIABLE berserk_progress1 0}
                         {VARIABLE bloodlustIII_progress1 0}
                         {VARIABLE bloodlustIII_active1 no}
                         [remove_object]
                             id=Hoplite
                             object_id=bloodlustIII
                         [/remove_object]
                     [/then]
                     [else]
                         {VARIABLE frenzy_progress1 0}
                         {VARIABLE berserk_progress1 0}
                         {VARIABLE bloodlustIII_progress 0}
                         {VARIABLE bloodlustIII_active no}
                         [remove_object]
                             id=Hoplite
                             object_id=bloodlustIII
                         [/remove_object]
                     [/else]
                 [/if]
                 [redraw]
                 [/redraw]
                 [/else]
                 [/if]
             [/else]
         [/if]

         {IF_VAR frenzy_progress1 equals 7 (
             [then]
                 {ACHIEVEMENT_MESSAGE_LONE frenzy 1}
             [/then]
         )}
         {IF_VAR berserk_progress1 equals 14 (
             [then]
                 {ACHIEVEMENT_MESSAGE_LONE berserk 1}
             [/then]
         )}
         #  [/then])}
     [/event]

 #ifdef MULTIPLAYER
     [event]
         name=side 2 turn refresh
         first_time_only=no
         [if]
         {VARIABLE_CONDITIONAL hoplite_killedenemy_thisturn2 equals yes}
             [then]
                 {CLEAR_VARIABLE hoplite_killedenemy_thisturn2}
#                 {VARIABLE_OP frenzy_progress add 1}
#                 {VARIABLE_OP berserk_progress add 1}
             [/then]
             [else]
             #hitting a boss lets you keep the killstreak
             [if]
                {VARIABLE_CONDITIONAL hoplite_continue_killstreak_thisturn2 equals yes}
                [then]
                    {CLEAR_VARIABLE hoplite_continue_killstreak_thisturn2}
                [/then]
                [else]
                 {VARIABLE frenzy_progress2 0}
                 {VARIABLE berserk_progress2 0}
                 {VARIABLE bloodlustIII_progress2 0}
                 {VARIABLE bloodlustIII_active2 no}
                 [remove_object]
                     id=Hoplite2
                     object_id=bloodlustIII
                 [/remove_object]
                 [redraw]
                 [/redraw]
                 [/else]
                 [/if]
             [/else]
         [/if]
         {IF_VAR frenzy_progress2 equals 7 (
             [then]
                 {ACHIEVEMENT_MESSAGE_LONE frenzy 2}
             [/then]
         )}
         {IF_VAR berserk_progress2 equals 14 (
             [then]
                 {ACHIEVEMENT_MESSAGE_LONE berserk 2}
             [/then]
         )}
     [/event]
 #endif
    [event]
        id=hoplite_death_achievement_events
        first_time_only=no
    [if]
    [have_unit]
        id=$second_unit.id
        side=$hoplite_playerside
    [/have_unit]
    [then]
        {VARIABLE hoplite_killedenemy$second_unit.side yes}
        {VARIABLE_OP totalkills_progress$second_unit.side add 1}
        {VARIABLE_OP warrior_progress$second_unit.side add 1}
        {VARIABLE_OP warmonger_progress$second_unit.side add 1}
        {VARIABLE_OP godofwar_progress$second_unit.side add 1}

        {IF_VAR warrior_complete$second_unit.side not_equals yes (
            [then]
                {IF_VAR totalkills_progress$second_unit.side equals 30 (
                    [then]
                        {ACHIEVEMENT_MESSAGE_LONE warrior $second_unit.side}
                    [/then]
                )}
            [/then]
        )}
        {IF_VAR warmonger_complete$second_unit.side not_equals yes (
            [then]
                {IF_VAR totalkills_progress$second_unit.side equals 100 (
                    [then]
                        {ACHIEVEMENT_MESSAGE_LONE warmonger $second_unit.side}
                    [/then]
                )}
            [/then]
        )}
        {IF_VAR godofwar_complete$second_unit.side not_equals yes (
            [then]
                {IF_VAR totalkills_progress$second_unit.side equals 300 (
                    [then]
                        {ACHIEVEMENT_MESSAGE_LONE godofwar $second_unit.side}
                    [/then]
                )}
            [/then]
        )}
    [/then]
    [/if]

    [if]
    [have_unit]
        id=$second_unit.id
        side=$hoplite_allyside
        type=Hoplite_Giantrat_ally,Hoplite_Colossalrat_ally
        ability=spartan_ally_owner_side1
    [/have_unit]
    [then]
        {VARIABLE_OP ratmaster_progress1 add 1}
        {IF_VAR ratmaster_progress1 equals 30 (
        [or]
            {VARIABLE_CONDITIONAL ratmaster_progress2 equals 30}
        [/or]
        [then]
            {ACHIEVEMENT_MESSAGE_LONE ratmaster 1}
        [/then]
        )}
    [/then]
    [/if]

    [if]
    [have_unit]
        id=$second_unit.id
        side=$hoplite_allyside
        type=Hoplite_Giantrat_ally,Hoplite_Colossalrat_ally
        ability=spartan_ally_owner_side2
    [/have_unit]
    [then]
        {VARIABLE_OP ratmaster_progress2 add 1}
        {IF_VAR ratmaster_progress1 equals 30 (
        [or]
            {VARIABLE_CONDITIONAL ratmaster_progress2 equals 30}
        [/or]
        [then]
            {ACHIEVEMENT_MESSAGE_LONE ratmaster 2}
        [/then]
        )}
    [/then]
    [/if]

    [if]
    [have_unit]
        id=$second_unit.id
        side=$hoplite_allyside
        type=Hoplite_Cavebear_ally
        ability=spartan_ally_owner_side1
    [/have_unit]
    [and]
        {VARIABLE_CONDITIONAL unit.type equals Hoplite_Cuttlefish}#TODO: if I add a lvl3 Kraken, maybe make it also count for this achievement
    [/and]
    [then]
        {ACHIEVEMENT_MESSAGE_LONE mrgrizz 1}
    [/then]
    [/if]

    [if]
    [have_unit]
        id=$second_unit.id
        side=$hoplite_allyside
        type=Hoplite_Cavebear_ally
        ability=spartan_ally_owner_side2
    [/have_unit]
    [and]
        {VARIABLE_CONDITIONAL unit.type equals Hoplite_Cuttlefish}#TODO: if I add a lvl3 Kraken, maybe make it also count for this achievement
    [/and]
    [then]
        {ACHIEVEMENT_MESSAGE_LONE mrgrizz 2}
    [/then]
    [/if]

    [if]
    {VARIABLE_CONDITIONAL unit.abilities.hoplite_boss.is_boss equals yes}#[have_unit] doesn't work on dead units, so using a variable check instead
    [then]
        [if]
        [have_unit]
            id=Hoplite
            formula="hitpoints = max_hitpoints"
        [/have_unit]
        [then]
            {ACHIEVEMENT_MESSAGE_LONE unscathed 1}
        [/then]
        [/if]
        [if]
        [have_unit]
            id=Hoplite
            formula="hitpoints <= 5"
        [/have_unit]
        [then]
            {ACHIEVEMENT_MESSAGE_LONE tis_but_a_scratch 1}
        [/then]
        [/if]
        #ifdef MULTIPLAYER
        [if]
        [have_unit]
            id=Hoplite2
            formula="hitpoints = max.hitpoints"
        [/have_unit]
        [then]
            {ACHIEVEMENT_MESSAGE_LONE unscathed 2}
        [/then]
        [/if]
        [if]
        [have_unit]
            id=Hoplite2
            formula="hitpoints <= 5"
        [/have_unit]
        [then]
            {ACHIEVEMENT_MESSAGE_LONE tis_but_a_scratch 2}
        [/then]
        [/if]
        #endif

        {SPARTAN_ADD_INSIGHT_ORB_WITH_POPUP}
    [/then]
    [/if]

    [/event]
    [event]
        id=spartan_check_if_all_achievements_unlocked
        first_time_only=no
        {VARIABLE tmp_found_incomplete_achievement1 no}
        [foreach]
            array=hoplite_achievements
            index_var=i
            [do]
            {IF_VAR $this_item.id|_complete1 not_equals yes (
            [and]
                {VARIABLE_CONDITIONAL this_item.id not_equals allachievements}
            [/and]
            [then]
            {VARIABLE tmp_found_incomplete_achievement1 yes}
            [break][/break]#no need to continue the loop after finding an incomplete achievement
            [/then]
            )}
            [/do]
        [/foreach]
        {IF_VAR tmp_found_incomplete_achievement1 equals no (
        [then]
            {ACHIEVEMENT_MESSAGE_LONE allachievements 1}
        [/then]
        )}
        #ifdef MULTIPLAYER
        {VARIABLE tmp_found_incomplete_achievement2 no}
        [foreach]
            array=hoplite_achievements
            index_var=i
            [do]
            {IF_VAR $this_item.id|_complete2 not_equals yes (
            [and]
                {VARIABLE_CONDITIONAL this_item.id not_equals allachievements}
            [/and]
            [then]
            {VARIABLE tmp_found_incomplete_achievement2 yes}
            [break][/break]#no need to continue the loop after finding an incomplete achievement
            [/then]
            )}
            [/do]
        [/foreach]
        {IF_VAR tmp_found_incomplete_achievement2 equals no (
        [then]
            {ACHIEVEMENT_MESSAGE_LONE allachievements 2}
        [/then]
        )}
        #endif
        {CLEAR_VARIABLE tmp_found_incomplete_achievement1}
        {CLEAR_VARIABLE tmp_found_incomplete_achievement2}
    [/event]
#enddef
