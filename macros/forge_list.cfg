#textdomain wesnoth-Hoplite

#define ADD_UPGRADE_TO_DISCOVERED ID SIDE
   [set_variables]
      name=hoplite_discoveredupgrades{SIDE}
      mode=append
      [value]
         id={ID}
      [/value]
   [/set_variables]
   [set_global_variable]
      namespace=spartan
      from_local=hoplite_discoveredupgrades{SIDE}
      to_global=discoveredupgrades_array
      side={SIDE}
      immediate=yes
   [/set_global_variable]
   {VARIABLE {ID}discovered{SIDE} yes}

   #progress here is mostly just visual, what matters is the array length
   {VARIABLE discover_upgrades_progress{SIDE} $hoplite_discoveredupgrades{SIDE}.length}
   {VARIABLE discover_upgradesII_progress{SIDE} $hoplite_discoveredupgrades{SIDE}.length}
   {VARIABLE discover_upgradesIII_progress{SIDE} $hoplite_discoveredupgrades{SIDE}.length}

   {IF_VAR hoplite_discoveredupgrades{SIDE}.length greater_than_equal_to 20 (
   [then]
         {ACHIEVEMENT_MESSAGE_LONE discover_upgrades {SIDE}}
   [/then]
   )}

   {IF_VAR hoplite_discoveredupgrades{SIDE}.length greater_than_equal_to 40 (
   [then]
         {ACHIEVEMENT_MESSAGE_LONE discover_upgradesII {SIDE}}
   [/then]
   )}

   {IF_VAR hoplite_discoveredupgrades{SIDE}.length greater_than_equal_to 60 (
   [then]
         {ACHIEVEMENT_MESSAGE_LONE discover_upgradesII {SIDE}}
   [/then]
   )}
#enddef

#define HOPLITE_UNPACK_DISCOVERED_ACHIEVEMENTS_ARRAY SIDE
[foreach]
    array=hoplite_discoveredupgrades{SIDE}
    index_var=i
    [do]
        {VARIABLE $this_item.id|_discovered{SIDE} yes}
    [/do]
[/foreach]
#enddef

#define HOPLITE_RETREIVE_DISCOVERED_UPGRADES
    [get_global_variable]
        namespace=spartan
        from_global=discoveredupgrades_array
        to_local=hoplite_discoveredupgrades1
        side=1
    [/get_global_variable]
    {HOPLITE_UNPACK_DISCOVERED_ACHIEVEMENTS_ARRAY 1}
    #ifdef MULTIPLAYER
    [get_global_variable]
        namespace=spartan
        from_global=discoveredupgrades_array
        to_local=hoplite_discoveredupgrades2
        side=2
    [/get_global_variable]
    {HOPLITE_UNPACK_DISCOVERED_ACHIEVEMENTS_ARRAY 2}
    #endif
   #progress here is mostly just visual, what matters is the array length
   {VARIABLE discover_upgrades_progress1 $hoplite_discoveredupgrades1.length}
   {VARIABLE discover_upgradesII_progress1 $hoplite_discoveredupgrades1.length}
   {VARIABLE discover_upgradesIII_progress1 $hoplite_discoveredupgrades1.length}
   {VARIABLE discover_upgrades_progress2 $hoplite_discoveredupgrades2.length}
   {VARIABLE discover_upgradesII_progress2 $hoplite_discoveredupgrades2.length}
   {VARIABLE discover_upgradesIII_progress2 $hoplite_discoveredupgrades2.length}
#enddef

#define HOPLITE_CLEAR_DISCOVEREDUPGRADES SIDE
    [foreach]
        array=hoplite_discoveredupgrades{SIDE}
        index_var=i
        [do]
            {CLEAR_VARIABLE $this_item.id|_discovered{SIDE}}
        [/do]
    [/foreach]
    [clear_global_variable]
        namespace=spartan
        global=discoveredupgrades_array
        side={SIDE}
        immediate=yes
    [/clear_global_variable]
#enddef

#define FORGE_UPGRADE_EFFECT ID EFFECTS MISC
                [sound]
			name=mace.wav
		[/sound]
                [if]
                [have_unit]
	           id=Hoplite2
                [/have_unit]
                [then]
                {HOPLITE_PLAYERFILTER1b (
		{VARIABLE hoplite_upgradeid Hoplite}
		{VARIABLE_OP hoplite_upgrades1 add 1}
		{CLEAR_VARIABLE hoplite_upgrademenu1}
		) (
		{VARIABLE hoplite_upgradeid Hoplite2}
		{VARIABLE_OP hoplite_upgrades2 add 1}
		{CLEAR_VARIABLE hoplite_upgrademenu2}
		)}
		[/then]
		[else]
		{VARIABLE hoplite_upgradeid Hoplite}
		{VARIABLE_OP hoplite_upgrades add 1}
		{CLEAR_VARIABLE hoplite_upgrademenu}
		[/else]
		[/if]
		{IF_VAR hoplite_upgrades equals 30 (
		[or]
		{VARIABLE_CONDITIONAL hoplite_upgrades1 equals 30}
		[/or]
		[or]
		{VARIABLE_CONDITIONAL hoplite_upgrades2 equals 30}
		[/or]
		[then]
                {ACHIEVEMENT_MESSAGE powerhouse}
		[/then])}
                [object]
                  silent=yes
                  duration=forever
		  [filter]
		     id=$hoplite_upgradeid
		  [/filter]
		  {EFFECTS}
                [/object]
		{MISC}
		{CLEAR_VARIABLE hoplite_upgradeid}
		[delay]
		  time=300
		[/delay]
                [sound]
			name=mace.wav
		[/sound]
		[delay]
		  time=300
		[/delay]
                [sound]
			name=mace.wav
		[/sound]
		{IF_VAR hoplite_debugmenu not_equals yes (
		[then]
		[delay]
		  time=1000
		[/delay]
		[/then])}
                [if]
                [have_unit]
	           id=Hoplite2
                [/have_unit]
        	[then]
                {HOPLITE_PLAYERFILTER1b (
                [set_variable]
                   name={ID}_unlocked1
                   value=yes
                [/set_variable]
                {ADD_UPGRADE_TO_DISCOVERED {ID} 1}
    	        ) (
                [set_variable]
                   name={ID}_unlocked2
                   value=yes
                [/set_variable]
                {ADD_UPGRADE_TO_DISCOVERED {ID} 2}
                )}
		[/then]
		[else]
                [set_variable]
                   name={ID}_unlocked
                   value=yes
                [/set_variable]
                {ADD_UPGRADE_TO_DISCOVERED {ID} 1}
		[/else]
		[/if]
                {IF_VAR hoplite_upgradesleft greater_than 0 (
                [or]
		[variable]
		   name=hoplite_upgradesleft1
		   greater_than=0
		[/variable]
                [/or]
                [or]
		[variable]
		   name=hoplite_upgradesleft2
		   greater_than=0
		[/variable]
                [/or]
                [then]
                [if]
                [have_unit]
	           id=Hoplite2
                [/have_unit]
                [then]
                  {HOPLITE_PLAYERFILTER1b (
                  [set_variable]
                   name=hoplite_upgradesleft1
                   sub=1
                  [/set_variable]
		  ) (
                  [set_variable]
                   name=hoplite_upgradesleft2
                   sub=1
                  [/set_variable]
		  )}
		[/then]
		[else]
                 [set_variable]
                   name=hoplite_upgradesleft
                   sub=1
                 [/set_variable]
		[/else]
		[/if]
		[/then])}
		{IF_VAR hoplite_debugmenu not_equals yes (
		[and]
			{VARIABLE_CONDITIONAL spartan_runesmithupgrade not_equals yes}
		[/and]
		[then]
                [set_variable]
                   name=usedforge
                   value=yes
                [/set_variable]
            [remove_item]
	       image="terrain/forge-working.png"
	       x,y=$forge_x,$forge_y
  	    [/remove_item]
	    [item]
	       image=terrain/forge.png
	       x,y=$forge_x,$forge_y
	    [/item]
	        [/then])}
#enddef

#define FORGE_UPGRADE_EFFECT_COMPANION UNITID ID EFFECTS MISC
                [sound]
			name=mace.wav
		[/sound]
                [if]
                [have_unit]
	           id=Hoplite2
                [/have_unit]
                [then]
		{VARIABLE_OP hoplite_upgrades1 add 1}
		{VARIABLE_OP hoplite_upgrades2 add 1}
                {HOPLITE_PLAYERFILTER1b (
		{CLEAR_VARIABLE hoplite_upgrademenu1}
		) (
		{CLEAR_VARIABLE hoplite_upgrademenu2}
		)}
		[/then]
		[else]
		{VARIABLE_OP hoplite_upgrades add 1}
		{CLEAR_VARIABLE hoplite_upgrademenu}
		[/else]
		[/if]
		{IF_VAR hoplite_upgrades equals 30 (
		[or]
		{VARIABLE_CONDITIONAL hoplite_upgrades1 equals 30}
		[/or]
		[then]
                {ACHIEVEMENT_MESSAGE_LONE powerhouse 1}
		[/then])}
    {IF_VAR hoplite_upgrades2 equals 30 (
    [then]
                {ACHIEVEMENT_MESSAGE_LONE powerhouse 2}
    [/then])}

		[if]
		[have_unit]
		  id={UNITID}
		  trait=loyal#IMPORTANT, so that not-yet-saved Algadur can't be upgraded
		[/have_unit]
		[then]
		[/then]
		[else]
		{VARIABLE companionid {UNITID}}
		{IF_VAR companionid equals Algadur (
		[then]
		[unstore_unit]
		  variable=algadur_stored
		  x,y=1,1
		[/unstore_unit]
		[hide_unit]
		  id=Algadur
		[/hide_unit]
		[/then])}
		{IF_VAR companionid equals Elizabeth (
		[then]
		[unstore_unit]
		  variable=elizabeth_stored
		  x,y=1,1
		[/unstore_unit]
		[hide_unit]
		  id=Elizabeth
		[/hide_unit]
		[/then])}
		[/else]
		[/if]
                [object]
                  silent=yes
                  duration=forever
		  [filter]
		     id={UNITID}
		  [/filter]
		  {EFFECTS}
                [/object]
		{IF_VAR algadur_cooldown greater_than 0 (
		[then]
		[unhide_unit]
		   id=Algadur
		[/unhide_unit]
		[store_unit]
		  [filter]
		    id=Algadur
		  [/filter]
		  variable=algadur_stored
		  kill=yes
		[/store_unit]
		[/then])}
		{IF_VAR elizabeth_cooldown greater_than 0 (
		[then]
		[unhide_unit]
		   id=Elizabeth
		[/unhide_unit]
		[store_unit]
		  [filter]
		    id=Elizabeth
		  [/filter]
		  variable=elizabeth_stored
		  kill=yes
		[/store_unit]
		[/then])}
		{MISC}
		[delay]
		  time=300
		[/delay]
                [sound]
			name=mace.wav
		[/sound]
		[delay]
		  time=300
		[/delay]
                [sound]
			name=mace.wav
		[/sound]
		{IF_VAR hoplite_debugmenu not_equals yes (
		[then]
		[delay]
		  time=1000
		[/delay]
		[/then])}
                [set_variable]
                   name={ID}_unlocked
                   value=yes
                [/set_variable]
                {ADD_UPGRADE_TO_DISCOVERED {ID} 1}
                #ifdef MULTIPLAYER
                {ADD_UPGRADE_TO_DISCOVERED {ID} 2}
                #endif

                {IF_VAR hoplite_upgradesleft greater_than 0 (
                [or]
		[variable]
		   name=hoplite_upgradesleft1
		   greater_than=0
		[/variable]
                [/or]
                [or]
		[variable]
		   name=hoplite_upgradesleft2
		   greater_than=0
		[/variable]
                [/or]
                [then]
                [if]
                [have_unit]
	           id=Hoplite2
                [/have_unit]
                [then]
                  {HOPLITE_PLAYERFILTER1b (
                  [set_variable]
                   name=hoplite_upgradesleft1
                   sub=1
                  [/set_variable]
		  ) (
                  [set_variable]
                   name=hoplite_upgradesleft2
                   sub=1
                  [/set_variable]
		  )}
		[/then]
		[else]
                 [set_variable]
                   name=hoplite_upgradesleft
                   sub=1
                 [/set_variable]
		[/else]
		[/if]
		[/then])}
		{IF_VAR hoplite_debugmenu not_equals yes (
		[and]
			{VARIABLE_CONDITIONAL spartan_runesmithupgrade not_equals yes}
		[/and]		
		[then]
                [set_variable]
                   name=usedforge
                   value=yes
                [/set_variable]
            [remove_item]
	       image="terrain/forge-working.png"
	       x,y=$forge_x,$forge_y
  	    [/remove_item]
	    [item]
	       image=terrain/forge.png
	       x,y=$forge_x,$forge_y
	    [/item]
	        [/then])}
#enddef

#define FORGE_UPGRADE ID DESCR ICON EFFECTS MISC
[option]
                        image="{ICON}"
			description={DESCR}
			[show_if]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR (
                [variable]
                   name={ID}_unlocked1
                   not_equals=yes
                [/variable]
		) (
                [variable]
                   name={ID}_unlocked2
                   not_equals=yes
                [/variable]
		)}
#else
                [variable]
                   name={ID}_unlocked
                   not_equals=yes
                [/variable]
#endif
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
			[/show_if]
            [command]
         		{FORGE_UPGRADE_EFFECT {ID} {EFFECTS} {MISC}}	
            [/command]
		[/option]
		{UPGRADE_ICON {ID} {DESCR} {ICON}}
#enddef
#define FORGE_UPGRADE2 ID DESCR ICON REQUIREMENT EFFECTS MISC
[option]
                        image="{ICON}"
			description={DESCR}
			[show_if]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR (
                [variable]
                   name={ID}_unlocked1
                   not_equals=yes
                [/variable]
                [variable]
                   name={REQUIREMENT}_unlocked1
                   equals=yes
                [/variable]
		) (
                [variable]
                   name={ID}_unlocked2
                   not_equals=yes
                [/variable]
                [variable]
                   name={REQUIREMENT}_unlocked2
                   equals=yes
                [/variable]
		)}
#else
                [variable]
                   name={ID}_unlocked
                   not_equals=yes
                [/variable]
                [variable]
                   name={REQUIREMENT}_unlocked
                   equals=yes
                [/variable]
#endif
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
			[/show_if]
                        [command]
         		{FORGE_UPGRADE_EFFECT {ID} {EFFECTS} {MISC}}	
                        [/command]
		[/option]
		{UPGRADE_ICON {ID} {DESCR} {ICON}}
#enddef
#third type, only shown after an upgrade has been unlocked AND a specific boss was beaten
#define FORGE_UPGRADE3 ID DESCR ICON REQUIREMENT REQUIREMENT_BOSS EFFECTS MISC
[option]
                        image="{ICON}"
			description={DESCR}
			[show_if]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR (
                [variable]
                   name={ID}_unlocked1
                   not_equals=yes
                [/variable]
		[and]
                [variable]
                   name={REQUIREMENT}_unlocked1
                   equals=yes
                [/variable]
                [variable]
                   name={REQUIREMENT_BOSS}_beaten
                   equals=yes
                [/variable]
		[/and]
		) (
                [variable]
                   name={ID}_unlocked2
                   not_equals=yes
                [/variable]
		[and]
                [variable]
                   name={REQUIREMENT}_unlocked2
                   equals=yes
                [/variable]
                [variable]
                   name={REQUIREMENT_BOSS}_beaten
                   equals=yes
                [/variable]
		[/and]
		)}
#else
                [variable]
                   name={ID}_unlocked
                   not_equals=yes
                [/variable]
		[and]
                [variable]
                   name={REQUIREMENT}_unlocked
                   equals=yes
                [/variable]
                [variable]
                   name={REQUIREMENT_BOSS}_beaten
                   equals=yes
                [/variable]
		[/and]
#endif
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
			[/show_if]
                        [command]
         		{FORGE_UPGRADE_EFFECT {ID} {EFFECTS} {MISC}}	
                        [/command]
		[/option]
                [option]
                        image=units/unknown-unit.png~RC(magenta>white)
                        description=_"???: beat a certain boss to unlock this upgrade."
			[show_if]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR (
                [variable]
                   name={ID}_unlocked1
                   not_equals=yes
                [/variable]
		[and]
                [variable]
                   name={REQUIREMENT}_unlocked1
                   equals=yes
                [/variable]
                [variable]
                   name={REQUIREMENT_BOSS}_beaten
                   not_equals=yes
                [/variable]
                {VARIABLE_CONDITIONAL {ID}_discovered1 equals yes}
		[/and]
		) (
                [variable]
                   name={ID}_unlocked2
                   not_equals=yes
                [/variable]
		[and]
                [variable]
                   name={REQUIREMENT}_unlocked2
                   equals=yes
                [/variable]
                [variable]
                   name={REQUIREMENT_BOSS}_beaten
                   not_equals=yes
                [/variable]
                {VARIABLE_CONDITIONAL {ID}_discovered2 not_equals yes}
		[/and]
		)}
#else
                [variable]
                   name={ID}_unlocked
                   not_equals=yes
                [/variable]
		[and]
                [variable]
                   name={REQUIREMENT}_unlocked
                   equals=yes
                [/variable]
                [variable]
                   name={REQUIREMENT_BOSS}_beaten
                   not_equals=yes
                [/variable]
                {VARIABLE_CONDITIONAL {ID}_discovered1 not_equals yes}
		[/and]
#endif
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
		[/show_if]
        [command]
        [/command]
    [/option]
                [option]
                        image="{ICON}~SEPIA()~BLIT(icons/locked.png)"
                        description=_"(beat a certain boss to unlock this upgrade) "+{DESCR}
			[show_if]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR (
                [variable]
                   name={ID}_unlocked1
                   not_equals=yes
                [/variable]
		[and]
                [variable]
                   name={REQUIREMENT}_unlocked1
                   equals=yes
                [/variable]
                [variable]
                   name={REQUIREMENT_BOSS}_beaten
                   not_equals=yes
                [/variable]
                {VARIABLE_CONDITIONAL {ID}_discovered1 equals yes}
		[/and]
		) (
                [variable]
                   name={ID}_unlocked2
                   not_equals=yes
                [/variable]
		[and]
                [variable]
                   name={REQUIREMENT}_unlocked2
                   equals=yes
                [/variable]
                [variable]
                   name={REQUIREMENT_BOSS}_beaten
                   not_equals=yes
                [/variable]
                {VARIABLE_CONDITIONAL {ID}_discovered2 equals yes}
		[/and]
		)}
#else
                [variable]
                   name={ID}_unlocked
                   not_equals=yes
                [/variable]
		[and]
                [variable]
                   name={REQUIREMENT}_unlocked
                   equals=yes
                [/variable]
                [variable]
                   name={REQUIREMENT_BOSS}_beaten
                   not_equals=yes
                [/variable]
                {VARIABLE_CONDITIONAL {ID}_discovered1 equals yes}
		[/and]
#endif
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
		[/show_if]
        [command]
        [/command]
    [/option]
	{UPGRADE_ICON {ID} {DESCR} {ICON}}
#enddef

#define FORGE_UPGRADE4 ID DESCR ICON REQUIREMENTS1 REQUIREMENTS2 REQUIREMENTS EFFECTS MISC
[option]
                        image="{ICON}"
			description={DESCR}
			[show_if]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR (
                [variable]
                   name={ID}_unlocked1
                   not_equals=yes
                [/variable]
                [and]
		   {REQUIREMENTS1}
		[/and]
		) (
                [variable]
                   name={ID}_unlocked2
                   not_equals=yes
                [/variable]
                [and]
		   {REQUIREMENTS2}
		[/and]
		)}
#else
                [variable]
                   name={ID}_unlocked
                   not_equals=yes
                [/variable]
                [and]
		   {REQUIREMENTS}
		[/and]
#endif
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
			[/show_if]
                        [command]
         		{FORGE_UPGRADE_EFFECT {ID} {EFFECTS} {MISC}}	
                        [/command]
		[/option]
    	{UPGRADE_ICON {ID} {DESCR} {ICON}}
#enddef

#define FORGE_UPGRADE_COMPANION UNITID ID DESCR ICON EFFECTS MISC
[option]
                        image="{ICON}"
			description={DESCR}
			[show_if]
                        [variable]
                          name={ID}_unlocked
                          not_equals=yes
                        [/variable]
                        [and]
			[have_unit]
			  id={UNITID}
   		  trait=loyal#IMPORTANT, so that not-yet-saved Algadur can't be upgraded
			[/have_unit]
			[or]
			{VARIABLE_CONDITIONAL algadur_stored.id equals {UNITID}}
			[/or]
			[or]
			{VARIABLE_CONDITIONAL elizabeth_stored.id equals {UNITID}}
			[/or]
			[/and]
         [and]
             [variable]
                name=hoplite_showcurrentupgrades
                not_equals=yes
             [/variable]
         [/and]
         [and]
             [variable]
                name=hoplite_showcurrentupgrades2
                not_equals=yes
             [/variable]
         [/and]
			[/show_if]
                        [command]
                {FORGE_UPGRADE_EFFECT_COMPANION {UNITID} {ID} {EFFECTS} {MISC}}
                        [/command]
		[/option]
                [option]
                        image="{ICON}~SEPIA()~BLIT(icons/locked.png)"
                        description=_"(recruit a certain companion to unlock this upgrade) "+{DESCR}
			[show_if]
                        [variable]
                          name={ID}_unlocked
                          not_equals=yes
                        [/variable]
                        [and]
			[not]
			[have_unit]
			  id={UNITID}
			[/have_unit]
			[or]
			{VARIABLE_CONDITIONAL algadur_stored.id equals {UNITID}}
			[/or]
			[or]
			{VARIABLE_CONDITIONAL elizabeth_stored.id equals {UNITID}}
			[/or]
			[/not]
			[/and]
                        [and]
			{VARIABLE_CONDITIONAL algadurmet equals yes}
			[or]
			{VARIABLE_CONDITIONAL elizabethmet equals yes}
			[/or]
			[/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
            [and]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR (
                {VARIABLE_CONDITIONAL {ID}_discovered1 equals yes}
		) (
                {VARIABLE_CONDITIONAL {ID}_discovered2 equals yes}
		)}
#else
                {VARIABLE_CONDITIONAL {ID}_discovered1 equals yes}
#endif
            [/and]
      		[/show_if]
        [command]
        [/command]
        [/option]
                [option]
                        image=units/unknown-unit.png~RC(magenta>white)
                        description=_"???: recruit a certain companion to unlock this upgrade."
			[show_if]
                        [variable]
                          name={ID}_unlocked
                          not_equals=yes
                        [/variable]
                        [and]
			[not]
			[have_unit]
			  id={UNITID}
			[/have_unit]
			[or]
			{VARIABLE_CONDITIONAL algadur_stored.id equals {UNITID}}
			[/or]
			[or]
			{VARIABLE_CONDITIONAL elizabeth_stored.id equals {UNITID}}
			[/or]
			[/not]
			[/and]
                        [and]
			{VARIABLE_CONDITIONAL algadurmet equals yes}
			[or]
			{VARIABLE_CONDITIONAL elizabethmet equals yes}
			[/or]
			[/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
            [and]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR (
                {VARIABLE_CONDITIONAL {ID}_discovered1 not_equals yes}
		) (
                {VARIABLE_CONDITIONAL {ID}_discovered2 not_equals yes}
		)}
#else
                {VARIABLE_CONDITIONAL {ID}_discovered1 not_equals yes}
#endif
            [/and]
      		[/show_if]
        [command]
        [/command]
        [/option]
    	{UPGRADE_ICON_COMPANION {ID} {DESCR} {ICON}}
#enddef

#define FORGE_UPGRADE_COMPANION2 UNITID ID DESCR ICON REQUIREMENT EFFECTS MISC
[option]
                        image="{ICON}"
			description={DESCR}
			[show_if]
                        [variable]
                          name={ID}_unlocked
                          not_equals=yes
                        [/variable]
                        [and]
			[have_unit]
			  id={UNITID}
   		  trait=loyal#IMPORTANT, so that not-yet-saved Algadur can't be upgraded
			[/have_unit]
			[or]
			{VARIABLE_CONDITIONAL algadur_stored.id equals {UNITID}}
			[/or]
			[or]
			{VARIABLE_CONDITIONAL elizabeth_stored.id equals {UNITID}}
			[/or]
			[/and]
			[and]
                        [variable]
                          name={REQUIREMENT}_unlocked
                          equals=yes
                        [/variable]
			[/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
			[/show_if]
                        [command]
                {FORGE_UPGRADE_EFFECT_COMPANION {UNITID} {ID} {EFFECTS} {MISC}}
                        [/command]
		[/option]
    	{UPGRADE_ICON_COMPANION {ID} {DESCR} {ICON}}
#enddef

#define FORGE_UPGRADE_COMPANION3 UNITID ID DESCR ICON REQUIREMENT REQUIREMENT_BOSS EFFECTS MISC
[option]
                        image="{ICON}"
			description={DESCR}
			[show_if]
                        [variable]
                          name={ID}_unlocked
                          not_equals=yes
                        [/variable]
                        [and]
			[have_unit]
			  id={UNITID}
   		  trait=loyal#IMPORTANT, so that not-yet-saved Algadur can't be upgraded
			[/have_unit]
			[or]
			{VARIABLE_CONDITIONAL algadur_stored.id equals {UNITID}}
			[/or]
			[or]
			{VARIABLE_CONDITIONAL elizabeth_stored.id equals {UNITID}}
			[/or]
			[/and]
			[and]
                        [variable]
                          name={REQUIREMENT}_unlocked
                          equals=yes
                        [/variable]
			[/and]
			[and]
                        [variable]
                          name={REQUIREMENT_BOSS}_beaten
                          equals=yes
                        [/variable]
			[/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
			[/show_if]
                        [command]
                {FORGE_UPGRADE_EFFECT_COMPANION {UNITID} {ID} {EFFECTS} {MISC}}
                        [/command]
		[/option]
                [option]
                        image="{ICON}~SEPIA()~BLIT(icons/locked.png)"
                        description=_"(beat a certain boss to unlock this upgrade) "+{DESCR}
			[show_if]
                        [variable]
                          name={ID}_unlocked
                          not_equals=yes
                        [/variable]
                        [and]
                        [variable]
                          name={REQUIREMENT}_unlocked
                          equals=yes
                        [/variable]
			[/and]
                        [and]
                        [variable]
                          name={REQUIREMENT_BOSS}_beaten
                          not_equals=yes
                        [/variable]
			[/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
            [and]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR (
                {VARIABLE_CONDITIONAL {ID}_discovered1 equals yes}
		) (
                {VARIABLE_CONDITIONAL {ID}_discovered2 equals yes}
		)}
#else
                {VARIABLE_CONDITIONAL {ID}_discovered1 equals yes}
#endif
            [/and]
		[/show_if]
        [command]
        [/command]
    [/option]
                [option]
                        image=units/unknown-unit.png~RC(magenta>white)
                        description=_"???: beat a certain boss to unlock this upgrade."
			[show_if]
                        [variable]
                          name={ID}_unlocked
                          not_equals=yes
                        [/variable]
                        [and]
                        [variable]
                          name={REQUIREMENT}_unlocked
                          equals=yes
                        [/variable]
			[/and]
                        [and]
                        [variable]
                          name={REQUIREMENT_BOSS}_beaten
                          not_equals=yes
                        [/variable]
			[/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
            [and]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR (
                {VARIABLE_CONDITIONAL {ID}_discovered1 not_equals yes}
		) (
                {VARIABLE_CONDITIONAL {ID}_discovered2 not_equals yes}
		)}
#else
                {VARIABLE_CONDITIONAL {ID}_discovered1 not_equals yes}
#endif
            [/and]
		[/show_if]
        [command]
        [/command]
    [/option]
    {UPGRADE_ICON_COMPANION {ID} {DESCR} {ICON}}
#enddef

#for the "show upgrades" menu:
#define UPGRADE_ICON ID DESCR ICON
[option]
         image={ICON}
			description={DESCR}
			[show_if]
				#the code no longer checks current side, this is to make the code work properly for observer menu too
			   [variable]
			      name=hoplite_showcurrentupgrades
			      equals=yes
			   [/variable]
			   [and]
			   [variable]
			      name={ID}_unlocked
			      equals=yes
			   [/variable]
			   [or]
			   [variable]
			      name={ID}_unlocked1
			      equals=yes
			   [/variable]
			   [and]
			   [variable]
			      name=hoplite_showcurrentupgrades2
			      not_equals=yes
			   [/variable]
			   [/and]
			   [/or]
    		   [/and]
    		   [or]
			   [variable]
			      name=hoplite_showcurrentupgrades2
			      equals=yes
			   [/variable]
			   [and]
			   [variable]
			      name={ID}_unlocked2
			      equals=yes
			   [/variable]
    			[/and]
			   [and]
			   [variable]
			      name=hoplite_showcurrentupgrades
			      not_equals=yes
			   [/variable]
    		   [/and]
    		   [/or]
#			   [variable]
#			      name=hoplite_showcurrentupgrades
#			      equals=yes
#			   [/variable]
#			   [and]
#			   [variable]
#			      name={ID}_unlocked
#			      equals=yes
#			   [/variable]
#			   [or]
#			   [variable]
#			      name={ID}_unlocked1
#			      equals=yes
#			   [/variable]
#			   [and]
#			    [have_unit]
#			       id=Hoplite
#			       side=$side_number
#			    [/have_unit]
#			   [/and]
#			   [and]
#			   [variable]
#			      name=hoplite_showcurrentupgrades2
#			      not_equals=yes
#			   [/variable]
#			   [/and]
#			   [/or]
#			   [or]
#			   [variable]
#			      name={ID}_unlocked2
#			      equals=yes
#			   [/variable]
#			   [and]
#			    [have_unit]
#			       id=Hoplite2
#			       side=$side_number
#			    [/have_unit]
#			   [/and]
#			   [and]
#			   [variable]
#			      name=hoplite_showcurrentupgrades2
#			      not_equals=yes
#			   [/variable]
#			   [/and]
#			   [/or]
#    		   [/and]
			[/show_if]
            [command]
            [/command]
[/option]
[option]
         image={ICON}~SEPIA()
			description={DESCR}
			[show_if]
				#the code no longer checks current side, this is to make the code work properly for observer menu too
			   [variable]
			      name=hoplite_showdiscovered_upgrades
			      equals=yes
			   [/variable]
            [variable]
              name={ID}_discovered$side_number
              equals=yes
            [/variable]
			   [and]
			   [variable]
			      name={ID}_unlocked
			      not_equals=yes
			   [/variable]
			   [variable]
			      name={ID}_unlocked1
			      not_equals=yes
			   [/variable]
			   [variable]
			      name=hoplite_showcurrentupgrades2
			      not_equals=yes
			   [/variable]
			   [/and]
    		   [or]
			   [variable]
			      name=hoplite_showcurrentupgrades2
			      equals=yes
			   [/variable]
			   [variable]
			      name={ID}_unlocked2
			      not_equals=yes
			   [/variable]
			   [variable]
			      name=hoplite_showcurrentupgrades
			      not_equals=yes
			   [/variable]
    		   [/or]
		[/show_if]
      [command]
      [/command]
[/option]
[option]
        image=units/unknown-unit.png~RC(magenta>white)
        description=_"???: you haven't discovered this upgrade yet."
			[show_if]
            [variable]
              name={ID}_discovered$side_number
              not_equals=yes
            [/variable]
         [and]
             [variable]
                name=hoplite_showdiscovered_upgrades
                equals=yes
             [/variable]
         [/and]
         [and]
             [variable]
                name=hoplite_showdiscovered_upgrades
                equals=yes
             [/variable]
         [/and]
         [and]
            {HOPLITE_PLAYERFILTER (
            [variable]
              name={ID}_unlocked
              not_equals=yes
            [/variable]
            [variable]
              name={ID}_unlocked1
              not_equals=yes
            [/variable]
            ) (
            [variable]
              name={ID}_unlocked2
              not_equals=yes
            [/variable]
            )}
         [/and]
		[/show_if]
        [command]
        [/command]
[/option]
#[option]
#                        image={ICON}
#			description={DESCR}
#			[show_if]
#			   [variable]
#			      name=hoplite_showcurrentupgrades2
#			      equals=yes
#			   [/variable]
#			   [and]
#			   [variable]
#			      name={ID}_unlocked
#			      equals=yes
#			   [/variable]
#			   [or]
#			   [variable]
#			      name={ID}_unlocked1
#			      equals=yes
#			   [/variable]
#			   [and]
#			    [have_unit]
#			       id=Hoplite2
#			       side=$side_number
#			    [/have_unit]
#			   [/and]
#			   [and]
#			   [variable]
#			      name=hoplite_showcurrentupgrades
#			      not_equals=yes
#			   [/variable]
#			   [/and]
#			   [/or]
#			   [or]
#			   [variable]
#			      name={ID}_unlocked2
#			      equals=yes
#			   [/variable]
#			   [and]
#			    [have_unit]
#			       id=Hoplite
#			       side=$side_number
#			    [/have_unit]
#			   [/and]
#			   [and]
#			   [variable]
#			      name=hoplite_showcurrentupgrades
#			      not_equals=yes
#			   [/variable]
#			   [/and]
#			   [/or]
#    		   [/and]
#			[/show_if]
#            [command]
#            [/command]
#[/option]
#enddef

#define UPGRADE_ICON_COMPANION ID DESCR ICON
[option]
                        image={ICON}
			description={DESCR}
			[show_if]
			   [variable]
			      name={ID}_unlocked
			      equals=yes
			   [/variable]
			   [and]
			   [variable]
			      name=hoplite_showcurrentupgrades
			      equals=yes
			   [/variable]
			   [/and]
			   [or]
			   [variable]
			      name={ID}_unlocked
			      equals=yes
			   [/variable]
			   [and]
			   [variable]
			      name=hoplite_showcurrentupgrades2
			      equals=yes
			   [/variable]
			   [/and]
			   [/or]
			[/show_if]
            [command]
            [/command]
[/option]
#enddef

#define FORGE_UPGRADE_LIST
        {FORGE_UPGRADE_COMPANION Algadur algadurI _"Algadur I: +2 melee damage/+8 max hitpoints for Algadur" attacks/battleaxe.png (
	[effect]
	apply_to=attack
	range=melee
	increase_damage=2
	[/effect]
	[effect]
	apply_to=hitpoints
	increase=8
	increase_total=8
	[/effect]
	) ()}
        {FORGE_UPGRADE_COMPANION3 Algadur algadurII _"Algadur II: +2 melee damage/+10% resistances for Algadur" "attacks/battleaxe.png~BLIT(icons/overlay_II.png)" algadurI archmage (
	[effect]
	apply_to=attack
	range=melee
	increase_damage=2
	[/effect]
        [effect]
            apply_to=resistance
            replace=no
            [resistance]
                blade=-10
                pierce=-10
                impact=-10
                arcane=-10
                fire=-10
                cold=-10
            [/resistance]
        [/effect]
	) ()}
        {FORGE_UPGRADE_COMPANION3 Algadur algadurIII _"Algadur III: +3 melee damage/+8 max hitpoints for Algadur" "attacks/battleaxe.png~BLIT(icons/overlay_III.png)" algadurII donovan (
	[effect]
	apply_to=attack
	range=melee
	increase_damage=3
	[/effect]
	[effect]
	apply_to=hitpoints
	increase=8
	increase_total=8
	[/effect]
	) ()}
        {FORGE_UPGRADE_COMPANION Elizabeth elizabethI _"Elizabeth I: +2 damage/+5 hitpoints/+10% magical resistances for Elizabeth" attacks/staff-ruby.png (
	[effect]
	apply_to=attack
	increase_damage=2
	[/effect]
	[effect]
	apply_to=hitpoints
	increase=5
	increase_total=5
	[/effect]
        [effect]
            apply_to=resistance
            replace=no
            [resistance]
                arcane=-10
                fire=-10
                cold=-10
            [/resistance]
        [/effect]
	) (
	)}
        {FORGE_UPGRADE_COMPANION2 Elizabeth elizabethII _"Elizabeth II: elizabeth now summons 2 allied fire guardians whenever entering a depth." "icons/fireguardian.png~BLIT(icons/overlay_II.png)" elizabethI (
	) (
#effect is kicked in in the depth descent event
	)}
        {FORGE_UPGRADE_COMPANION3 Elizabeth elizabethIII _"Elizabeth III: +2 damage/+5 hitpoints/+10% magical resistances for Elizabeth" "attacks/staff-ruby.png~BLIT(icons/overlay_III.png)" elizabethII archmage2 (
	[effect]
	apply_to=attack
	increase_damage=2
	[/effect]
	[effect]
	apply_to=hitpoints
	increase=5
	increase_total=5
	[/effect]
        [effect]
            apply_to=resistance
            replace=no
            [resistance]
                arcane=-10
                fire=-10
                cold=-10
            [/resistance]
        [/effect]
	) (
	)}

        {FORGE_UPGRADE_COMPANION Algadur,Elizabeth companion_recovery _"Quick recovery I: the cooldown for companions after getting wounded is now only only 2 depths instead of 3." icons/companionrecovery.png (
	) (
	{VARIABLE_OP algadur_cooldown sub 1}
	{VARIABLE_OP elizabeth_cooldown sub 1}
	)}
        {FORGE_UPGRADE_COMPANION2 Algadur,Elizabeth companion_recoveryII _"Quick recovery II: the companions' cooldown is now only 1 depth." "icons/companionrecoveryII.png~BLIT(icons/overlay_II.png)" companion_recovery (
	) (
	{VARIABLE_OP algadur_cooldown sub 1}
	{VARIABLE_OP elizabeth_cooldown sub 1}
	)}
        {FORGE_UPGRADE armorI _"Improved Armor: +10 max hp." icons/breastplate.png (
	[effect]
	apply_to=hitpoints
	increase=10
	increase_total=10
	[/effect]
        ) (
   )}
   #now post-spiderqueen:
	{FORGE_UPGRADE3 armorII _"Improved Armor II: +10 max hp." "icons/breastplate.png~BLIT(icons/overlay_II.png)" armorI spiderqueen (
	[effect]
	apply_to=hitpoints
	increase=10
	increase_total=10
	[/effect]
        ) ()}
	{FORGE_UPGRADE3 armorIII _"Improved Armor III: +10 max hp." "icons/breastplate.png~BLIT(icons/overlay_III.png)" armorII archmage (
	[effect]
	apply_to=hitpoints
	increase=10
	increase_total=10
	[/effect]
        ) ()}
   #armor IV is post-donovan, since ares improves your armor with resistances anyway
	{FORGE_UPGRADE3 armorIV _"Improved Armor IV: +10 max hp." "icons/breastplate.png~BLIT(icons/overlay_III.png)" armorIII donovan (
	[effect]
	apply_to=hitpoints
	increase=10
	increase_total=10
	[/effect]
        ) ()}
#scrapped the old resistance buff in favor of hp, as it stacked a bit too much with ares armor imo
#	{FORGE_UPGRADE3 armorIII _"Improved Armor III: +15% to all resistances." "icons/breastplate.png~BLIT(icons/overlay_III.png)" armorII spiderqueen (
#        [effect]
#            apply_to=resistance
#            replace=no
#            [resistance]
#                blade=-15
#                pierce=-15
#                impact=-15
#                arcane=-15
#                fire=-15
#                cold=-15
#            [/resistance]
#        [/effect]
#        ) (
#)}
#now post-ares instead of post-archmage, and requires armor III
	{FORGE_UPGRADE3 regeneration _"Regeneration: you are healed by 2 hp every turn (also slows poison)." icons/regeneration.png armorIII ares (
	[effect]
		apply_to=new_ability
		[abilities]
            [regenerate]
                value=2
                id=hoplite_regenerates2
                name= _ "regenerates +2"
                female_name= _ "female^regenerates +2"
                description= _ "The unit will heal itself 2 HP per turn."
                affect_self=yes
                poison=slowed
            [/regenerate]
		[/abilities]
	[/effect]	
	) ()}
	{FORGE_UPGRADE2 firmstance _"Firm Stance: gain the 'knockback resistance 1' ability" icons/cuirass_muscled.png armorI (
	[effect]
		apply_to=new_ability
		[abilities]
         {ABILITY_HOPLITE_KNOCKBACKRESIST 1}
		[/abilities]
	[/effect]	
	) ()}
	{FORGE_UPGRADE3 firmstanceII _"Firm Stance II: gain the 'knockback resistance 2' ability instead of knockback resist 1" "icons/cuirass_muscled.png~BLIT(icons/overlay_II.png)" firmstance ares (
	[effect]
		apply_to=remove_ability
		[abilities]
         {ABILITY_HOPLITE_KNOCKBACKRESIST 1}
		[/abilities]
	[/effect]	
	[effect]
		apply_to=new_ability
		[abilities]
         {ABILITY_HOPLITE_KNOCKBACKRESIST 2}
		[/abilities]
	[/effect]	
	) ()}
#	{FORGE_UPGRADE healpotionI _"Healing Potion: You can recover 10 hitpoints via a rightclick menu item on the hero. Only usable once per two depths." icons/potion_red_small.png () (

	{FORGE_UPGRADE healpotionI _"Healing Potion: You can recover 10 hitpoints via a rightclick menu item on the hero. Only usable once per depth." icons/potion_red_small.png () (
        [if]
        [have_unit]
	  id=Hoplite2
        [/have_unit]
        [then]
        {HOPLITE_PLAYERFILTER1b (	
	{VARIABLE healpotion_restore1 10}
	) (
	{VARIABLE healpotion_restore2 10}
	)}
	[/then]
	[else]
	{VARIABLE healpotion_restore 10}
	[/else]
	[/if]
        )}
	{FORGE_UPGRADE2 healpotionII _"Healing Potion II: The healing potion recovers 15 hitpoints instead of 10." "icons/potion_red_medium.png~BLIT(icons/overlay_II.png)" healpotionI () (
        [if]
        [have_unit]
	  id=Hoplite2
        [/have_unit]
        [then]
        {HOPLITE_PLAYERFILTER1b (	
	{VARIABLE_OP healpotion_restore1 add 5}
	) (
	{VARIABLE_OP healpotion_restore2 add 5}
	)}
	[/then]
	[else]
	{VARIABLE_OP healpotion_restore add 5}
	[/else]
	[/if]
        )}
	{FORGE_UPGRADE3 healpotionIII _"Healing Potion III: The healing potion recovers 20 hitpoints instead of 15." "icons/healpotionIII.png~BLIT(icons/overlay_III.png)" healpotionII spiderqueen () (
        [if]
        [have_unit]
	  id=Hoplite2
        [/have_unit]
        [then]
        {HOPLITE_PLAYERFILTER1b (	
	{VARIABLE_OP healpotion_restore1 add 5}
	) (
	{VARIABLE_OP healpotion_restore2 add 5}
	)}
	[/then]
	[else]
	{VARIABLE_OP healpotion_restore add 5}
	[/else]
	[/if]
        )}
  {FORGE_UPGRADE3 healpotionIV _"Healing Potion IV: The healing potion recovers 25 hitpoints instead of 20." "icons/healpotionIV.png~BLIT(icons/overlay_IV.png)" healpotionIII archmage () (
        [if]
        [have_unit]
    id=Hoplite2
        [/have_unit]
        [then]
        {HOPLITE_PLAYERFILTER1b ( 
  {VARIABLE_OP healpotion_restore1 add 5}
  ) (
  {VARIABLE_OP healpotion_restore2 add 5}
  )}
  [/then]
  [else]
  {VARIABLE_OP healpotion_restore add 5}
  [/else]
  [/if]
        )}
  {FORGE_UPGRADE3 healpotionV _"Healing Potion V: The healing potion recovers 30 hitpoints instead of 25." "icons/healpotionIV.png~BLIT(icons/overlay_V.png)" healpotionIV ares () (
        [if]
        [have_unit]
    id=Hoplite2
        [/have_unit]
        [then]
        {HOPLITE_PLAYERFILTER1b ( 
  {VARIABLE_OP healpotion_restore1 add 5}
  ) (
  {VARIABLE_OP healpotion_restore2 add 5}
  )}
  [/then]
  [else]
  {VARIABLE_OP healpotion_restore add 5}
  [/else]
  [/if]
        )}
  {FORGE_UPGRADE3 healpotionVI _"Healing Potion VI: The healing potion recovers 35 hitpoints instead of 30." "icons/healpotionIV.png~BLIT(icons/overlay_VI.png)" healpotionV duo () (
        [if]
        [have_unit]
    id=Hoplite2
        [/have_unit]
        [then]
        {HOPLITE_PLAYERFILTER1b ( 
  {VARIABLE_OP healpotion_restore1 add 5}
  ) (
  {VARIABLE_OP healpotion_restore2 add 5}
  )}
  [/then]
  [else]
  {VARIABLE_OP healpotion_restore add 5}
  [/else]
  [/if]
        )}
	{FORGE_UPGRADE2 healpotionenergy _"Envigorating Healing: Drinking a healing potion also restores 75 energy." icons/healpotionenergy.png healpotionI () (
#effect is kicked in in the abilities file
        )}

	{FORGE_UPGRADE3 healpotionenergyII _"Envigorating Healing II: Drinking a healing potion restores 150 energy, and gives +50% damage for one turn." "icons/healpotionenergy.png~BLIT(icons/overlay_II.png)" healpotionenergy ares () (
#effect is kicked in in the abilities file
        )}

#TODO: rework this upgrade into "you can hold up to two potions"

#	{FORGE_UPGRADE2 healpotionbag _"Potion Bag: Now potions can be used once per depth, instead of every 2 depths." icons/healpotionbag.png healpotionI () (
#effect is kicked in in the abilities file
#        )}
	{FORGE_UPGRADE2 phoenixamulet _"Phoenix Amulet: Instead of dying, you recover 10 hitpoints, deal 10 fire damage to all adjacent enemies, and slow all enemies on the map. The effect has a cooldown of 3 depths." icons/phoenix_amulet.png healpotionI () (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE hoplite_phoenix_recharge2 3}
	[/then]
	[else]
        {VARIABLE hoplite_phoenix_recharge1 3}
	[/else])}
        )}
	{FORGE_UPGRADE4 phoenixamuletII _"Phoenix Amulet II: Reviving now heals the same amount as the healing potion, as well as restoring 75 energy." "icons/phoenix_amulet.png~BLIT(icons/overlay_II.png)" (
        {VARIABLE_CONDITIONAL phoenixamulet_unlocked1 equals yes}
	[and]
        {VARIABLE_CONDITIONAL healpotionII_unlocked1 equals yes}
	[/and]
	) (
        {VARIABLE_CONDITIONAL phoenixamulet_unlocked2 equals yes}
	[and]
        {VARIABLE_CONDITIONAL healpotionII_unlocked2 equals yes}
	[/and]
	) (
        {VARIABLE_CONDITIONAL phoenixamulet_unlocked equals yes}
	[and]
        {VARIABLE_CONDITIONAL healpotionII_unlocked equals yes}
	[/and]
	) ()
        (
#nothing to put here, as the effect is kicked in in the abilities file.
        )}
	{FORGE_UPGRADE3 amuletcharge _"Amulet Charge: the phoenix amulet cooldown is reduced from 3 depths to 2." icons/phoenix_amulet.png phoenixamulet archmage () (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE hoplite_phoenix_recharge2 2}
	[/then]
	[else]
        {VARIABLE hoplite_phoenix_recharge1 2}
	[/else])}
        )}
	{FORGE_UPGRADE3 amuletchargeII _"Amulet Charge II: the phoenix amulet cooldown is reduced from 2 depths to 1." "icons/phoenix_amulet.png~BLIT(icons/overlay_II.png)" amuletcharge reaper () (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE hoplite_phoenix_recharge2 1}
	[/then]
	[else]
        {VARIABLE hoplite_phoenix_recharge1 1}
	[/else])}
        )}
	{FORGE_UPGRADE impale _"Spear Impale: killing an enemy with spear damages the enemy behind the target." attacks/spear.png (
	[effect]
	apply_to=attack
	name=spear
        [set_specials]
             mode=append
             {WEAPON_SPECIAL_IMPALE}
        [/set_specials]
	[/effect]
        ) ()}
	{FORGE_UPGRADE3 impaleII _"Spear Impale II: the target will deal 33% less damage for a turn after being struck with the spear." "attacks/spear.png~BLIT(icons/overlay_II.png)" impale spiderqueen (
	[effect]
	apply_to=attack
	name=spear
        [set_specials]
             mode=replace#append
             {WEAPON_SPECIAL_IMPALEII}
        [/set_specials]
	[/effect]	
	) ()}
	{FORGE_UPGRADE3 impaleIII _"Spear Impale III: If there isn't an enemy behind the killed target, the enemy behind you gets attacked instead." "attacks/spear.png~BLIT(icons/overlay_III.png)" impaleII archmage (
	[effect]
	apply_to=attack
	name=spear
        [set_specials]
             mode=replace#append
             {WEAPON_SPECIAL_IMPALEIII}
        [/set_specials]
	[/effect]	
	) ()}
	{FORGE_UPGRADE3 speardmg _"Spear Mastery: +5 spear damage" "attacks/spear-ares.png" impale donovan (
	[effect]
	apply_to=attack
	name=spear
	increase_damage=5
	[/effect]	
	) ()}
	{FORGE_UPGRADE swordhitandrun _"Hit and Run: attacking with the short sword now lets you flee 1 tile after attacking." attacks/sword-human-short.png (
	[effect]
	apply_to=attack
	name=sword
        [set_specials]
             mode=append
    [dummy]
        id=hoplite_hitandrun
        name= _ "hit and run"
        description=_"This unit gains 1 movepoint back after attacking when using this attack, but cannot attack again on the same turn."
    [/dummy]
        [/set_specials]
	[/effect]
        ) ()}
	{FORGE_UPGRADE3 swordcombo _"Sword Combo: killing an enemy with shortsword lets you attack again with any weapon once per turn" "attacks/sword-human-short.png~BLIT(icons/overlay_II.png)" swordhitandrun spiderqueen (
	[effect]
	apply_to=attack
	name=sword
        [set_specials]
             mode=append
    [dummy]
        id=hoplite_combo
        name= _ "combo"
        description=_"If an enemy is killed with this attack, the attacker can attack again with any weapon. This effect triggers once per turn."
    [/dummy]
        [/set_specials]
	[/effect]
        ) ()}
	{FORGE_UPGRADE2 swordlunge _"Sword Lunge: the shortsword deals 5 more damage if the attack is done after leaping. (the bonus is 7 if you have the artifacts)" "attacks/sword-human-short.png~BLIT(icons/overlay_II.png)" swordhitandrun (
        ) ()}
	{FORGE_UPGRADE swordcounterattack _"Counterattack: the short sword can now be used in defense." attacks/sword-human-short.png (
	[effect]
	apply_to=attack
	name=sword
	defense_weight=1.0
    [set_specials]
         mode=append
         {SPECIAL_HOPLITE_COUNTERATTACK}
    [/set_specials]
	[/effect]
        ) ()}

	{FORGE_UPGRADE axe _"Axe: new powerful melee attack (14 damage), but which can only be used when you start your turn new to the target." attacks/axe.png (
        [effect]
            apply_to=new_attack
            name="axe"
            description= _ "axe"
            icon=attacks/axe.png
            type=blade
            range=melee
            [specials]
                [dummy]
                    id=shortranged2
                    name= _ "short-ranged"
                    description=_ "This attack can only used if the unit is standing next to the target at the start of the unit's turn."
                [/dummy]
            [/specials]
            damage=14
            number=1
            defense_weight=0.0
        [/effect]
        [effect]
            apply_to=new_animation
            [attack_anim]
                [filter_attack]
                    name=axe
                [/filter_attack]
                start_time=-200
        
                [frame]
	            duration=300
                [/frame]
        
                {SOUND:HIT_AND_MISS axe.ogg {SOUND_LIST:MISS} -100}
            [/attack_anim]
        [/effect]
    ) ()}

	{FORGE_UPGRADE2 axeII _"Axe II: axe deals 3 more damage." "attacks/axe.png~BLIT(icons/overlay_II.png)" axe (
	[effect]
	apply_to=attack
	name=axe
	increase_damage=3
	[/effect]
        ) ()}

	{FORGE_UPGRADE3 axeIII _"Axe III: axe deals 4 more damage." "attacks/battleaxe.png~BLIT(icons/overlay_III.png)" axeII ares (
	[effect]
	apply_to=attack
	name=axe
  set_icon="attacks/battleaxe.png"
	increase_damage=4
	[/effect]
        ) ()}

	{FORGE_UPGRADE3 axeIV _"Axe IV: axe deals 4 more damage." "attacks/battleaxe.png~BLIT(icons/overlay_IV.png)" axeIII donovan (
	[effect]
	apply_to=attack
	name=axe
  set_icon="attacks/battleaxe.png"
	increase_damage=4
	[/effect]
        ) ()}


	{FORGE_UPGRADE3 axeV _"Axe V: axe deals 5 more damage." "attacks/battleaxe.png~BLIT(icons/overlay_V.png)" axeIV duo (
	[effect]
	apply_to=attack
	name=axe
	increase_damage=5
	[/effect]
        ) ()}

	{FORGE_UPGRADE mightybash _"Mighty Bash: The shield now knocks back further, and can also push an enemy standing behind the target. Additionally, bashing enemies into walls deals more damage if the enemy is already close to a wall" icons/protect-red-2.png  (
	[effect]
	apply_to=attack
	name=shield
	remove_specials=knockback
      [set_specials]
         mode=append
         {SPARTAN_KNOCKBACKSPECIAL 2}
      [/set_specials]
	[/effect]
        ) (
#no longer needed
#	{IF_VAR current_side_2 equals yes (
#	[then]
#        {VARIABLE_OP hoplite_shield_distance2 add 1}
#	[/then]
#	[else]
#        {VARIABLE_OP hoplite_shield_distance1 add 1}
#	[/else])}

	)}

	{FORGE_UPGRADE3 herculeanbash _"Herculean Bash: The shield now knocks back even further (and bashing enemies into walls deals even more damage if the enemy is already close to a wall)" "icons/protect-red-3.png~BLIT(icons/overlay_II.png)" mightybash ares (
	[effect]
	apply_to=attack
	name=shield
	remove_specials=knockback
      [set_specials]
         mode=append
         {SPARTAN_KNOCKBACKSPECIAL 3}
      [/set_specials]
	[/effect]
        ) (
#no longer needed
#	{IF_VAR current_side_2 equals yes (
#	[then]
#        {VARIABLE_OP hoplite_shield_distance2 add 1}
#	[/then]
#	[else]
#        {VARIABLE_OP hoplite_shield_distance1 add 1}
#	[/else])}
	)}

	{FORGE_UPGRADE3 spikedshield _"Spiked Shield: now the shield bash deals 5 damage on hit." icons/shield-spiked.png mightybash spiderqueen (
	[effect]
	apply_to=attack
	name=shield
#	increase_damage=4
	increase_damage=5#since base damage is now 0
	[/effect]
        ) ()}

	{FORGE_UPGRADE shieldup _"Shield Up: your resistances increase by 33% for a turn after shield bashing. (up to a max. of 60%)" attacks/rectangular-shield.png (
	[effect]
	apply_to=attack
	name=shield
        [set_specials]
             mode=append
             [dummy]
             	id=shieldup_dummy
             	name=_"shield up"
             	description=_"After using this attack, you gain a bonus to resistances until the start of your next turn."
             [/dummy]
        [/set_specials]
	[/effect]
        ) (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE shieldup_resistance2 33}
        {VARIABLE shieldup_resistance_cap2 60}
	[/then]
	[else]
        {VARIABLE shieldup_resistance1 33}
        {VARIABLE shieldup_resistance_cap1 60}
	[/else])}
	)}
	{FORGE_UPGRADE3 shieldupII _"Shield Up II: the resistance bonus is now 50% instead of 33%. (up to a max. of 70%)" "attacks/rectangular-shield.png~BLIT(icons/overlay_II.png)" shieldup spiderqueen (
        ) (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE shieldup_resistance2 33}
        {VARIABLE shieldup_resistance_cap2 70}
	[/then]
	[else]
        {VARIABLE shieldup_resistance1 33}
        {VARIABLE shieldup_resistance_cap1 70}
	[/else])}
	)}
	{FORGE_UPGRADE4 shieldwall _"Shield Wall: the shield up effect is also activated when you skip your turn." attacks/rectangular-shield.png (
        {VARIABLE_CONDITIONAL shieldup_unlocked1 equals yes}
	[and]
        {VARIABLE_CONDITIONAL patience_unlocked1 equals yes}
	[/and]
	) (
        {VARIABLE_CONDITIONAL shieldup_unlocked2 equals yes}
	[and]
        {VARIABLE_CONDITIONAL patience_unlocked2 equals yes}
	[/and]
	) (
        {VARIABLE_CONDITIONAL shieldup_unlocked equals yes}
	[and]
        {VARIABLE_CONDITIONAL patience_unlocked equals yes}
	[/and]
	) ()
        (
#nothing to put here, as the effect is kicked in in the abilities file.
        )}
	{FORGE_UPGRADE sweepingbash _"Sweeping Bash: The shield can now knock back several enemies at once (knocks back enemies that are adjacent to both you and the target)" attacks/rectangular-shield.png (
	[effect]
	apply_to=attack
	name=shield
      [set_specials]
         mode=append
         {WEAPON_SPECIAL_SPARTAN_SWEEPINGBASH}
      [/set_specials]
	[/effect]
    ) (
	)}

	{FORGE_UPGRADE3 spinningbash _"Spinning Bash: The shield now knocks back all adjacent enemies" "attacks/rectangular-shield.png~BLIT(icons/overlay_II.png)" sweepingbash spiderqueen (
	[effect]
	apply_to=attack
	name=shield
	remove_specials=spartan_sweepingbash
      [set_specials]
         mode=append
         {WEAPON_SPECIAL_SPARTAN_SPINNINGBASH}
      [/set_specials]
	[/effect]
        ) (
	)}

#used to be called Shortbow and had 3 range, but changed to 4 for now, since 3 range with 1-turn aim is honestly too weak (and previously you had to get the second bow upgrade to make the weapon viable, which gave both damage AND range)
  {FORGE_UPGRADE bow _"Bow: new ranged attack (10 damage), with a 4-tile range but a 1-tile blindspot. Aiming the bow ends your turn. Can't shoot invisible enemies." attacks/bow.png (
        [effect]
            apply_to=new_attack
            name=bow
            description= _ "bow"
#            icon=attacks/bow-short.png
            icon=attacks/bow.png
            type=pierce
            range=melee
            [specials]
                [dummy]
                    id=hoplite_bow
                    name= _ "bow"
                    description=_ "This attack can attack units in the direction that you select via rightlick menu on an adjacent hex. It has a 3-tile range (can be increased by upgrades) but a 1 tile blindspot. To shoot the bow you must first aim it in a direction, then it will be shot at the start of the next turn."
                [/dummy]
            [/specials]
            damage=10
            number=1
            attack_weight=0.0
            defense_weight=0.0
        [/effect]
        [effect]
            apply_to=new_animation
            [attack_anim]
                [filter_attack]
                    name=bow
                [/filter_attack]
                missile_start_time=-150
                [missile_frame]
                    duration=150
                    image="projectiles/missile-n.png"
                    image_diagonal="projectiles/missile-ne.png"
                [/missile_frame]
                start_time=-380
                [frame]
                    duration=400
                [/frame]
                {SOUND:HIT_AND_MISS bow.ogg bow-miss.ogg -380}
            [/attack_anim]
        [/effect]
    ) (
        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE hoplite_bow_range1 4}
        {VARIABLE hoplite_bow_blindspot1 1}
        ) (
        {VARIABLE hoplite_bow_range2 4}
        {VARIABLE hoplite_bow_blindspot2 1}
        )}
  )}

#  {FORGE_UPGRADE2 bowII _"Bow II: bow deals 2 more damage." "attacks/bow.png~BLIT(icons/overlay_II.png)" bow (
#  [effect]
#  apply_to=attack
#  name=bow
#  increase_damage=2
#  set_icon="attacks/bow.png"
#  [/effect]) ()}

#  {FORGE_UPGRADE2 bowII _"Bow II: bow has 1 more range." "attacks/bow-elven.png~BLIT(icons/overlay_III.png)" bow () (
#        {HOPLITE_PLAYERFILTER1b (
#        {VARIABLE_OP hoplite_bow_range1 add 1}
#        ) (
#        {VARIABLE_OP hoplite_bow_range2 add 1}
#        )}
#  )}
#
#  {FORGE_UPGRADE3 bowIII _"Longbow: bow has 1 more range." "attacks/bow-elven.png~BLIT(icons/overlay_III.png)" bowII spiderqueen (
#  [effect]
#  apply_to=attack
#  name=bow
#  set_icon="attacks/bow-elven.png"
#  [/effect]
#        ) (
#        {HOPLITE_PLAYERFILTER1b (
#        {VARIABLE_OP hoplite_bow_range1 add 1}
#        ) (
#        {VARIABLE_OP hoplite_bow_range2 add 1}
#        )}
#  )}

  {FORGE_UPGRADE2 bowII _"Longbow: bow has 1 more range." "attacks/bow-elven.png~BLIT(icons/overlay_II.png)" bow (
  [effect]
  apply_to=attack
  name=bow
  set_icon="attacks/bow-elven.png"
  [/effect]
        ) (
        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE_OP hoplite_bow_range1 add 1}
        ) (
        {VARIABLE_OP hoplite_bow_range2 add 1}
        )}
  )}

  {FORGE_UPGRADE3 bowIII _"Enchanted Bow: bow deals 5 more damage." "attacks/bow-elven-magic.png~BLIT(icons/overlay_III.png)" bowII ares (
  [effect]
  apply_to=attack
  name=bow
  increase_damage=5
  set_icon="attacks/bow-elven-magic.png"
  [/effect]
        ) ()}

  {FORGE_UPGRADE3 bowIV _"Bow Mastery: shoot bow on the same turn as aiming." "attacks/bow-elven-magic.png~BLIT(icons/overlay_IV.png)" bowIII donovan () ()}

  {FORGE_UPGRADE3 bow_eagle_eye _"Eagle Eye: bow has 1 more range and can hit invisible enemies." "attacks/gaze.png" bowII spiderqueen () (
        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE_OP hoplite_bow_range1 add 1}
        ) (
        {VARIABLE_OP hoplite_bow_range2 add 1}
        )}
  )}

  {FORGE_UPGRADE3 bow_pointblank _"Point Blank Archery: bow no longer has a blindspot." "attacks/bow-short-reinforced.png" bowII spiderqueen () (
        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE hoplite_bow_blindspot1 0}
        ) (
        {VARIABLE hoplite_bow_blinspot2 0}
        )}
  )}

  {FORGE_UPGRADE3 bow_knockback _"Heavy Arrow: bow now has 1-tile knockback." "attacks/spear-simple.png" bowII archmage (
  [effect]
	   apply_to=attack
	   name=bow
      [set_specials]
         mode=append
         {SPARTAN_KNOCKBACKSPECIAL 1}#in this case it's purely visual
      [/set_specials]
  [/effect]
  ) (
       #upgrade triggered in bow shoot even
  )}

	{FORGE_UPGRADE spearthrowrangeI _"Increased spear throw range by 1 tile." attacks/spear-thrown.png (
        ) (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE_OP hoplite_spearthrow_radius2 add 1}
	[/then]
	[else]
        {VARIABLE_OP hoplite_spearthrow_radius1 add 1}
	[/else])}
	)}
	{FORGE_UPGRADE2 spearthrowrangeII _"Spear Throw II: Increased spear throw damage by 5, and spear throw range by 1 tile." "attacks/spear-thrown.png~BLIT(icons/overlay_II.png)" spearthrowrangeI (
	[effect]
	apply_to=attack
	name=spear2
	increase_damage=5
	[/effect]
) (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE_OP hoplite_spearthrow_radius2 add 1}
	[/then]
	[else]
        {VARIABLE_OP hoplite_spearthrow_radius1 add 1}
	[/else])}
	)}

  {FORGE_UPGRADE3 spearthrowrangeIII _"Spear Throw III: Increased spear throw range by 1 tile." "attacks/spear-thrown.png~BLIT(icons/overlay_III.png)" spearthrowrangeII ares () (
  {IF_VAR current_side_2 equals yes (
  [then]
        {VARIABLE_OP hoplite_spearthrow_radius2 add 1}
  [/then]
  [else]
        {VARIABLE_OP hoplite_spearthrow_radius1 add 1}
  [/else])}
  )}

  {FORGE_UPGRADE3 spearthrowrangeIV _"Spear Throw IV: Increased spear throw range by 1 tile." "attacks/spear-thrown.png~BLIT(icons/overlay_IV.png)" spearthrowrangeIII donovan () (
  {IF_VAR current_side_2 equals yes (
  [then]
        {VARIABLE_OP hoplite_spearthrow_radius2 add 1}
  [/then]
  [else]
        {VARIABLE_OP hoplite_spearthrow_radius1 add 1}
  [/else])}
  )}

#  {FORGE_UPGRADE3 spear_recall _"Recall: can recall your spear back to yourself via a rightclick menu on yourself or the spear. Costs 50 energy and ends your turn" "attacks/spear-thrown.png" spearthrowrangeI spiderqueen () ()}

  {FORGE_UPGRADE3 spear_recall _"Recall: can recall your spear back to yourself via a rightclick menu on yourself or the spear. This ends your turn" "attacks/spear-thrown.png" spearthrowrangeI spiderqueen () ()}

  {FORGE_UPGRADE3 spear_follow _"Follow: can teleport to your spear via a rightclick menu on yourself or the spear. Costs 50 energy and ends your turn" "icons/teleport.png" teleport archmage () ()}

	{FORGE_UPGRADE3 spearthrowexplode _"Explosive Spear: spear throw harms all enemies around the target by half the spear throw damage, and slows them." "attacks/fireball.png" spearthrowrangeI archmage () (
#effect kicked in in the spear throw menu
	)}
#	{FORGE_UPGRADE spearmove _"Spear throw doesn't end your turn, allowing you to move and/or attack after throwing the spear." attacks/spear-thrown.png () #(
##effect kicked in in the spear throw menu	
#	)}
        [option]
                        image=units/unknown-unit.png~RC(magenta>white)
                        description=_"???: beat a certain boss to unlock this upgrade."
			[show_if]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR (
                [variable]
                   name=wizardbeam_unlocked1
                   not_equals=yes
                [/variable]
		[and]
                [variable]
                   name=spearthrowrangeI_unlocked1
                   equals=yes
                [/variable]
		[or]
                [variable]
                   name=bow_unlocked1
                   equals=yes
                [/variable]
		[/or]
		[/and]
		[and]
                [variable]
                   name=archmage_beaten
                   not_equals=yes
                [/variable]
		[/and]
		) (
                [variable]
                   name=wizardbeam_unlocked2
                   not_equals=yes
                [/variable]
		[and]
                [variable]
                   name=spearthrowrangeI_unlocked2
                   equals=yes
                [/variable]
		[or]
                [variable]
                   name=bow_unlocked2
                   equals=yes
                [/variable]
		[/or]
		[/and]
		[and]
                [variable]
                   name=archmage_beaten
                   not_equals=yes
                [/variable]
		[/and]
		)}
#else
                [variable]
                   name=wizardbeam_unlocked
                   not_equals=yes
                [/variable]
		[and]
                [variable]
                   name=spearthrowrangeI_unlocked
                   equals=yes
                [/variable]
		[or]
                [variable]
                   name=bow_unlocked
                   equals=yes
                [/variable]
		[/or]
		[/and]
		[and]
                [variable]
                   name=archmage_beaten
                   not_equals=yes
                [/variable]
		[/and]
#endif
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades
                   not_equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                   name=hoplite_showcurrentupgrades2
                   not_equals=yes
                [/variable]
            [/and]
		[/show_if]
        [command]
        [/command]
        [/option]
	{FORGE_UPGRADE4 wizardbeam _"Flame Blast: You gain an extra ranged attack along with spear throw, that is able hit multiple enemies at once. (explained more in the 'Flame Blast' section of the information menu)" attacks/fire-blast.png (
        {VARIABLE_CONDITIONAL archmage_beaten equals yes}
        {VARIABLE_CONDITIONAL bow_unlocked1 equals yes}
	[or]
        {VARIABLE_CONDITIONAL archmage_beaten equals yes}
        {VARIABLE_CONDITIONAL spearthrowrangeI_unlocked1 equals yes}
	[/or]
	) (
        {VARIABLE_CONDITIONAL archmage_beaten equals yes}
        {VARIABLE_CONDITIONAL bow_unlocked2 equals yes}
	[or]
        {VARIABLE_CONDITIONAL archmage_beaten equals yes}
        {VARIABLE_CONDITIONAL spearthrowrangeI_unlocked2 equals yes}
	[/or]
	) (
        {VARIABLE_CONDITIONAL archmage_beaten equals yes}
        {VARIABLE_CONDITIONAL bow_unlocked equals yes}
	[or]
        {VARIABLE_CONDITIONAL archmage_beaten equals yes}
        {VARIABLE_CONDITIONAL spearthrowrangeI_unlocked equals yes}
	[/or]
	) (
		[effect]
			apply_to=new_attack
        name=wizardbeam
        description=_"flame blast"
        type=fire
        [specials]
    [dummy]
        id=hoplite_wizardbeam
        name= _ "flame blast"
        description=_ "This attack can attack units in a line, in the direction that you select via rightlick menu on an adjacent hex. It has a 3-tile range (can be increased by upgrades) 3-turn cooldown by default (can be decreased with upgrades). If there are no enemies in range, nothing happens and you the action isn't wasted."
    [/dummy]
        [/specials]
        range=ranged
        damage=10
        number=1
        icon=attacks/fire-blast.png
        attack_weight=0.0
        defense_weight=0.0
	[/effect]	
        ) (

        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE hoplite_wizardbeam_max_cooldown1 4}
        {VARIABLE hoplite_wizardbeam_range1 3}
        ) (
        {VARIABLE hoplite_wizardbeam_max_cooldown2 4}
        {VARIABLE hoplite_wizardbeam_range2 3}
        )}

        )}
	{FORGE_UPGRADE2 wizardbeamII _"Flame Blast II: Flame blast has longer reach." "attacks/fire-blast.png~BLIT(icons/overlay_II.png)" wizardbeam () (
        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE hoplite_wizardbeam_range1 4}
        ) (
        {VARIABLE hoplite_wizardbeam_range2 4}
        )}

        )}
	{FORGE_UPGRADE3 wizardbeamIII _"Flame Blast III: Flame blast deals 15 damage instead of 10, and its cooldown is reduced from 4 turns to 3." "attacks/fire-blast.png~BLIT(icons/overlay_III.png)" wizardbeamII ares (
	[effect]
	apply_to=attack
	name=wizardbeam
	increase_damage=5
	[/effect]
        ) (

        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE hoplite_wizardbeam_max_cooldown1 3}
        ) (
        {VARIABLE hoplite_wizardbeam_max_cooldown2 3}
        )}

        )}

	{FORGE_UPGRADE3 wizardbeamIV _"Flame Blast Mastery: Flame blast deals 20 damage instead of 15, and its ranged is increased from 4 to 5." "attacks/fire-blast.png~BLIT(icons/overlay_IV.png)" wizardbeamIII archmage2 (
	[effect]
	apply_to=attack
	name=wizardbeam
	increase_damage=5
	[/effect]
        ) (

        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE hoplite_wizardbeam_range1 5}
        ) (
        {VARIABLE hoplite_wizardbeam_range2 5}
        )}

        )}

	{FORGE_UPGRADE energyI _"Increased maximum energy (+25)" icons/boots_elven.png (
        ) (
	{IF_VAR hoplite_maxenergy greater_than 0 (
	[then]
        {VARIABLE_OP hoplite_energy add 25}
        {VARIABLE_OP hoplite_maxenergy add 25}
	{SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
	[/then])}
	{IF_VAR hoplite_maxenergy1 greater_than 0 (
	[then]
        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE_OP hoplite_energy1 add 25}
        {VARIABLE_OP hoplite_maxenergy1 add 25}
	{SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
        ) (
        {VARIABLE_OP hoplite_energy2 add 25}
        {VARIABLE_OP hoplite_maxenergy2 add 25}
	{SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
        )}
	[/then])}
	)}
	{FORGE_UPGRADE2 energyII _"Energy II: Increased maximum energy (+25)" "icons/boots_elven.png~BLIT(icons/overlay_II.png)" energyI () (
	{IF_VAR hoplite_maxenergy greater_than 0 (
	[then]
        {VARIABLE_OP hoplite_energy add 25}
        {VARIABLE_OP hoplite_maxenergy add 25}
	{SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
	[/then])}
	{IF_VAR hoplite_maxenergy1 greater_than 0 (
	[then]
        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE_OP hoplite_energy1 add 25}
        {VARIABLE_OP hoplite_maxenergy1 add 25}
	{SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
        ) (
        {VARIABLE_OP hoplite_energy2 add 25}
        {VARIABLE_OP hoplite_maxenergy2 add 25}
	{SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
        )}
	[/then])}
        )}	
	{FORGE_UPGRADE3 energyIII _"Energy III: Increased maximum energy (+30)" "icons/boots_elven.png~BLIT(icons/overlay_III.png)" energyII spiderqueen () (
	{IF_VAR hoplite_maxenergy greater_than 0 (
	[then]
        {VARIABLE_OP hoplite_energy add 30}
        {VARIABLE_OP hoplite_maxenergy add 30}
	{SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
	[/then])}
	{IF_VAR hoplite_maxenergy1 greater_than 0 (
	[then]
        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE_OP hoplite_energy1 add 30}
        {VARIABLE_OP hoplite_maxenergy1 add 30}
	{SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
        ) (
        {VARIABLE_OP hoplite_energy2 add 30}
        {VARIABLE_OP hoplite_maxenergy2 add 30}
	{SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
        )}
	[/then])}
	)}
	{FORGE_UPGRADE3 energyIV _"Energy IV: Increased maximum energy (+30)" "icons/boots_elven.png~BLIT(icons/overlay_IV.png)" energyIII ares () (
	{IF_VAR hoplite_maxenergy greater_than 0 (
	[then]
        {VARIABLE_OP hoplite_energy add 30}
        {VARIABLE_OP hoplite_maxenergy add 30}
	{SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
	[/then])}
	{IF_VAR hoplite_maxenergy1 greater_than 0 (
	[then]
        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE_OP hoplite_energy1 add 30}
        {VARIABLE_OP hoplite_maxenergy1 add 30}
	{SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
        ) (
        {VARIABLE_OP hoplite_energy2 add 30}
        {VARIABLE_OP hoplite_maxenergy2 add 30}
	{SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
        )}
	[/then])}
	)}
	{FORGE_UPGRADE3 energyV _"Energy V: Increased maximum energy (+40)" "icons/boots_elven.png~BLIT(icons/overlay_V.png)" energyIV duo () (
	{IF_VAR hoplite_maxenergy greater_than 0 (
	[then]
        {VARIABLE_OP hoplite_energy add 40}
        {VARIABLE_OP hoplite_maxenergy add 40}
	{SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
	[/then])}
	{IF_VAR hoplite_maxenergy1 greater_than 0 (
	[then]
        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE_OP hoplite_energy1 add 40}
        {VARIABLE_OP hoplite_maxenergy1 add 40}
	{SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
        ) (
        {VARIABLE_OP hoplite_energy2 add 40}
        {VARIABLE_OP hoplite_maxenergy2 add 40}
	{SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
        )}
	[/then])}
	)}
	{FORGE_UPGRADE3 energyVI _"Energy VI: Increased maximum energy (+50)" "icons/boots_elven.png~BLIT(icons/overlay_VI.png)" energyV archmage2 () (
	{IF_VAR hoplite_maxenergy greater_than 0 (
	[then]
        {VARIABLE_OP hoplite_energy add 50}
        {VARIABLE_OP hoplite_maxenergy add 50}
	{SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
	[/then])}
	{IF_VAR hoplite_maxenergy1 greater_than 0 (
	[then]
        {HOPLITE_PLAYERFILTER1b (
        {VARIABLE_OP hoplite_energy1 add 50}
        {VARIABLE_OP hoplite_maxenergy1 add 50}
	{SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
        ) (
        {VARIABLE_OP hoplite_energy2 add 50}
        {VARIABLE_OP hoplite_maxenergy2 add 50}
	{SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
        )}
	[/then])}
	)}

	{FORGE_UPGRADE2 adrenaline _"Adrenaline Rush: If your hitpoints fall below half the maximum, you regain 75% your maximum energy. Additionally, if you have Bloodlust III, you also become enraged. The effect is only activated once per depth." "icons/adrenaline.png" energyI (
	[effect]
		apply_to=new_ability
		[abilities]
            [dummy]
               id=hoplite_adrenaline
            [/dummy]
		[/abilities]
	[/effect]	
	) (
	)}
#TODO	
#	{FORGE_UPGRADE3 energyIIIb _"Athleticism: leaping/teleporting only costs 40 energy, instead of 50." "icons/boots_elven.png~BLIT(icons/overlay_III.png)" energyII spiderqueen () (
#	)}
	{FORGE_UPGRADE2 teleport _"Teleport: Leap is replaced by short-ranged teleportation, allowing you to move to the other side of walls." icons/teleport.png energyI () (
#effect is applied in the leap ability event	
	)}
	{FORGE_UPGRADE3 teleportII _"Teleport II: The teleport radius is increased from 2 hexes to 3." "icons/teleport.png~BLIT(icons/overlay_II.png)" teleport archmage () (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE_OP hoplite_teleport_radius2 add 1}
	[/then]
	[else]
        {VARIABLE_OP hoplite_teleport_radius1 add 1}
	[/else])}
	)}
	#todo: maybe make this a post-reaper upgrade instead of a post-duo one, due to how powerful it is
	{FORGE_UPGRADE3 teleportIII _"Teleport III: The teleport radius is increased from 3 hexes to 4." "icons/teleport.png~BLIT(icons/overlay_III.png)" teleportII duo () (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE_OP hoplite_teleport_radius2 add 1}
	[/then]
	[else]
        {VARIABLE_OP hoplite_teleport_radius1 add 1}
	[/else])}
	)}
	{FORGE_UPGRADE3 teleportaway _"Teleport Away: when you're attacked, you teleport away to a nearby location, negating damage taken and slowing nearby enemies. However, this drains 75 energy per 10 damage you would receive from the attack. Can be disabled via rightclick menu" "icons/teleport.png" teleport archmage (
		[effect]
			apply_to=new_ability
			[abilities]
                [dummy]
                    id=hoplite_teleportaway
                    name= _ "teleport away"
                    description=_ "This unit teleports to a random location after being attacked, negating damage. However, this drains 75 energy per 10 damage you would receive from the attack."	
                [/dummy]
			[/abilities]
		[/effect]	
	) (
	{VARIABLE teleportaway_enabled yes}
	[if]
	 [have_unit]
	    id=Hoplite2
	 [/have_unit]
	 [then]
  	 {VARIABLE teleportaway_enabled2 yes}
	 [/then]
	[/if]
	)}

	{FORGE_UPGRADE3 lantern _"Lantern: see invisible enemies in a 3-tile radius instead of 2-tile radius" icons/lantern.png energyI archmage (
	[effect]
		apply_to=new_ability
		[abilities]
			[dummy]
				id=hoplite_keeneye
			[/dummy]
		[/abilities]
	[/effect]
        ) ()}

	{FORGE_UPGRADE bloodlust _"Bloodlust: Killing enemies gives 5 extra energy." icons/bloodlust.png () (
#effect is applied in the scenario file
        )}
	{FORGE_UPGRADE2 bloodlustII _"Bloodlust II: Whenever you kill a unit, you recover an amount of hitpoints equal to twice the level of the target." "icons/bloodlustII.png~BLIT(icons/overlay_II.png)" bloodlust () (
#effect is applied in the scenario file
        )}
#bloodlust III got nerfed:
#	{FORGE_UPGRADE3 bloodlustIII _"Bloodlust III: Killing 3 enemies in a row activates rage. While enraged, you deal 5 more damage with all attacks, and the effects of the previous bloodlust upgrades are doubled. Your killstreak resets if you don't kill an enemy or hit a boss on your turn. The enragement effect remains as long as you keep killing enemies, or hitting bosses." "icons/bloodlustIII.png~BLIT(icons/overlay_III.png)" bloodlustII spiderqueen () (
#effect is applied in the scenario file
#        )}
	{FORGE_UPGRADE3 bloodlustIII _"Bloodlust III: Killing 3 enemies in a row activates rage. While enraged, you deal 5 more damage with all attacks. Your killstreak resets if you don't kill an enemy or hit a boss on your turn. The enragement effect remains as long as you keep killing enemies, or hitting bosses." "icons/bloodlustIII.png~BLIT(icons/overlay_III.png)" bloodlustII spiderqueen () (
#effect is applied in the scenario file
        )}
	{FORGE_UPGRADE3 bloodlustIV _"Bloodlust IV: killing enemies gives you additional energy equal to double your killstreak (for example, killing the 7th enemy in a row, you gain 14 energy on top of the energy bonus from Bloodlust I)" "icons/bloodlustIII.png~BLIT(icons/overlay_IV.png)" bloodlustIII archmage () (
#effect is applied in the scenario file
        )}
#ally summon upgrades:	
	{FORGE_UPGRADE ratsI _"Rat tamer: when entering a depth, spawn 3 allied AI-controlled giant rats at random coordinates to fight for you. They are pretty good at distracting foes, as well as hunting down archers." icons/rats.png () (
	   {IF_VAR current_side_2 equals yes (
	   [then]
         {VARIABLE hoplite_rats2 3}
	   [/then]
	   [else]
         {VARIABLE hoplite_rats1 3}
	   [/else])}
	)}
	{FORGE_UPGRADE2 ratsII _"Rat trainer: the amount of rats spawned is increased from 3 to 5." "icons/rats.png~BLIT(icons/overlay_II.png)" ratsI () (
	   {IF_VAR current_side_2 equals yes (
	   [then]
         {VARIABLE_OP hoplite_rats2 add 2}
	   [/then]
	   [else]
         {VARIABLE_OP hoplite_rats1 add 2}
	   [/else])}
	)}
	{FORGE_UPGRADE3 ratsIII _"Rat master: the amount of rats spawned is increased from 5 to 7." "icons/rats.png~BLIT(icons/overlay_III.png)" ratsII spiderqueen () (
	   {IF_VAR current_side_2 equals yes (
	   [then]
         {VARIABLE_OP hoplite_rats2 add 2}
	   [/then]
	   [else]
         {VARIABLE_OP hoplite_rats1 add 2}
	   [/else])}
	)}
	{FORGE_UPGRADE3 ratsIV _"Rat army: the amount of rats spawned is increased from 7 to 9." "icons/rats.png~BLIT(icons/overlay_IV.png)" ratsIII archmage () (
	   {IF_VAR current_side_2 equals yes (
	   [then]
         {VARIABLE_OP hoplite_rats2 add 2}
	   [/then]
	   [else]
         {VARIABLE_OP hoplite_rats1 add 2}
	   [/else])}
	)}
	{FORGE_UPGRADE3 rat_legion _"Rat legion: every 4 (6 if you have colossal rats upgrade) turns, a rat will spawn at a random location." "icons/rats.png~BLIT(icons/overlay_V.png)" ratsIV archmage () (
#effect is kicked in in the scenario file
        {VARIABLE rat_cooldown 0}
	)}
#Alt. path:
	{FORGE_UPGRADE2 rat_power _"Frenzied rats: Increases rats' damage dealt from 3-1 to 5-1, and max hitpoints from 5 to 10." attacks/fangs-rodent.png ratsI () (
#effect is kicked in in the depth descent event
	)}
	{FORGE_UPGRADE3 rat_powerII _"Colossal rats: Increases rats' damage dealt from 5-1 to 8-1, and max hitpoints from 10 to 15. However, the amount of rats spawned will be reduced by 33%." "attacks/fangs-rodent.png~BLIT(icons/overlay_II.png)" rat_power archmage () (
#effect is kicked in in the depth descent event
	)}
#commented out for now, replaced by cave bear
#	{FORGE_UPGRADE3 rat_powerIII _"Rat King: at the start of a depth, turn a random rat into the rat king, with 25 hitpoints, 10 damage and knockback immunity, but only 1 movement." "attacks/fangs-rodent.png~BLIT(icons/overlay_III.png)" rat_powerII ares () (
#effect is kicked in in the depth descent event
#	)}

	{FORGE_UPGRADE3 bear _"Cave Bear: at the start of each depth, spawn a mighty Cave Bear." "icons/bear.png" rat_power ares () (
#effect is kicked in in the depth descent event
	)}

	{FORGE_UPGRADE3 bearII _"Cave Bear II: +10 bear hitpoints." "icons/bear.png~BLIT(icons/overlay_II.png)" bear donovan () (
#effect is kicked in in the depth descent event
	)}

	{FORGE_UPGRADE2 ambush _"Ambush: Allies aren't targeted by enemies on the first turn of entering a depth." icons/cloak_leather_brown.png ratsI () (
#effect is kicked in in the depth descent event
	)}
	{FORGE_UPGRADE3 shadowclone _"Shadow Clone: summon an allied shadow clone of yourself to fight your enemies via a rightclick menu on the hero (While the clone lacks most of your abilities, it is quite strong). This costs 100 energy, and has a cooldown of 2 depths." icons/shadowclone.png ratsI spiderqueen () (
#effect is kicked in in the abilities file
	)}
	{FORGE_UPGRADE2 shadowcloneII _"Shadow Clone II: the clone now has 30 hitpoints, and can leap every 3 turns. The effect does not apply to existing clones." "icons/shadowclone.png~BLIT(icons/overlay_II.png)" shadowclone () (
#effect is kicked in in the shadow clone file
	)}
	{FORGE_UPGRADE3 shadowcloneIII _"Shadow Clone III: the clone now has 35 hitpoints, 15% resistances and the impale special on its melee attack. The effect does not apply to existing clones." "icons/shadowclone.png~BLIT(icons/overlay_III.png)" shadowcloneII ares () (
#effect is kicked in in the shadow clone file
	)}
	{FORGE_UPGRADE3 shadowcloneIIIb _"Spectral Spear: the clone deals 5 more damage." "attacks/blank-attack.png~BLIT(attacks/spear.png~CROP(5,5,49,49)~O(70%)~GS()~CS(-200,-40,-0),5,5)" shadowcloneII ares () (
#effect is kicked in in the shadow clone file
	)}
	{FORGE_UPGRADE3 shadowclone_archer _"Shadow Clone Archer: the clone now has a 10-1 bow attack alongside the spear" "attacks/blank-attack.png~BLIT(attacks/bow-elven.png~CROP(5,5,49,49)~O(70%)~GS()~CS(-200,-40,-0),5,5)" shadowclone ares () (
#effect is kicked in in the shadow clone file
	)}
	{FORGE_UPGRADE2 shadowcloneIIb _"Cloning Proficiency: you can now summon a clone once per depth, instead of every 2 depths." icons/shadowclone.png shadowclone () (
#effect is kicked in in the shadow clone file
	)}
	{FORGE_UPGRADE3 enthrall _"Enthrall: you may turn adjacent enemies (except bosses) to your side via a rightclick option on them, this costs 75 energy per enemy level (35 if the enemy is lvl0) and ends your turn. Enthralling enemies fully heals them." "attacks/gaze.png" ratsI archmage () (
#triggered in the upgrade events file
	)}
	{FORGE_UPGRADE2 enthrallII _"Enthrall II: enthralled enemies now gain 5 more max hitpoints, deal 2 more damage, and regenerate 2 hitpoints per turn (does not affect existing thralls, only newly-made ones after getting this upgrade)." "attacks/gaze.png~BLIT(icons/overlay_II.png)" enthrall () (
#triggered in the upgrade events file
	)}
	{FORGE_UPGRADE3 enthrallIII _"Enthrall III: enthralled enemies now gain 1 more movement and 5 more max hitpoints (does not affect existing thralls, only newly-made ones after getting this upgrade)." "attacks/gaze.png~BLIT(icons/overlay_III.png)" enthrallII ares () (
#triggered in the upgrade events file
	)}
	{FORGE_UPGRADE3 enthrall_loyal _"Loyal Thrall: allows you to bring one thrall between depths (select a thrall via the rightclick menu to make it loyal, you can only have one loyal thrall at a time.)" "attacks/gaze.png" enthrall ares () (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE_OP hoplite_thrall_limit2 add 1}
	[/then]
	[else]
        {VARIABLE_OP hoplite_thrall_limit1 add 1}
	[/else])}
	)}
	{FORGE_UPGRADE3 enthrall_loyalII _"Loyal Thrall II: can have 2 loyal thralls at a time" "attacks/gaze.png~BLIT(icons/overlay_II.png)" enthrall_loyal donovan () (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE_OP hoplite_thrall_limit2 add 1}
	[/then]
	[else]
        {VARIABLE_OP hoplite_thrall_limit1 add 1}
	[/else])}
	)}
	{FORGE_UPGRADE3 enthrall_loyalIII _"Loyal Thrall III: can have 3 loyal thralls at a time" "attacks/gaze.png~BLIT(icons/overlay_III.png)" enthrall_loyalII duo () (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE_OP hoplite_thrall_limit2 add 1}
	[/then]
	[else]
        {VARIABLE_OP hoplite_thrall_limit1 add 1}
	[/else])}
	)}
#misc. stuff:
	{FORGE_UPGRADE patience _"Patience: You can now end your turn without moving. Recover 10 energy each time you skip your turn (end turn without moving or attacking)" attacks/blank-attack.png () (
	[allow_end_turn]
	[/allow_end_turn]
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE hoplite_rest_energybonus2 10}
	[/then]
	[else]
        {VARIABLE hoplite_rest_energybonus1 10}
	[/else])}
	)}

	{FORGE_UPGRADE2 footwork _"Footwork: no longer automatically end your turn when moving onto a tile that isn't adjacent to enemies (can be toggled via rightclick menu)" attacks/foot-boot.png patience () (
	   {IF_VAR current_side_2 equals yes (
	   [then]
         {VARIABLE hoplite_footwork_enabled2 yes}
	   [/then]
	   [else]
         {VARIABLE hoplite_footwork_enabled1 yes}
	   [/else])}
	)}

	{FORGE_UPGRADE2 rest _"Rest: Recover 20 energy each time you skip your turn" icons/rest.png patience () (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE hoplite_rest_energybonus2 20}
	[/then]
	[else]
        {VARIABLE hoplite_rest_energybonus1 20}
	[/else])}
	)}
	{FORGE_UPGRADE3 restII _"Rest II: Recover 30 energy and heal 2 hitpoints when skipping your turn." "icons/rest.png~BLIT(icons/overlay_II.png)" rest spiderqueen () (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE hoplite_rest_energybonus2 30}
        {VARIABLE hoplite_rest_heal2 2}
	[/then]
	[else]
        {VARIABLE hoplite_rest_energybonus1 30}
        {VARIABLE hoplite_rest_heal1 2}
	[/else])}
	)}
	{FORGE_UPGRADE3 restIII _"Rest III: Recover 40 energy and heal 3 hitpoints when skipping your turn." "icons/rest.png~BLIT(icons/overlay_III.png)" restII ares () (
	{IF_VAR current_side_2 equals yes (
	[then]
        {VARIABLE hoplite_rest_energybonus2 40}
        {VARIABLE hoplite_rest_heal2 3}
	[/then]
	[else]
        {VARIABLE hoplite_rest_energybonus1 40}
        {VARIABLE hoplite_rest_heal1 3}
	[/else])}
	)}
	{FORGE_UPGRADE3 chameleon _"Chameleon: You become invisible if you skip your turn. The invisibility wears off if you move or attack" icons/chameleon.png patience archmage (
		[effect]
			apply_to=new_ability
			[abilities]
    #using $| instead of $ for variable substitution here, so it's not substituted instantly
    [hides]
        id=spartan_chameleon
        name=_"chameleon"
        female_name=_"female^chameleon"
        description=_"This unit is invisible as long as it is not moving.

Enemy units cannot see this unit when it's standing on place, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        affect_self=yes
        [filter]
            [filter_wml]
                moves=$|this_unit.max_moves
            [/filter_wml]
            [or]
                [not]
                    side=$|hoplite_playerside
                [/not]
            [/or]
        [/filter]
    [/hides]
			[/abilities]
		[/effect]	
	) (
	[redraw]
	[/redraw])}

	{FORGE_UPGRADE swimming _"Swimming: can move in shallow water and water, you no longer take damage when knocked into shallow water/swamp" attacks/waterspray.png (
   [effect]
       apply_to=movement_costs
       replace=yes
       [movement_costs]
           shallow_water=1
           swamp_water=1
       [/movement_costs]
   [/effect]
#commented out for now
#	[effect]
#		apply_to=new_ability
#		[abilities]
#         {ABILITY_HOPLITE_SWIMMER}
#		[/abilities]
#	[/effect]
        ) ()}

#removed	
#	{FORGE_UPGRADE surprise _"Advantage of Surprise: When you enter a depth, all enemies are slowed for a turn." attacks/blank-attack.png () (
#the effect is kicked in the depth descent event	
#	)}
#enddef