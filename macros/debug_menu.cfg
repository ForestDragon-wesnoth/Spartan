#define HOPLITE_DEBUG_MENU
    [event]
        name=start
#turned off logging for now, can be reenabled in debug
#        #TODO: disable this closer to release:
#        {VARIABLE hoplite_logging yes}
    [set_menu_item]
        id=hoplite_debug
        description=_"Spartan debug"
        [show_if]
	  [have_unit]
	     id=Hoplite,Hoplite2
	     side=$side_number
	     x,y=$x1,$y1
	  [/have_unit]
	  [and]
	  	[lua]
	  		code=<<

	  		if wesnoth.game_config.debug == true then
	  			return true;
	  		end

	  		if wesnoth.game_config.mp_debug == true then
	  			return true;
	  		end

	  			return false;

	  		>>
	  	[/lua]
#	    [variable]
#	       name=hoplite_debug
#	       equals=yes
#	    [/variable]
        [or]
        	{VARIABLE_CONDITIONAL hoplite_debug equals yes}
        [/or]
	  [/and]
        [/show_if]
        [command]
	[message]
		speaker=narrator
		caption="Spartan Debug Menu"
                message="Select option:"
  	        side_for=$side_number
                [option]
                  	image="misc/red-x.png"
			description=_"Return to the Game"
			[command]
                        [/command]
		[/option]
                [option]
                       	image="attacks/blank-attack.png"
			description=_"Skip X Depths (all passed depths are shown)"
			[command]
          [message]
            speaker=narrator
            caption="Spartan Debug Menu"
            message="How many depths to skip?"
	    side_for=$side_number
            
            [text_input]
              variable=depths
            [/text_input]
          [/message]
	  {IF_VAR depths greater_than 0 (
	  [then]
	  [while]
	   [variable]
	     name=depths
	     greater_than=0
	   [/variable]
	  [do]
          [fire_event]
	    id=hoplite_depthdescent
          [/fire_event]
          [set_variable]
	    name=depths
	    sub=1
	  [/set_variable]
          [/do]
	  [/while]
	  [/then])}
	  {CLEAR_VARIABLE depths}
	               [/command]
	       [/option]
               [option]
                        image="attacks/blank-attack.png"
			description=_"Skip to Depth X (instant)"
			[command]
          [message]
            speaker=narrator
            caption=_"Spartan Debug Menu"
            message=_"Which depth to skip to?"
	    side_for=$side_number
            
            [text_input]
              variable=depth
            [/text_input]
          [/message]
	  {IF_VAR depth greater_than $hoplite_depth (
	  [and]
	  {VARIABLE_CONDITIONAL hoplite_depth greater_than 0}
	  [/and]
	  [or]
	  {VARIABLE_CONDITIONAL depth less_than $hoplite_depth}
	  [and]
	  {VARIABLE_CONDITIONAL hoplite_depth less_than 0}
	  [/and]
	  [/or]
	  [or]
	  {VARIABLE_CONDITIONAL depth less_than $hoplite_depth}
	  [and]
	  {VARIABLE_CONDITIONAL depth less_than 0}
	  [/and]
	  [/or]
	  [or]
	  {VARIABLE_CONDITIONAL depth greater_than 0}
	  [and]
	  {VARIABLE_CONDITIONAL hoplite_depth less_than 0}
	  [/and]
	  [/or]
	  [or]
	  {VARIABLE_CONDITIONAL depth less_than 0}
	  [and]
	  {VARIABLE_CONDITIONAL hoplite_depth greater_than 0}
	  [/and]
	  [/or]
  	  [then]
          [set_variable]
	    name=start_depth
	    value=$hoplite_depth
	  [/set_variable]
          [set_variable]
	    name=hoplite_depth
	    value=$depth
	  [/set_variable]
	  {IF_VAR depth less_than 0 (
  	  [then]
          [set_variable]
	    name=hoplite_depth
	    add=1
	  [/set_variable]
          {VARIABLE darkportal_active yes}
	  [/then]
	  [else]
          [set_variable]
	    name=hoplite_depth
	    sub=1
	  [/set_variable]
          {VARIABLE darkportal_active no}
	  [/else])}
          [fire_event]
	    id=hoplite_depthdescent
          [/fire_event]
	  {IF_VAR depth less_than 0 (
	  [and]
	  {VARIABLE_CONDITIONAL start_depth greater_than 0}
	  [/and]
	  [and]
	  {VARIABLE_CONDITIONAL bossfight not_equals yes}
	  [/and]
	  [then]
      {SPARTAN_SMOOTH_REPLACE_MUSIC ooze.ogg 1000 0}
#ifndef SPARTAN_MUSIC_FOUND
      {SPARTAN_SMOOTH_REPLACE_MUSIC the_deep_path.ogg 1000 0}
#endif
          [/then])}
	  {IF_VAR depth greater_than 0 (
	  [and]
	  {VARIABLE_CONDITIONAL start_depth less_than 0}
	  [/and]
	  [and]
	  {VARIABLE_CONDITIONAL bossfight not_equals yes}
	  [/and]
	  [then]
      {SPARTAN_SMOOTH_REPLACE_MUSIC kreepor.ogg 1000 0}
#ifndef SPARTAN_MUSIC_FOUND
      {SPARTAN_SMOOTH_REPLACE_MUSIC underground.ogg 1000 0}
#endif
          [/then])}
	  [/then]
	  [else]
          [message]
            speaker=narrator
            caption="Spartan Debug Menu"
            message=_"You can't revisit the depths you already passed!"
	    side_for=$side_number
          [/message]
	  [/else])}
          {CLEAR_VARIABLE depth}
	  {CLEAR_VARIABLE start_depth}
	               [/command]
	       [/option]
#               [option]                        
#			image="attacks/blank-attack.png"
#			description=_"Disable automatic movement to exit for this depth"
#			[command]
#			{UNIT 2 (Hoplite_Dummy_Unit) 1 1 (placement,passable=map,no)}
#			{UNIT 2 (Hoplite_Dummy_Unit) 11 1 (placement,passable=map,no)}
#	                [/command]
#	       [/option]
#               [option]
#                        image="terrain/forge-working.png"
#			description="Generate a forge near the center of the map for testing upgrades. (May be a bit buggy. Note: if the depth already had a forge, the old one will be removed.)"
#			[command]
#			[remove_item]
#			   image=terrain/forge.png
#			   x=0-99
#			   y=0-99
#			[/remove_item]
#			[remove_item]
#			   image=terrain/forge-working.png
#			   x=0-99
#			   y=0-99
#			[/remove_item]
#			{VARIABLE forge_delay 1}
#			{HOPLITE_GENERATE_FORGE 4-8 4-7}
#	                [/command]
#	       [/option]
               [option]
                        image="terrain/forge-working.png"
#			description="Open the forge menu (for testing upgrades)"
			description="Open the forge menu, and get an upgrade"
                        side_for=$side_number
			[command]
			{VARIABLE hoplite_debugmenu yes}
            [fire_event]
              id=forge_dialog
            [/fire_event]
			{CLEAR_VARIABLE hoplite_debugmenu}
	                [/command]
	       [/option]
               [option]
                        image="terrain/forge-working.png"
#			description="Open the forge menu (for testing upgrades)"
			description="Open the forge menu, and get multiple upgrades"
                        side_for=$side_number
			[command]
            [message]
                speaker=narrator
                caption=_"Spartan Debug Menu"
                message=_"How many upgrades do you want?"
    	        side_for=$side_number
                [text_input]
                    variable=hoplite_debugupgrades
                [/text_input]
            [/message]
            [if]
                [have_unit]
                    id=Hoplite2
                [/have_unit]
                [then]
                    {VARIABLE hoplite_upgradesleft1 $hoplite_debugupgrades}
                    {VARIABLE hoplite_upgradesleft2 $hoplite_debugupgrades}
                [/then]
                [else]
                    {VARIABLE hoplite_upgradesleft $hoplite_debugupgrades}
                [/else]
            [/if]

			{VARIABLE hoplite_debugmenu yes}
            [fire_event]
                id=forge_dialog
            [/fire_event]
			{CLEAR_VARIABLE hoplite_debugupgrades}
			{CLEAR_VARIABLE hoplite_debugmenu}
            {CLEAR_VARIABLE hoplite_upgradesleft}
            {CLEAR_VARIABLE hoplite_upgradesleft1}
            {CLEAR_VARIABLE hoplite_upgradesleft2}
	                [/command]
	       [/option]
               [option]                        
			image="terrain/forge-working.png"
			description="Make post-boss upgrades available"
			[command]
			 [sound]
			    name=magic-faeriefire.ogg
			 [/sound]
			 {VARIABLE spiderqueen_beaten yes}
			 {VARIABLE archmage_beaten yes}
			 {VARIABLE ares_beaten yes}
			 {VARIABLE donovan_beaten yes}
			 {VARIABLE duo_beaten yes}
			 {VARIABLE reaper_beaten yes}
			 {VARIABLE archmage2_beaten yes}
	                [/command]
	       [/option]
               [option]                        
			image="attacks/crush-wose.png"
			description="Force Specific Biome"
			[command]
                [message]
                    speaker=narrator
                    caption=_"Spartan Debug Menu"
                    message=_"Which biome do you want? (can force biomes to spawn earlier than they are supposed to)"
    	            side_for=$side_number
                    [option]                        
        			    description="None (spawn randomly as normal)"
            			image="attacks/blank-attack.png"
			            [command]
			            	{CLEAR_VARIABLE hoplite_forcebiome}
			            [/command]
			        [/option]
                    [option]                        
        			    description="Cave"
            			image="attacks/fireball.png"
			            [command]
			            	{VARIABLE hoplite_forcebiome cave}
			            [/command]
			        [/option]
                    [option]                        
        			    description="Dungeon"
            			image="attacks/wail.png"
			            [command]
			            	{VARIABLE hoplite_forcebiome dungeon}
			            [/command]
			        [/option]
                    [option]                        
        			    description="Aquatic"
            			image="attacks/waterspray.png"
			            [command]
			            	{VARIABLE hoplite_forcebiome aquatic}
			            [/command]
			        [/option]
                    [option]                        
        			    description="Jungle"
            			image="attacks/crush-wose.png"
			            [command]
			            	{VARIABLE hoplite_forcebiome jungle}
			            [/command]
			        [/option]
                    [option]
        			    description="Rare Biome: Dwarven"
            			image="attacks/hammer.png"
			            [command]
			            	{VARIABLE hoplite_forcebiome rarebiome_dwarven}
			            [/command]
			        [/option]
                    [option]
        			    description="Rare Biome: Mysterious Shop"
            			image="icons/coins_copper.png"
			            [command]
			            	{VARIABLE hoplite_forcebiome rarebiome_mysterious_shop}
			            [/command]
			        [/option]
			        
                [/message]
	        [/command]
	       [/option]
               [option]                        
			image="attacks/magic-missile.png"
			description="Force Random Events"
			[command]
                [message]
                    speaker=narrator
                    caption=_"Spartan Debug Menu"
                    message=_"Do you want to enable random events on most depths (Algadur/Runesmith for now)"
    	            side_for=$side_number
                    [option]                        
        			    description="No (random events have a normal chance)"
            			image="attacks/blank-attack.png"
			            [command]
			            	{CLEAR_VARIABLE debug_forcerandomevent}
			            [/command]
			        [/option]
                    [option]                        
        			    description="Yes"
            			image="attacks/magic-missile.png"
			            [command]
			            	{VARIABLE debug_forcerandomevent yes}
			            [/command]
			        [/option]
                [/message]
	        [/command]
	       [/option]
               [option]
                        image="scenery/signpost.png"
			description="Spawn a random text item. (removes any text items already on the map though)"
			[command]
			{VARIABLE hoplite_debugmenu yes}
                  	[fire_event]
                  	    id=random_textitem
                	[/fire_event]
			{CLEAR_VARIABLE hoplite_debugmenu}
			{MOVE_UNIT id=Hoplite,Hoplite2 $textitem.x $textitem.y}
			[fire_event]
			    name=moveto
			    [primary_unit]
			       side=$hoplite_playerside
			       x,y=$textitem.x,$textitem.y
			    [/primary_unit]
			[/fire_event]
	                [/command]
	       [/option]
               [option]
                        image="units/human-magi/elizabeth.png~RC(magenta>green)"
			description="Spawn Elizabeth"
			[command]
			{IF_VAR elizbethmet not_equals yes (
			[then]
			{VARIABLE elizabethmet yes}
			{SPARTAN_PLACE_ELIZABETH 6 9}
	                [/then])}
	                [/command]
	       [/option]
               [option]
                        image="units/dwarves/steelclad.png~RC(magenta>green)"
			description="Spawn Algadur"
			[command]
			{IF_VAR algadurmet not_equals yes (
			[then]
			{VARIABLE algadurmet yes}
			{VARIABLE algadurlinestart yes}
            {SPARTAN_PLACE_ALGADUR 6 9}
	                [/then])}
	                [/command]
	       [/option]
               [option]                        
			image="icons/boots_elven.png"
			description="Reset Energy to maximum"
			[command]
#ifdef MULTIPLAYER
    {HOPLITE_ADD_ENERGY_BY_SIDE 1 $hoplite_maxenergy1}
    {HOPLITE_ADD_ENERGY_BY_SIDE 2 $hoplite_maxenergy2}
#endif	
#ifndef MULTIPLAYER
    {HOPLITE_ADD_ENERGY_BY_SIDE 1 $hoplite_maxenergy}

#endif	
	                [/command]
	       [/option]
               [option]                        
			image="icons/boots_elven.png"
#ifndef MULTIPLAYER
			description="Change your maximum Energy"
#endif
#ifdef MULTIPLAYER
			description="Change your maximum Energy (only affects the current side)"
#endif
			[command]
          [message]
            speaker=narrator
            caption=_"Spartan Debug Menu"
            message=_"How much to set the maximum energy to?"
	    side_for=$side_number
            
            [text_input]
              variable=debug_maxenergy
            [/text_input]
          [/message]
	  {IF_VAR debug_maxenergy greater_than_equal_to 0 (
	  [then]
	  [if]
	  [have_unit]
	     id=Hoplite
	     side=$side_number
	  [/have_unit]
	  [and]
	  [have_unit]
	     id=Hoplite2
	  [/have_unit]
	  [/and]
	  [then]
 	  {VARIABLE hoplite_maxenergy1 $debug_maxenergy}
          {IF_VAR hoplite_energy1 greater_than $hoplite_maxenergy1 (
                                                [then]
                                                    {VARIABLE hoplite_energy1 $hoplite_maxenergy1}
                                                [/then]
                                            )}
 	  {SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
	  [/then]
	  [elseif]
	  [have_unit]
	     id=Hoplite2
	     side=$side_number
	  [/have_unit]
	  [then]
 	  {VARIABLE hoplite_maxenergy2 $debug_maxenergy}
          {IF_VAR hoplite_energy2 greater_than $hoplite_maxenergy2 (
                                                [then]
                                                    {VARIABLE hoplite_energy2 $hoplite_maxenergy2}
                                                [/then]
                                            )}
 	  {SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
	  [/then]
	  [/elseif]
	  [else]
 	  {VARIABLE hoplite_maxenergy $debug_maxenergy}
          {IF_VAR hoplite_energy greater_than $hoplite_maxenergy (
                                                [then]
                                                    {VARIABLE hoplite_energy $hoplite_maxenergy}
                                                [/then]
                                            )}
 	  {SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
	  [/else]
	  [/if]
	  [/then])}
	  {CLEAR_VARIABLE debug_maxenergy}
	                [/command]
	       [/option]
               [option]
                        image="items/armor-golden.png"
			description="Obtain the artifacts"
			[command]
         	        {VARIABLE hoplite_artifacts yes}
                    	{HOPLITE_ARTIFACTS}
	                [/command]
  	       [/option]
#               [option]
#			image="terrain/unwalkable/lava-A01.png"
#			description="Generate lava at random coordinates (only possible on maps with cave path)"
#			[command]
#			{HOPLITE_GENERATE_TERRAIN}
#	                [/command]
#	       [/option]
#outdated in terms of units:	       
#               [option]
#			image="units/orcs/grunt.png~RC(magenta>blue)"
#			description=_"Spawn cave units for testing (amount/type based on current depth)"
#			[command]
#        {VARIABLE hoplite_orcgrunts $hoplite_depth}
#        {VARIABLE_OP hoplite_orcgrunts add 1}
#        {HOPLITE_SCATTER_ENEMY $hoplite_orcgrunts Hoplite_Orcgrunt,Hoplite_Orcgrunt,Hoplite_Cutthroat,Hoplite_Orcgrunt,Hoplite_Cutthroat,Hoplite_Orcwarrior Ur}
#	{CLEAR_VARIABLE hoplite_orcgrunts}
#	{IF_VAR hoplite_depth greater_than 6 (
#	[then]
#        {HOPLITE_SCATTER_ENEMY 1 Hoplite_Dark_Wizard Ur,Urb}	
#	[/then])}
#	                [/command]
#	       [/option]

               [option]                        
			image="items/purple-orb.png"
			description="Add Orbs of Insight"
			[show_if]
			[variable]
			  name=hoplite_noachieve
			  not_equals=yes
			[/variable]
			[/show_if]
			[command]
          [message]
            speaker=narrator
            caption="Spartan Debug Menu"
            message="How many orbs?"
    	    side_for=$side_number    
            [text_input]
              variable=tmp_insightorbs
            [/text_input]
          [/message]
			 [sound]
			    name=magic-faeriefire.ogg
			 [/sound]
                {VARIABLE_OP spartan_orbs_of_insight$side_number add $tmp_insightorbs}
                {HOPLITE_SYNC_ORBS_OF_INSIGHT_TO_GLOBAL_VAR}
                {CLEAR_VARIABLE tmp_insightorbs}
		        [/command]
               [/option]

               [option]                        
			image="misc/laurel.png"
			description="Unlock all achievements"
			[show_if]
			[variable]
			  name=hoplite_noachieve
			  not_equals=yes
			[/variable]
			[/show_if]
			[command]
			 [sound]
			    name=fanfare-short.wav
			 [/sound]
	                 {HOPLITE_ACHIEVEMENTLIST SET_ACHIEVEMENT}
		        [/command]
               [/option]
               [option]                        
			image="misc/laurel-bronze.png"
			description="Clear all achievements/insight orbs/hints/orbshop data"
			[command]
			 [sound]
			    name=magic-dark-big.ogg
			 [/sound]
	                 {HOPLITE_ACHIEVEMENTLIST CLEAR_ACHIEVEMENT}
                                      [clear_global_variable]
                                          namespace=spartan
                                          global=orbs_of_insight
                                          side=$side_number
                                          immediate=yes
                                      [/clear_global_variable]
                                      [clear_global_variable]
                                          namespace=spartan
                                          global=achievementhints_array
                                          side=$side_number
                                          immediate=yes
                                      [/clear_global_variable]
                                      #merchant global variables are cleared too
                                      {CLEAR_VARIABLE spartan_orbshop_data$side_number}
                                      [clear_global_variable]
                                          namespace=spartan
                                          global=spartan_orbshop_data
                                          side=$side_number
                                          immediate=yes
                                      [/clear_global_variable]
                                      {HOPLITE_ACHIEVEMENTLIST RETREIVE_ACHIEVEMENT}
                              {HOPLITE_GET_ORBS_OF_INSIGHT}
                              {HOPLITE_RETREIVE_ACHIEVEMENT_HINTS}
     		        [/command]
               [/option]
               [option]                        
			image="scenery/summoning-center.png~GS()~CS(150,0,180)"
			description="Enter a dark portal"
			[show_if]
			  [variable]
			     name=hoplite_depth
			     greater_than_equal_to=0
			  [/variable]
			[/show_if]
			[command]
			 {HOPLITE_DARKPORTALMENU}
		        [/command]
               [/option]
               [option]                        
			image="scenery/summoning-center.png"
			description="Enter a portal back to normal depths"
			[show_if]
			  [variable]
			     name=hoplite_depth
			     less_than=0
			  [/variable]
			[/show_if]
			[command]
			 {HOPLITE_PORTALMENU}
		        [/command]
               [/option]
               [option]                        
			image="icons/letter_and_ale.png"
			description="Enable verbose event logging"
			[command]
                {VARIABLE hoplite_logging yes}
	        [/command]
	       [/option]
               [option]                        
			image="misc/blank-hex.png"
			description="End turn"
			[command]
			 [end_turn]
			 [/end_turn]
	                [/command]
	       [/option]
	       [/message]
	[/command]
    [/set_menu_item]
    [/event]
#enddef