#{~add-ons/Spartan/macros/ranged_macro.cfg}

#define TEXTITEM X Y IMAGE CAPTION MESSAGE
    [remove_item]
        image=hoplite_textitem
    [/remove_item]
    {CLEAR_VARIABLE textitem}
    {CLEAR_VARIABLE textitem_seen}
    [set_variables]
        name=textitem
        mode=append
        [value]
            x={X}
	    y={Y}
	    image={IMAGE}~SCALE(144,144)
	    caption={CAPTION}
	    message={MESSAGE}
        [/value]
    [/set_variables]
    [item]
        image={IMAGE}
        x,y={X},{Y}
        name=hoplite_textitem
    [/item]
#enddef

#define RANDOM_TEXTITEM IMAGE CAPTION MESSAGE
    [remove_item]
        image=hoplite_textitem
    [/remove_item]
    {CLEAR_VARIABLE textitem}
	{SCATTER_UNITS 1 "Hoplite_Dummy_Unit" 1 (
        terrain={SPARTAN_UNITSPAWN_TERRAIN}
	[not]
	  x,y=$forge_x,$forge_y
	  [or]
	  x,y=$darkcircle_x,$darkcircle_y
	  [/or]
	  [or]
	  x,y=6,2
	  radius=1
	  [/or]
	  [or]
	  x,y=6,10
	  radius=1
	  [/or]
      [or]
      [filter]
      [/filter]
      [/or]
      [or]
        terrain=*^F*#prevent spawning items on forests
      [/or]
	[/not]
    ) (
        side=$hoplite_enemyside
    )}
	[store_unit]
        [filter]
            type=Hoplite_Dummy_Unit
        [/filter]
        variable=textitemloc
    [/store_unit]
    [set_variables]
        name=textitem
        mode=append
        [value]
            x=$textitemloc.x
	    y=$textitemloc.y
	    image={IMAGE}~SCALE(144,144)
	    caption={CAPTION}
	    message={MESSAGE}
        [/value]
    [/set_variables]
    [item]
        image={IMAGE}
        x,y=$textitemloc.x,$textitemloc.y
        name=hoplite_textitem
    [/item]
	[kill]
	    id=$textitemloc.id
	    animate=no
	    fire_event=no
	[/kill]
#enddef

[event]
  id=random_textitem
  first_time_only=no
  [remove_item]
      image=hoplite_textitem
  [/remove_item]
  {CLEAR_VARIABLE textitem}
  {CLEAR_VARIABLE textitem_seen}
  {IF_VAR customfloor not_equals yes (
  [then]
  {IF_VAR hoplite_debugmenu equals yes (
  [then]
  {VARIABLE itemchance 1}
  [/then]
  [else]
  {VARIABLE_OP itemchance rand 1..3}
  [/else])}
  {IF_VAR hoplite_depth less_than 0 (
  [then]
	{VARIABLE_OP glyph_count add 1}
#	{IF_VAR reaper_beaten not_equals yes (
#	[and]
#	{VARIABLE_CONDITIONAL glyph_count equals 5}
#	[/and]
#	[then]
#	{VARIABLE glyph_count 99}#no glyph
#	[/then])}
	[switch]
	  variable=glyph_count
	  [case]
	    value=2
            {RANDOM_TEXTITEM "items/crystal-glyph-message.png~NO_TOD_SHIFT()" _"Message Glyph" _"If you are reading this, it could mean that I am not the only mortal stuck in this nightmare. I don't know who you are, what you are or where you are, but I'd like to ask that we cooperate in getting out of here. I scattered more such glyphs across the underworld, with information that may help you. They will be my way to keep in touch with you, even if a rather unreliable one.

<i>-El.</i>"}
	  [/case]
	  [case]
	    value=3
            {RANDOM_TEXTITEM "items/crystal-glyph-message.png~NO_TOD_SHIFT()" _"Message Glyph" _"You probably have already encountered the inhabitants of this world, haven't you? Tortured souls of the dead, knowing nothing more than to aimlessly wander this hell. Having spent an immesurable amount of time here, they are quite eager to take the souls of any mortals daring to step foot here, hoping that it might put an end to their suffering.

<i>-El.</i>"}
	  [/case]
	  [case]
	    value=4
            {RANDOM_TEXTITEM "items/crystal-glyph-message.png~NO_TOD_SHIFT()" _"Message Glyph" _"Having to deal with those accursed ghosts for what feels like forever already makes me feel like I am Sisiphus, to be honest. Not to mention having to worry about the angel of death sweeping in to harvest my soul... I swear, I'll go insane if I have to endure one more week of this madness! Anyway, you're getting very close, so keep going.

<i>-El.</i>"}
	  [/case]
	  [case]
	    value=5
            {SPARTAN_PLACE_ELIZABETH 6 5}
        [modify_unit]
        [filter]
           id=Elizabeth
        [/filter]
        name=_"???"
        [/modify_unit]
            [object]
		silent=yes
		duration=forever
		id=conceal
		[filter]
		  id=Elizabeth
		[/filter]
		[effect]
		  apply_to=image_mod
		  add="~BLEND(0,0,0,0.95)"
	        [/effect]
            [/object]
#ifdef MULTIPLAYER	    
            [object]
		silent=yes
		duration=forever
		[filter]
		  id=Elizabeth
		[/filter]
		[effect]
		  apply_to=attack
		  range=melee
		  increase_damage=2#to two-shot normal enemies in MP
	        [/effect]
		[effect]
		  apply_to=attack
		  range=ranged
		  increase_damage=4#to one-shot normal enemies in MP
	        [/effect]
            [/object]
#endif
	  [/case]
	[/switch]
  [/then])}
  {IF_VAR itemchance equals 1 (
  [then]
  [if]
  {VARIABLE_CONDITIONAL hoplite_biome equals cave}
  [or]
  {VARIABLE_CONDITIONAL hoplite_biome equals rarebiome_dwarven}
  [/or]
  [then]
    [if]
    {VARIABLE_CONDITIONAL hoplite_biome equals rarebiome_dwarven}
    [then]
    {VARIABLE itemtype 6}#if a lore item spawns on depths with dwarves (like saving algadur/runesmith), it is guaranteed to be a book of grudges
    [/then]
    [else]
    {VARIABLE_OP itemtype rand 1..6}
    [/else]
    [/if]
    [switch]
      variable=itemtype
#      [case]
#        value=1
#            {RANDOM_TEXTITEM "scenery/rock3.png" _"Rock" _"(crudely written) Krog was here."}
#      [/case]
#      [case]
#        value=2
#            {RANDOM_TEXTITEM "scenery/signpost.png" _"Sign" _"Do not dumb here! This be no dumb area! Me smart!"}
#      [/case]
#      [case]
#        value=3
#            {RANDOM_TEXTITEM "scenery/signpost.png" _"Sign" _"<i>(some kind of gibberish likely written by an orc)</i>"}
#      [/case]
      [case]
        value=1
            {RANDOM_TEXTITEM "scenery/rock-cairn2.png" _"Makeshift Tombstone" _"Here lies one of my men whose name I do not know. May he rest in peace, and may we avenge the orcs who slain him."}
      [/case]
      [case]
        value=2
        {RANDOM_TEXTITEM "items/parchment.png" _"Poem" _"The mark of Wesnoth’s banner bold
Comes not from its own land;
It comes from Dwarfdom, grim and old
Made by a runesmith’s hand.
So now I tell from whence it came —
The Fire-sceptre great —
And of the makers of the same,
Their tale I now relate...
'Stella of Scepetre of Fire'"}
      [/case]
      [case]
        value=3
        {IF_VAR hoplite_depth greater_than 20 (
        [then]
            {RANDOM_TEXTITEM "items/parchment.png" _"Note" _"I went here to find Homer and Caesar, but found orcs and goblins. Dante was a liar!"}
        [/then]
        [else]
            {RANDOM_TEXTITEM "items/parchment.png" _"Note" _"And the good Master said: 'Even now, my Son
The city draweth near whose name is Dis,
With the grave citizens, with the great throng.'"}
        [/else]
        )}
      [/case]
      [case]
        value=4
        {RANDOM_TEXTITEM "scenery/monolith1.png" _"Crude altar" _"This altar is built to honour the great Gork and Morc. Every Orc knows, that Gork is clever, but strong, unlike Mork, who is strong, but clever."}
      [/case]
      [case]
        value=5
        {RANDOM_TEXTITEM "items/parchment.png" _"Note" _"In caves no one can hear your scream."}
      [/case]
      [case]
        value=6
        {VARIABLE tmp_grudge_full_text ""}

        {RANDOM 3..7}

        {VARIABLE tmp_grudge_first_list yes}

        {REPEAT $random (

        {VARIABLE_OP tmp_grudge_race_rand rand 1,2,2,3,3,3,4,4,5,6}

        [switch]
            variable=tmp_grudge_race_rand
            [case]
                value=1
                {VARIABLE tmp_grudge_race _"human"}
                {VARIABLE_OP tmp_grudge_name rand _"Addraecyn,Addraenvan,Addraer,Addraercyn,Addraryn,Addreddry,Addredry,Addregwyn,Addrenyc,Addreoddry,Addreoddyn,Addreonyc,Addreorcyn,Addreran,Addribryn,Addriddyn,Addrocyn,Addroryn,Addrunvan,Addrurcyn,Addryllyn,Addrynvan,Aethacyn,Aethadry,Aethaec,Aethaeran,Aethaeryn,Aethagwyn,Aethanry,Aetharcyn,Aethec,Aethellyn,Aethenvan,Aetheoc,Aetheollyn,Aetheonyc,Aetheorcyn,Aethercyn,Aetherraent,Aethibryn,Aethiddry,Aethircyn,Aethobryn,Aethoddyn,Aethonnyn,Aethuc,Aethudry,Aethugwyn,Aethun,Aethunry,Aethydry,Aethynyc,Blac,Bladoc,Blaec,Blaedry,Blanry,Blebryn,Bledoc,Blemyr,Blennyn,Blenvan,Bleollyn,Blercyn,Blidd,Bliddry,Blillyn,Blinvan,Blollyn,Blubryn,Blucyn,Bludry,Blullyn,Bluran,Blybryn,Blydd,Blygwyn,Blymyr,Blyr,Bucyn,Cac,Cadry,Caebryn,Caedry,Caeran,Caercyn,Car,Carac,Caraddry,Caradoc,Caraedry,Caraennyn,Cararyn,Caredd,Careddry,Caregwyn,Caren,Careobryn,Careogwyn,Careonvan,Careorraent,Careoryn,Carercyn,Caric,Cariddry,Carocyn,Caroddyn,Caror,Caroran,Carraent,Carudoc,Carullyn,Carygwyn,Caryn,Cebryn,Cemyr,Cennyn,Ceoc,Ceoddry,Ceoddyn,Ceomyr,Ceonnyn,Ceonry,Ceoryn,Cicyn,Cin,Cinry,Coc,Convan,Corcyn,Cubryn,Cunry,Curyn,Cynyc,Cyryn,Dac,Dadd,Dadoc,Daeddry,Daedoc,Daellyn,Demyr,Denvan,Deodd,Deollyn,Deonyc,Derraent,Dibryn,Dinnyn,Dircyn,Dycyn,Dyddyn,Gaddry,Gaebryn,Gaedry,Gaercyn,Gagwyn,Gan,Gannyn,Gar,Gecyn,Geddyn,Gegwyn,Geodry,Ginvan,Glacyn,Gladoc,Glaercyn,Glarraent,Gleddry,Gleoddyn,Gleran,Gliddyn,Glillyn,Glinry,Glircyn,Gloddry,Gloddyn,Glonry,Glonvan,Glumyr,Glun,Glunry,Glunvan,Glyc,Glydd,Glydoc,Glynry,Glynvan,Glyran,Goc,Gor,Gubryn,Gudd,Gullyn,Gumyr,Gur,Gwadoc,Gwaec,Gwaeddyn,Gwan,Gweddyn,Gwegwyn,Gwellyn,Gwennyn,Gwenyc,Gweocyn,Gweodd,Gweodoc,Gweodry,Gweogwyn,Gweoran,Gwidoc,Gwilam,Gwodd,Gwoddyn,Gwollyn,Gwor,Gwucyn,Gwudoc,Gwumyr,Gwuran,Gwybryn,Gwycyn,Gwyddry,Gwydoc,Gwymyr,Gwynnyn,Gydoc,Gyllyn,Gymyr,Haldar,Labryn,Ladoc,Laellyn,Lan,Lannyn,Laran,Lec,Lemyr,Lenvan,Leogwyn,Lercyn,Ligwyn,Lin,Liryn,Lonnyn,Lorraent,Luddry,Ludoc,Lunnyn,Lunvan,Lurraent,Mac,Maddyn,Maennyn,Manry,Manyc,Marcyn,Mec,Menvan,Meollyn,Meon,Meonnyn,Meorraent,Middry,Midry,Mimyr,Modd,Moddry,Monry,Moran,Morcyn,Mubryn,Mudoc,Mugwyn,Murcyn,Mydoc,Mygwyn,Myn,Myrraent,Owac,Owadd,Owaddyn,Owaecyn,Owaedry,Owain,Owarcyn,Owaryn,Owecyn,Owedry,Oweomyr,Oweor,Oweorcyn,Oweran,Owercyn,Owidry,Owinvan,Owinyc,Owodd,Owoddry,Owogwyn,Owollyn,Oworan,Oworcyn,Oworraent,Owuddry,Owuddyn,Owugwyn,Owur,Owyran,Rabryn,Radd,Ranvan,Rar,Reoddyn,Reodry,Rhaecyn,Rhaedoc,Rhaemyr,Rhaerraent,Rhanry,Rharcyn,Rhenry,Rhenvan,Rhenyc,Rheodd,Rheoddyn,Rheollyn,Rheor,Rheoran,Rheorraent,Rheran,Rherraent,Rhobryn,Rhodry,Rhollyn,Rhonvan,Rhubryn,Rhugwyn,Rhunyc,Rhur,Rhygwyn,Rhyllyn,Rhynyc,Rhyrcyn,Rhyrraent,Rocyn,Roddyn,Romyr,Ron,Ronry,Rubryn,Ruddry,Rumyr,Run,Rurcyn,Rybryn,Rycyn,Ryddry,Rygwyn,Rynnyn,Rynry,Saec,Saellyn,Saemyr,Saenvan,Saercyn,Sanyc,Saran,Sarraent,Secyn,Seddyn,Sedry,Sellyn,Sennyn,Seoddry,Seorcyn,Sercyn,Siddry,Simyr,Siryn,Sodd,Sodry,Soran,Suc,Sudd,Surcyn,Sydd,Syran,Syryn,Tabryn,Taec,Taedd,Taedoc,Taemyr,Taenvan,Taercyn,Tanry,Tarcyn,Teddyn,Tegwyn,Ten,Tennyn,Tenvan,Teobryn,Teoddyn,Teor,Teorcyn,Terraent,Tinry,Tinvan,Tiryn,Todd,Tudd,Tuddry,Tudoc,Tunvan,Turraent,Tyddyn,Vaddyn,Vaeddyn,Vaedry,Vaennyn,Varcyn,Ven,Vennyn,Veocyn,Veoddyn,Veodry,Veogwyn,Veomyr,Vinvan,Vinyc,Virraent,Vobryn,Vogwyn,Vonry,Vuddyn,Vugwyn,Vyc,Vygwyn,Vyrcyn,Yracyn,Yraec,Yran,Yrannyn,Yranvan,Yraryn,Yredd,Yreddyn,Yregwyn,Yreryn,Yrinvan,Yrirraent,Yroddry,Yrullyn,Yrumyr,Yrunnyn,Yrunvan,Yryllyn,Yrymyr,Yrynyc,Yryrcyn"}
            [/case]
            [case]
                value=2
                {VARIABLE tmp_grudge_race _"elf"}
                {VARIABLE_OP tmp_grudge_name rand _"Amadrieriand,Amáril,Amelad,Ameldor,Amendel,Ameng,Amilmaldur,Amilmalith,Amilmandir,Amind,Amiol,Amiorion,Amithrarion,Amóldor,Amorfimir,Amorfir,Amowyn,Amulas,Amundil,Anán,Anebrin,Anebrir,Anémbor,Anénduil,Anerion,Anilad,Anil-Gawyn,Anilmambor,Anilmariand,Anior,Anithranduil,Anol,Anon,Anorfing,Anundil,Belán,Belandil,Belarandel,Belel,Belén,Belil-Gandil,Belilmand,Belilmang,Beliondil,Beliril,Belithraldor,Belithrawyn,Belólad,Belómir,Belondel,Belyrion,Cadriembor,Cadrieriand,Cálad,Caladrielas,Calándel,Caldur,Cáldur,Calebrindel,Calebrindir,Calénduil,Calil-Gandir,Calil-Gawyn,Calioriand,Caliril,Calónduil,Caloril,Cándir,Canduil,Caraldur,Carang,Célad,Celadrieriand,Celang,Celaral,Celarandil,Celáriand,Celebririon,Celelas,Celendel,Celér,Celilmalas,Celiondir,Celior,Celiorion,Celong,Celór,Celóril,Celorion,Celundir,Celuwyn,Celyndel,Cénduil,Cindil,Ciong,Cithralad,Cithraldur,Cithrand,Cithrandel,Cithraril,Col,Corfil,Corfildur,Cówyn,Cun,Cundir,Cylas,Delán,Delánd,Delandel,Delaraldur,Deláril,Delawyn,Deléng,Delilmaldor,Deliol,Delithrar,Deliwyn,Delóldor,Delorfilad,Delorfilith,Delorion,Delundil,Eäradriendel,Eäradrier,Eäránduil,Eäraralad,Eärebrindel,Eäréldor,Eäreng,Eärérion,Eärithrandil,Eäromir,Eärorfiriand,Eäryldur,Eäryriand,Eladrieng,Elálith,Elánd,Elándil,Elebrildor,Elebrindel,Elebriril,Elélas,Elémbor,Elemir,Elen,Elil-Garil,Elilmaldur,Eliomir,Eliondil,Elolas,Elólas,Elor,Elorfilad,Elradrien,Elralith,Elran,Elreldur,Elrilmand,Elrioldor,Elriolith,Elrithralith,Elrithranduil,Elrorfir,Elval,Elvandir,Elvaramir,Elváwyn,Elvebrind,Elvebrindel,Elvélith,Elvémir,Elverion,Elvil-Garion,Elvilmaldur,Elvilmaril,Elvioldur,Elvombor,Elvónduil,Elvorfimir,Elvorfiriand,Elvorfiril,Elvóriand,Elvund,Elyldor,Elyrion,Eowambor,Eowanduil,Eowar,Eowaraldor,Eowaran,Eowarar,Eowariand,Eowarion,Eowebrind,Eowémir,Eowil-Garion,Eowimbor,Eowiomir,Eowithrawyn,Eowóldur,Eoworfildor,Eowówyn,Eowylas,Fadriendel,Fandel,Farandir,Fáwyn,Fendel,Fer,Filman,Fioril,Fithraril,Forfilas,Fyrion,Gadriendil,Gadrieng,Galadrieldor,Galálad,Galálas,Galalith,Galar,Galelas,Galeldur,Galelith,Galémbor,Galithrariand,Galoldur,Galuldur,Galur,Galurion,Gambor,Gán,Ganduil,Garaldor,Gararil,Gelad,Géril,Gil-Gandel,Gil-Gang,Giombor,Githral,Githralad,Gladriendil,Glal,Glámbor,Glandil,Glarang,Glararil,Glilmal,Glimir,Glior,Glólas,Gloldor,Glómir,Glon,Glul,Golad,Gor,Gumbor,Gyl,Gymbor,Gyn,Harariand,Háriand,Hebril,Hemir,Hénduil,Hilas,Hil-Garion,Hilmariand,Hiong,Hirion,Hithrandel,Horfilad,Horfindel,Hundel,Hymir,Hyrion,Hywyn,Isadrieng,Isándir,Isarandel,Isarar,Iselas,Isér,Isilmandel,Isirion,Isithral,Isól,Isóndel,Isóng,Isorfilad,Isorfindir,Isuwyn,Isyndel,Legal,Legaran,Legémir,Legéril,Legilad,Legil-Gal,Legiondel,Legithralith,Legorfindil,Legorfirion,Legówyn,Legyl,Legyn,Linduilas,Lómadrieril,Lómarand,Lómariand,Lómebrilad,Lómebrind,Lómémbor,Lómilmaril,Lómiriand,Lómorfindil,Lómowyn,Madrieril,Maldur,Mánduil,Maraldur,Mebrin,Méng,Mérion,Miolith,Miomir,Mithrand,Mondir,Móndir,Morfilas,Morfin,Morfiriand,Mylith,Nadrieldor,Nalith,Nán,Nél,Nil-Galas,Nil-Galith,Nil-Gar,Nilmar,Nóndel,Norfildor,Norfilith,Norfindil,Norfindir,Numbor,Nyldur,Padrieriand,Padrieril,Pamir,Paraldor,Parariand,Pilmalad,Pindir,Pór,Porfildur,Pumbor,Pyldur,Rebrir,Réndir,Rilmandil,Rithrandil,Ról,Róldor,Roldur,Róldur,Rorfilad,Rorfindil,Rówyn,Ryn,Sadrielas,Sebrin,Sebriril,Sénd,Sil-Gal,Sólad,Sorfind,Sóriand,Tadriendir,Taral,Taraldur,Táriand,Tendel,Téwyn,Thradrieriand,Thrambor,Thraral,Threbring,Thrélad,Thréldur,Thril-Gamir,Thril-Gandir,Thril-Gar,Thrilmandel,Thrimir,Thrion,Thrithran,Throlas,Thrón,Thróng,Thrund,Thryriand,Til-Gan,Tilmalad,Tilmalas,Tinandir,Tinarambor,Tinarariand,Tinén,Tinil-Ganduil,Tinilmand,Tinilmawyn,Tinimir,Tinindil,Tinithrar,Tinoldor,Tinond,Tinorfind,Tinorfiriand,Tinóriand,Tinowyn,Tinun,Tinyl,Tion,Tolas,Torfildur,Tówyn,Tylad,Unadrieldor,Unadrier,Unál,Unalas,Unálas,Unaraldur,Unaril,Unárion,Unebrin,Unebrind,Uneldor,Unil,Unil-Gan,Uniolith,Unioril,Unólith,Unombor,Unóndel,Unondir,Unorfildor,Unorfiril,Unorfiwyn,Unulad,Uradrielas,Uradrierion,Urálas,Urálith,Urambor,Urér,Uril-Gambor,Urilmalith,Uróldor,Urorfildor,Urul,Urymir,Válad,Ván,Vándel,Vandir,Varalas,Vararion,Vebril,Vebrilas,Vebrinduil,Vel,Vilith,Vol,Vólas,Vóldur,Vondel,Vorfin,Vorfindil,Vulas,Vuldur,Vunduil,Vylas,Vyldor"}
            [/case]
            [case]
                value=3
                {VARIABLE tmp_grudge_race _"dunefolk"}
                {VARIABLE_OP tmp_grudge_name rand _"Aban,Abbas,Abbud,Abdul-ʿAdl,Abdul-Ahad,Abdul-Alim,Abdul-Aliyy,Abdul-Azim,Abdul-Aziz,Abdul-Badi,Abdul-Baʿith,Abdul-Baqi,Abdul-Bari,Abdul-Barr,Abdul-Basir,Abdul-Basit,Abdul-Fattah,Abdul-Ghaffar,Abdul-Ghafur,Abdul-Ghani,Abdul-Hadi,Abdul-Hafiz,Abdul-Hakam,Abdul-Hakim,Abdul-Halim,Abdul-Hamid,Abdul-Haqq,Abdul-Hasib,Abdul-Hayy,Abdul-Jabbar,Abdul-Jalil,Abdul-Karim,Abdul-Khabir,Abdul-Khaliq,Abdul-Latif,Abdul-Malik,Abdul-Majid,Abdul-Matin,Abdul-Mubdiʾ,Abdul-Mughni,Abdul-Muhaimin,Abdul-Muhsi,Abdul-Muhyi,Abdul-Muʿid,Abdul-Muʿizz,Abdul-Mujib,Abdul-Mumin,Abdul-Muqaddim,Abdul-Muqtadir,Abdul-Musawwir,Abdul-Mutaʿal,Abdul-Nafi,Abdul-Nasser,Abdul-Nasir,Abdul-Nur,Abdul-Qadir,Abdul-Qahhar,Abdul-Qawi,Abdul-Qayyum,Abdul-Quddus,Abdul-Rafi,Abdul-Rahim,Abdul-Rahman,Abdul-Rashid,Abdul-Raʿuf,Abdul-Razzaq,Abdul-Shakur,Abdul-Tawwab,Abdul-Wadud,Abdul-Wahhab,Abdul-Wahid,Abdul-Wajid,Abdul-Wakil,Abdul-Wali,Abdul-Waliy,Abdul-Warith,Abdul-Zahir,Abdullah,ʿAbid,ʿAbidin,Abu Bakr,Aby al-Khayr,Adil,Adham,Adib,ʿAdli,ʿAdnan,ʿAfif,Ahmad,ʿAjib,ʿAkif,Akil,Akram,Alaʾ,Alaʾ al-Din,Alʿ Abbas,Aladdin,al-Bara,al-Hakam,al-Harith,Alhasan,Alhusain,Ali,Alim,Almahdi,al-Safi,Altaf,Altair,al-Tayyib,al-Tijani,al-Tufail,Amid,ʿAmid,Amin,Amir,ʿAmir,Amjad,ʿAmmar,ʿAmro,Anas,Anis,ʿAntarah,Anwar,ʿAqil,Arfan,Arif,ʿArif,Asad,Asʿad,Asadel,Ashraf,Asif,ʿAsim,Aswad,Ataʿ,Ataʿ Allah,Ataʿ al-Rahman,Athil,Athir,ʿAtif,ʿAwad,ʿAwf,Aws,Awwab,Ayham,Ayman,Ayser,Ayyub,Aza,ʿAzab,Azhar,Azim,ʿAziz,ʿAzzam,Badi,Badi al-Zaman,Badr,Badr al-Din,Badri,Bahaʿ,Bahiyy al-Din,Bahij,Bahir,Bakr,Bakri,Baligh,Bandar,Barakah,Barir,Bashshar,Basil,Basim,Bassam,Bayezid,Bayhas,Bilal,Bishr,Boulos,Budail,Burhan,Bushr,Butrus,Dabir,Dani,Darwish,Daʿud,Dhakir,Dhakiy,Dhakwan,Dhul Fiqar,Dirar,Diya,Diya al-Din,Duqaq,Fadi,Fadil,Fadl,Fadl Allah,Fahd,Fahad,Fahmi,Faisal,Faʿiz,Fakhir,Fakhr al-Din,Fakhri,Fakih,Falah,Falih,Faraj,Farhan,Farid,Fariq,Fariq,Faris,Faruq,Fath,Fathi,Fatih,Fatin,Fawwaz,Fawzan,Fawzi,Fayyad,Ferran,Fida,Fikri,Firas,Fuʿad,Fudail,Gamal,Ghayth,Ghali,Ghalib,Ghanim,Ghassan,Ghawth,Ghazwan,Ghiyath,Habbab,Habib,Haddad,Hadi,Hafiz,Hakem,Hakim,Halim,Hamal,Hamas,Hamdan,Hamdi,Hamid,Hamim,Hamzah,Hana,Hanaʾi,Hanbal,Hani,Hanif,Hannad,Haris,Harith,Harun,Hashim,Hassan,Hatim,Haydar,Haytham,Hayyan,Hazim,Hilal,Hilmi,Hisham,Hud,Hudad,Hudhafah,Hudhayfah,Humam,Hussein,Husam,Husam al-Din,Ibrahim,ʿId,Idris,Ihsan,Ihtisham,ʿIkrimah,Ilias,ʿImad,Imad al-Din,Imran,Imtiyaz,Inʿam,Iqbal,ʿIrfan,ʿIsa,ʿIsam,Ishaq,Ismaʿil,Iyad,Iyas,Izz al-Din,Jabbar,Jabr,Jabir,Jad Allah,Jaʿfar,Jal,Jalal,Jalal al-Din,Jalil,Jamal,Jamal al-Din,Jamil,Jarir,Jasim,Jaul,Jaun,Jawad,Jawdah,Jawhar,Jibran,Jibril,Jubair,Jul,Jumah,Junayd,Juwain,Kadar,Kadin,Kadir,Kahil,Kaliq,Kamal,Kamil,Karam,Kardal,Karif,Karim,Kasib,Kasim,Katib,Kazim,Khalaf,Khaldun,Khalid,Khalil,Khalil al-Allah,Khalis,Khatib,Khair al-Din,Khairi,Khoury,Khulus,Khuzaymah,Kutaiba,Labib,Lablab,Latif,Layth,LuʿayLubayd,Luqman,Lut,Lutfi,Maʿd,Madani,Mahbub,Mahdi,Mahfuz,Mahir,Mahjub,Mahmud,Mahrus,Maimun,Majd,Majdy,Majd al-Din,Majid,Makin,Malik,Mamduh,Maʿmun,Maʿin,Mandhur,Mansur,Marghub,Marid,Maʿruf,Marwan,Marzuq,Mashʿal,Mashhur,Masrur,Masʿud,Masun,Maysarah,Mazhar,Mazin,Mehmed,Mihran,Mihyar,Mikaʾil,Miqdad,Misbah,Mishʿal,Miyaz,Muʾadh,Muʾawiyah,Muʾayyad,Mubarak,Mubin,Mudar,Muddaththir,Mufid,Muflih,Muhab,Muhayr,Muhammad,Muhanna,Muhannad,Muhib,Muhibb,Muhsin,Muhtadi,Muhyi al-Din,Muʿin,Muʿizz,Mujab,Mujahid,Mukarram,Mukhlis,Mukhtar,Mulham,Mulhim,Muʿmmar,Muʿmin,Mumtaz,Munahid,Mundhir,Munib,Munif,Munir,Muʿnis,Munjid,Munsif,Muntasir,Murad,Murid,Murshid,Murtada,Musa,Musʿab,Musaʿid,Mushtaq,Muslih,Muslim,Mutafa,Mutaʾ,Muʿtasim,Mutawalli,Muʿtazz,Muthanna,Muti,Muwaffaq,Muyassar,Muzaffar,Mussammil,Nabhan,Nabighah,Nabih,Nabil,Nadhir,Nadim,Nadir,Nafiʾ,Nahid,Naʾil,Naʾim,Naji,Najib,Najid,Najjar,Najm al-Din,Naʿaman,Namir,Nashʿah,Nashʿat,Nashwan,Nasib,Nasih,Nasim,Nasir,Nasir al-Din,Nasr,Nasri,Nasuh,Nawaf,Nawfal,Nayif,Nazih,Nazim,Nazmi,Nibras,Nidal,Nijad,Nimr,Nizar,Nuʿaym,Nuh,Nuhayd,Numair,Nuʿman,Nur al-Din,Nuri,Nusrah,Nusrat,Omar,Orhan,Osman,Qasim,Qays,Qudamah,Qusay,Qatadah,Qutaybah,Qutb,Qutuz,Rabah,Rabi,Radi,Rafi,Rafid,Rafiq,Raghib,Rahman,Raʿid,Raʿif,Rais,Rajaa,Rajab,Raji,Rajih,Rakin,Rami,Ramih,Ramiz,Ramzi,Rani,Rashad,Rashid,Rasil,Rasin,Rasmi,Rasul,Ratib,Raʿuf,Rayhan,Rayyan,Razin,Ridha,Ridwan,Rihab,Riyad,Rizq,Ruhi,Rushd,Rushdi,Ruwayd,Saad,Saʿadah,Sab,Sabih,Sabir,Sabri,Saʿd,Saʿd al-Din,Sadad,Sadid,Sadiq,Saʿdun,Saʿid,Safi,Safiy,Safiy al-Din,Safuh,Safwah,Safwat,Safwan,Sahib,Sahir,Sahl,Saʾib,Saif,Saif al-Din,Sajid,Sajjad,Sakhr,Salah,Salah al-Din,Salamah,Salih,Salim,Salman,Sami,Samih,Samir,Samman,Saqr,Sariyah,Sati,Saud,Sayyid,Shaʿban,Shadi,Shadin,Shafi,Shafiq,Shahid,Shahin,Shahir,Shakib,Shakir,Shams al-Din,Shamal,Shamil,Shamim,Sharaf,Sharif,Shawqi,Shihab,Shihab al-Din,Shihad,Shuʿayb,Shukri,Shumayl,Siddiq,Sinan,Siraj,Siraj al-Din,Sofian,Subhi,Sufyan,Suhayb,Suhayl,Suhaym,Sulaiman,Sumrah,Suraqah,Suʿud,Tahir,Tahsin,Taym Allah,Taj,Taj al-Din,Talal,Talib,Tamim,Tamir,Tamam,Tammam,Taqiy,Tarif,Tariq,Taslim,Tawfiq,Tawhid,Taymullah,Taysir,Tayyib,Thabit,Thamir,Thaqib,Thawab,Thawban,ʿUbaidah,Ubaid,Ubayy,ʿUdayl,ʿUday,ʿUmar,Umarah,Umair,ʾaUrwah,Usaym,Usama,ʿUtbah,Uthal,Uthman,Waddah,Wadi,Wadid,Wafiq,Wahab,Wahhab,Wahid,Waʾil,Wajdi,Wajid,Wajih,Wakil,Walid,Walif,Waliy Allah,Waliy al-Din,Waqar,Waqqas,Ward,Wasif,Wasil,Wasim,Wazir,Yahya,Yaman,Yaʿqub,Yasar,Yasin,Yasir,Yazan,Yazid,Yunus,Yushua,Yusri,Yusuf,Zafar,Zafir,Zahid,Zahir,Zayd,Zaim,Zayn,Zarif,Zakarriya,Zaki,Zakwan,Ziyad,Zubayr,Zuhayr"}
            [/case]
            [case]
                value=4
                {VARIABLE tmp_grudge_race _"orc"}
                {VARIABLE_OP tmp_grudge_name rand _"Badush,Bagar,Bagdish,Barag,Barbag,Bart,Bashnak,Bidish,Bidush,Bik,Bilg,Bilo,Binak,Bink,Biol,Birt,Bogar,Bogdish,Bogdush,Bogor,Bok,Bolg,Bong,Borg,Bork,Bort,Boshnak,Budush,Bugdish,Buk,Bunak,Bung,Bunk,Burag,Burg,Burk,Buurk,Eradash,Eradish,Eragdish,Eragdush,Eragor,Eranak,Erang,Erarag,Erarg,Erart,Erigdush,Erik,Erinak,Eriol,Erirag,Erirbag,Erirg,Erirt,Erishnak,Eriurk,Erogdish,Erogdush,Erok,Erong,Eronk,Erorbag,Erudish,Erudush,Erugar,Erugdush,Erulo,Erunk,Eruol,Erurag,Eruurk,Gadash,Gagar,Gagdush,Gagor,Galo,Ganak,Gank,Gaol,Garag,Gashnak,Gigor,Ginak,Ging,Gink,Girt,Gogdish,Gogdush,Gong,Gork,Gort,Goshnak,Gradash,Gragar,Gragor,Grak,Gralg,Gralo,Granak,Graol,Grarbag,Gridash,Gridish,Gridush,Grigar,Grigor,Grilg,Grilo,Grink,Grirag,Grirg,Grirk,Grishnak,Grodish,Grogar,Grogdish,Grok,Grolg,Grong,Gronk,Grorag,Grorg,Grork,Grort,Groshnak,Grudash,Grugar,Grugdish,Grugdush,Gruk,Grulo,Grunk,Gruol,Grurg,Grurk,Grurt,Gruurk,Gugdish,Gugdush,Gulg,Gulo,Gunak,Gurbag,Gurt,Gushnak,Hadash,Hadish,Hadush,Hagar,Hagdush,Hagor,Hak,Halg,Hank,Hashnak,Hidash,Hidish,Hidush,Higdush,Hilg,Hinak,Hing,Hink,Hiol,Hirag,Hirg,Hodush,Hogar,Hogor,Hong,Hool,Horbag,Hork,Hort,Hoshnak,Hudash,Hudish,Hugor,Huk,Hulg,Hulo,Hunk,Huol,Hurag,Hurbag,Hurk,Hushnak,Huurk,Pagdish,Pagor,Palg,Palo,Paol,Parag,Pashnak,Pidush,Pigdish,Pigdush,Pilg,Pinak,Pink,Pirbag,Podash,Podish,Podush,Pogdish,Polg,Porbag,Porg,Pork,Port,Poshnak,Pradish,Pragdush,Pragor,Pralg,Pralo,Prang,Praol,Prarag,Prarbag,Prarg,Prark,Prart,Prashnak,Praurk,Pridish,Prigar,Prigdish,Prigor,Prilg,Prilo,Prinak,Priol,Prirbag,Prirg,Prirt,Priurk,Prodash,Prodish,Prodush,Prolg,Prolo,Pronak,Prong,Pronk,Prool,Prourk,Prudish,Prugar,Prugdish,Pruk,Prunak,Prunk,Prurg,Prurk,Pruurk,Puk,Pulg,Pulo,Punak,Pung,Punk,Purag,Purbag,Purg,Puurk,Radash,Ragar,Ragdish,Rak,Rang,Rank,Raol,Rarag,Rarbag,Rark,Rashnak,Raurk,Rigor,Rik,Rilg,Rinak,Rink,Rirg,Rirk,Rodish,Rodush,Rogdish,Rok,Rolo,Ronak,Rudash,Rugar,Rugdish,Ruk,Rung,Ruol,Rurag,Rushnak,Vadash,Vadish,Vadush,Vak,Valo,Vank,Varag,Varbag,Vigar,Vigdish,Vigor,Vilg,Vilo,Vink,Virag,Virt,Vishnak,Vogdish,Vogor,Vonak,Vong,Vorg,Vork,Voshnak,Vourk,Vradash,Vragar,Vragdush,Vragor,Vralo,Vrang,Vrarbag,Vrarg,Vrart,Vraurk,Vridash,Vridish,Vrigor,Vrik,Vrinak,Vring,Vrirt,Vrishnak,Vriurk,Vrodash,Vrodish,Vrogar,Vrogor,Vrolo,Vrong,Vrorg,Vrork,Vrudish,Vrugdush,Vrulg,Vrung,Vruol,Vrurg,Vrurt,Vruurk,Vudish,Vuk,Vulg,Vulo,Vunak,Vurag,Vurbag,Vurg,Vushnak"}
            [/case]
            [case]
                value=5
                {VARIABLE tmp_grudge_race _"saurian"}
                {VARIABLE_OP tmp_grudge_name rand _"Amprixta,Anexir,Anitraz,Arix,Axiz,Bzz’Kza,Chamil,Cleezi,Clezz,Fazzis,Fizztrax,Flixta,Flizzil,Frikes,Frizzle,Hasz,Heffez,Hertrazzir,Hesz,Hezzir,Hezzis,Hix,Inexis,Irix,Jezzix,Jizz,Kaliez,Kepzs,Kernix,Kersezz,Kertrasz,Kerx,Kerxenix,Kezz,Klexaz,Klezyx,Krarax,Krenarex,Krex,Krinex,Krisess,Laizix,Lazki,Lixeez,Merax,Mexiss,Moxanzz,Naxisz,Nix,Pekzs,Plaxis,Plesix,Presch,Sailik,Salanix,Salik,Sandix,Saprazz,Satras,Skalix,Skandix,Skazix,Skeely,Skeezix,Sklizle,Skrez,Slizilx,Sprizz,Ssexur,Ssizer,Ssorix,Sszasz,Sterizz,Talerez,Tarex,Tarnix,Tezzaz,Tirasch,Tirax,Tirix,Trezz,Venezz,Vriss,Waks,Xaffrasz,Xartrez,Xasz,Xaztex,Xerxix,Xirasz,Xirr,Xirtras,Xirtrez,Xirz,Zandler,Zedrix,Zilrix,Zizzasz,Zslap,Zzalkz,Zzupde"}
            [/case]
            [case]
                value=6
                {VARIABLE tmp_grudge_race _"naga"}
                {VARIABLE_OP tmp_grudge_name rand _"Abraxas,Aleiss,Amail,Axmail,Blanal,Bleii,Blo,Bress,Briss,Gaxmol,Griam,Griss,Grissileii,Hailoss,Hainoss,Harxos,Huzel,Inaloss,Ineii,Issal,Klezel,Kras,Krezkps,Kzap,Lamaiss,Lameii,Lexpek,Liness,Lobor,Maissol,Malinos,Milbor,Mileii,Nildloss,Oxpeii,Poniaz,Psell,Pson,Pzakp,Reii,Sassal,Saxil,Saxrireii,Sekol,Silas,Skell,Skepz,Slell,Snol,Soill,Sorkol,Srell,Trixoz,Vilail,Vissal,Vlanis,Xabrak,Xamalel,Xinas,Xnamos,Xopkon,Zalsp,Zlek,Zpsek,Zsekp"}
            [/case]
        [/switch]

        #NOTE: comma in the strings cause cuts off text!!!
        {VARIABLE_OP tmp_grudge_reason rand _"added to Great Book of Grudges for forgotten reason,added to the Great Book of Grudges for mining in dwarvish territory,added to the Great Book of Grudges for betraying the great Dwarfish alliance,added to the Great Book of Grudges for ransacking the dwarfish hold Erkund,added to the Great Book of Grudges for brawling in all dwarfish taverns he visited,added to the Great Book of Grudges for shooting three dwarves in a back during the great war,added to the Great Book of Grudges for stealing and drinking all ale and wine stored in the great King's wine storage,added to the Great Book of Grudges for kidnapping a dwarf woman during her wedding,added to the Great Book of Grudges for hunting gryphons,added to the Great Book of Grudges for bringing spoiled food to a dwarfish feast,added to the Great Book of Grudges for treachery cowardliness and laziness,added to the Great Book of Grudges for bringing fake gems to the dwarvish treasury,added to the Great Book of Grudges for raiding dwarvish caravans,added to the Great Book of Grudges for bringing enemies to our caves,added to the Great Book of Grudges for destroing dwarvish mines and blocking them from dwarves,added to the Great Book of Grudges for eating children and dwarves,added to the Great Book of Grudges for laughing too hard,added to the Great Book of Grudges for the worst music ever played in dwarvish holds,added to the Great Book of Grudges for painting strange pictures, describing dwarfs in vulgar situations,added to the Great Book of Grudges for describing dwarves as grudgeful creatures,added to the Great Book of Grudges for leaving dwarvish alliance,added to the Great Book of Grudges for killing a dragon in dwarfish territory and stealing all his gold before dwarfish thunderguards had arrived,added to the Great Book of Grudges for disliking the dwarfish king,added to the Great Book of Grudges for the sake of filling the Great Book of Grudges,added to the Great Book of Grudges for paying me 1 copper coin less than I asked,added to the Great Book of Grudges for wasting my time,added to the Great Book of Grudges for cutting trees while there was ceasefire with elves,added to the Great Book of Grudges for cutting trees while there was a ceasefire with elves,added to the Great Book of Grudges for pretending to be a dwarf,added to the Great Book of Grudges for pretending to be a gnome,added to the Great Book of Grudges for pretending to be a king,added to the Great Book of Grudges for illegally brewing mushroom ale,added to the Great Book of Grudges for bringing Necronomicon to the public library,added to the Great Book of Grudges for eating wrong mushrooms,added to the Great Book of Grudges for singing elvish songs in dwarfish taverns,added to the Great Book of Grudges for beating dwarf to death using a pile of bread,added to the Great Book of Grudges for slavery,added to the Great Book of Grudges for tremendously loud voice, making the caves collapse,added to the Great Book of Grudges for praising Odin, Hades, Hel instead of the ancestors,added to the Great Book of Grudges for dark research,added to the Great Book of Grudges for dreaming about founding his own kingdom on the ruins of dwarfish keep,added to the Great Book of Grudges for summoning demons,added to the Great Book of Grudges for trying to sell me overpriced trash,added to the Great Book of Grudges for cheating at cards")}

        {IF_VAR tmp_grudge_first_list equals yes (
        [then]
            {VARIABLE tmp_grudge_first_list no}
        {VARIABLE tmp_grudge_full_text $tmp_grudge_full_text|_"$tmp_grudge_name|, $tmp_grudge_race|, $tmp_grudge_reason|"}
        [/then]
        [else]
        {VARIABLE tmp_grudge_full_text $tmp_grudge_full_text|_"
$tmp_grudge_name|, $tmp_grudge_race|, $tmp_grudge_reason|"}
        [/else]
        )}


        )}


        {RANDOM_TEXTITEM "items/book2.png" _"Book of Grudges" $tmp_grudge_full_text}
      [/case]
    [/switch]
  [/then]
  [elseif]
  {VARIABLE_CONDITIONAL hoplite_biome equals dungeon}
  [then]
	{VARIABLE_OP itemtype rand 1..2}
    [switch]
      variable=itemtype
      [case]
        value=1
        #tombs of male humans:
        {VARIABLE_OP tmp_tomb_image rand ("items/stone-tablet.png","scenery/monolith2.png","items/coffin-closed.png","scenery/monolith3.png","scenery/rock-cairn.png")}
        {VARIABLE_OP tmp_tomb_name rand _"Addraecyn,Addraenvan,Addraer,Addraercyn,Addraryn,Addreddry,Addredry,Addregwyn,Addrenyc,Addreoddry,Addreoddyn,Addreonyc,Addreorcyn,Addreran,Addribryn,Addriddyn,Addrocyn,Addroryn,Addrunvan,Addrurcyn,Addryllyn,Addrynvan,Aethacyn,Aethadry,Aethaec,Aethaeran,Aethaeryn,Aethagwyn,Aethanry,Aetharcyn,Aethec,Aethellyn,Aethenvan,Aetheoc,Aetheollyn,Aetheonyc,Aetheorcyn,Aethercyn,Aetherraent,Aethibryn,Aethiddry,Aethircyn,Aethobryn,Aethoddyn,Aethonnyn,Aethuc,Aethudry,Aethugwyn,Aethun,Aethunry,Aethydry,Aethynyc,Blac,Bladoc,Blaec,Blaedry,Blanry,Blebryn,Bledoc,Blemyr,Blennyn,Blenvan,Bleollyn,Blercyn,Blidd,Bliddry,Blillyn,Blinvan,Blollyn,Blubryn,Blucyn,Bludry,Blullyn,Bluran,Blybryn,Blydd,Blygwyn,Blymyr,Blyr,Bucyn,Cac,Cadry,Caebryn,Caedry,Caeran,Caercyn,Car,Carac,Caraddry,Caradoc,Caraedry,Caraennyn,Cararyn,Caredd,Careddry,Caregwyn,Caren,Careobryn,Careogwyn,Careonvan,Careorraent,Careoryn,Carercyn,Caric,Cariddry,Carocyn,Caroddyn,Caror,Caroran,Carraent,Carudoc,Carullyn,Carygwyn,Caryn,Cebryn,Cemyr,Cennyn,Ceoc,Ceoddry,Ceoddyn,Ceomyr,Ceonnyn,Ceonry,Ceoryn,Cicyn,Cin,Cinry,Coc,Convan,Corcyn,Cubryn,Cunry,Curyn,Cynyc,Cyryn,Dac,Dadd,Dadoc,Daeddry,Daedoc,Daellyn,Demyr,Denvan,Deodd,Deollyn,Deonyc,Derraent,Dibryn,Dinnyn,Dircyn,Dycyn,Dyddyn,Gaddry,Gaebryn,Gaedry,Gaercyn,Gagwyn,Gan,Gannyn,Gar,Gecyn,Geddyn,Gegwyn,Geodry,Ginvan,Glacyn,Gladoc,Glaercyn,Glarraent,Gleddry,Gleoddyn,Gleran,Gliddyn,Glillyn,Glinry,Glircyn,Gloddry,Gloddyn,Glonry,Glonvan,Glumyr,Glun,Glunry,Glunvan,Glyc,Glydd,Glydoc,Glynry,Glynvan,Glyran,Goc,Gor,Gubryn,Gudd,Gullyn,Gumyr,Gur,Gwadoc,Gwaec,Gwaeddyn,Gwan,Gweddyn,Gwegwyn,Gwellyn,Gwennyn,Gwenyc,Gweocyn,Gweodd,Gweodoc,Gweodry,Gweogwyn,Gweoran,Gwidoc,Gwilam,Gwodd,Gwoddyn,Gwollyn,Gwor,Gwucyn,Gwudoc,Gwumyr,Gwuran,Gwybryn,Gwycyn,Gwyddry,Gwydoc,Gwymyr,Gwynnyn,Gydoc,Gyllyn,Gymyr,Haldar,Labryn,Ladoc,Laellyn,Lan,Lannyn,Laran,Lec,Lemyr,Lenvan,Leogwyn,Lercyn,Ligwyn,Lin,Liryn,Lonnyn,Lorraent,Luddry,Ludoc,Lunnyn,Lunvan,Lurraent,Mac,Maddyn,Maennyn,Manry,Manyc,Marcyn,Mec,Menvan,Meollyn,Meon,Meonnyn,Meorraent,Middry,Midry,Mimyr,Modd,Moddry,Monry,Moran,Morcyn,Mubryn,Mudoc,Mugwyn,Murcyn,Mydoc,Mygwyn,Myn,Myrraent,Owac,Owadd,Owaddyn,Owaecyn,Owaedry,Owain,Owarcyn,Owaryn,Owecyn,Owedry,Oweomyr,Oweor,Oweorcyn,Oweran,Owercyn,Owidry,Owinvan,Owinyc,Owodd,Owoddry,Owogwyn,Owollyn,Oworan,Oworcyn,Oworraent,Owuddry,Owuddyn,Owugwyn,Owur,Owyran,Rabryn,Radd,Ranvan,Rar,Reoddyn,Reodry,Rhaecyn,Rhaedoc,Rhaemyr,Rhaerraent,Rhanry,Rharcyn,Rhenry,Rhenvan,Rhenyc,Rheodd,Rheoddyn,Rheollyn,Rheor,Rheoran,Rheorraent,Rheran,Rherraent,Rhobryn,Rhodry,Rhollyn,Rhonvan,Rhubryn,Rhugwyn,Rhunyc,Rhur,Rhygwyn,Rhyllyn,Rhynyc,Rhyrcyn,Rhyrraent,Rocyn,Roddyn,Romyr,Ron,Ronry,Rubryn,Ruddry,Rumyr,Run,Rurcyn,Rybryn,Rycyn,Ryddry,Rygwyn,Rynnyn,Rynry,Saec,Saellyn,Saemyr,Saenvan,Saercyn,Sanyc,Saran,Sarraent,Secyn,Seddyn,Sedry,Sellyn,Sennyn,Seoddry,Seorcyn,Sercyn,Siddry,Simyr,Siryn,Sodd,Sodry,Soran,Suc,Sudd,Surcyn,Sydd,Syran,Syryn,Tabryn,Taec,Taedd,Taedoc,Taemyr,Taenvan,Taercyn,Tanry,Tarcyn,Teddyn,Tegwyn,Ten,Tennyn,Tenvan,Teobryn,Teoddyn,Teor,Teorcyn,Terraent,Tinry,Tinvan,Tiryn,Todd,Tudd,Tuddry,Tudoc,Tunvan,Turraent,Tyddyn,Vaddyn,Vaeddyn,Vaedry,Vaennyn,Varcyn,Ven,Vennyn,Veocyn,Veoddyn,Veodry,Veogwyn,Veomyr,Vinvan,Vinyc,Virraent,Vobryn,Vogwyn,Vonry,Vuddyn,Vugwyn,Vyc,Vygwyn,Vyrcyn,Yracyn,Yraec,Yran,Yrannyn,Yranvan,Yraryn,Yredd,Yreddyn,Yregwyn,Yreryn,Yrinvan,Yrirraent,Yroddry,Yrullyn,Yrumyr,Yrunnyn,Yrunvan,Yryllyn,Yrymyr,Yrynyc,Yryrcyn"}
        {VARIABLE_OP tmp_tomb_title rand ("an ordinary peasant by the name of","Sir","Lord","Count","Sergeant","Lieutenant","General","Grand Marshal","Archmage","an infamous assassin","Duke","Prince","King")}
        {VARIABLE_OP tmp_tomb_cause_of_death rand ("lived a fulfilling life and died of old age","lived a fulfilling life and died of old age","killed by an assassin","killed in battle while defending his homeland","died to an enemy's arrow","killed in a duel","betrayed and killed by his subordinate","his cause of death is unknown")}

            {RANDOM_TEXTITEM $tmp_tomb_image| _"Tomb" _"Here lies $tmp_tomb_title| $tmp_tomb_name|, $tmp_tomb_cause_of_death|. May he rest in peace."}
        
      [/case]
      [case]
        value=2
        #tombs of female humans:
        {VARIABLE_OP tmp_tomb_image rand ("items/stone-tablet.png","scenery/monolith2.png","items/coffin-closed.png","scenery/monolith3.png","scenery/rock-cairn.png")}
        {VARIABLE_OP tmp_tomb_name rand _"Alabrylla,Alaebrylla,Alaeniver,Alalla,Alalonna,Alaryan,Aleacla,Aleaniver,Aleara,Alearka,Alena,Alengwen,Alilonna,Alingwen,Alolla,Alolonna,Alora,Alubrylla,Aluniver,Aluryan,Alussa,Alwcla,Alwllyra,Alwlyan,Alwna,Alybrylla,Alynoic,Alyra,Alyryan,Braedda,Brassa,Bravyan,Breabrylla,Breall,Brealla,Brealonna,Breana,Brell,Brellyra,Brera,Brerka,Breryan,Bricla,Brirka,Brobrylla,Brollyra,Brona,Bronoic,Brora,Brorka,Brungwen,Bruryan,Brwra,Brycla,Brynoic,Caella,Caena,Caengwen,Caevyan,Call,Calla,Cassa,Cealonna,Cera,Ceryan,Cibrylla,Cicla,Cinoic,Cira,Cissa,Clacla,Claella,Claelyan,Claenoic,Clalla,Clallyra,Clara,Clarka,Clavyan,Cleacla,Cleall,Clealyan,Cleana,Cleanoic,Clenoic,Clibrylla,Clill,Clillyra,Clilyan,Clinoic,Clissa,Clobrylla,Clollyra,Clona,Clongwen,Clungwen,Clurka,Cluvyan,Clwdda,Clwlla,Clwvyan,Clydda,Clylla,Cora,Coryan,Cucla,Cudda,Curyan,Cwdda,Cwlonna,Cwngwen,Cwvyan,Cydda,Cylla,Cyllyra,Cylyan,Cyniver,Cyvyan,Daedda,Daelyan,Daengwen,Daenoic,Dalla,Dallyra,Dangwen,Dara,Dassa,Deanoic,Deassa,Della,Devyan,Dicla,Diniver,Dissa,Dollyra,Dullyra,Dulonna,Dwbrylla,Dwdda,Dwna,Dwnoic,Dwra,Dybrylla,Dydda,Dyssa,Elacla,Elaedda,Elaell,Elaelonna,Elaessa,Elaevyan,Elallyra,Elalonna,Elara,Elavyan,Elealla,Eleanoic,Elearka,Elenoic,Elerka,Elivyan,Elulonna,Elurka,Elwllyra,Elwlonna,Elwngwen,Elwra,Elycla,Elyllyra,Elyngwen,Elyniver,Elyrka,Gwaera,Gwaessa,Gwangwen,Gweacla,Gwedda,Gwerka,Gwicla,Gwirka,Gwobrylla,Gwoll,Gwona,Gwongwen,Gwonoic,Gworyan,Gwullyra,Gwussa,Gwwcla,Gwwna,Gwwvyan,Gwycla,Gwydda,Heldra,Jacla,Jaena,Jaerka,Jaevyan,Jalyan,Jana,Jarka,Jassa,Jeabrylla,Jealla,Jeanoic,Jeniver,Jiryan,Jissa,Joll,Jolla,Jona,Jongwen,Jonoic,Jora,Jorka,Jovyan,Judda,Jull,Julonna,Jura,Jwll,Jwlyan,Jycla,Jyniver,Jynoic,Jyrka,Jyvyan,Laeniver,Laenoic,Laeryan,Langwen,Larka,Lassa,Lealonna,Lealyan,Ledda,Lelonna,Lelyan,Lengwen,Lerka,Lessa,Lidda,Lill,Lina,Lirka,Liryan,Livyan,Locla,Lodda,Lollyra,Lolonna,Lulla,Lulyan,Lungwen,Lunoic,Luryan,Lwcla,Lwlla,Lwnoic,Lwryan,Lycla,Lylla,Lylyan,Lyna,Lynoic,Maecla,Maeniver,Mavyan,Meacla,Mealyan,Meana,Meangwen,Meanoic,Medda,Melonna,Mengwen,Meniver,Meradda,Meraecla,Meraelyan,Merall,Merallyra,Meralonna,Merana,Meranoic,Merealonna,Mereangwen,Mereaniver,Merebrylla,Merella,Merengwen,Meressa,Merilyan,Merina,Merinoic,Merissa,Merivyan,Merolla,Merolyan,Merona,Meroniver,Merubrylla,Merudda,Merurka,Merwlla,Merwnoic,Merwryan,Merydda,Merylyan,Messa,Milonna,Molyan,Moniver,Mossa,Mudda,Mullyra,Mulyan,Muryan,Mwbrylla,Mwlyan,Mwngwen,Mwnoic,Mycla,Myll,Mylla,Myra,Myvyan,Nabrylla,Naebrylla,Naecla,Naell,Nalyan,Nangwen,Nealla,Neallyra,Nealonna,Neavyan,Nera,Nessa,Ninoic,Niryan,Nivyan,Nobrylla,Nolla,Nonoic,Norka,Noryan,Nucla,Nulla,Nulyan,Nungwen,Nuvyan,Nwllyra,Nwryan,Nwvyan,Nybrylla,Nyll,Nylyan,Nyryan,Nyssa,Nyvyan,Raebrylla,Raera,Raerka,Ralonna,Rara,Rarka,Rassa,Reacla,Realla,Reana,Reangwen,Rella,Relyan,Rengwen,Rerka,Revyan,Rilonna,Rilyan,Rirka,Rora,Rucla,Ruryan,Rwdda,Rwlla,Rwllyra,Rwlonna,Rwngwen,Rybrylla,Ryna,Ryngwen,Saell,Saellyra,Saeniver,Saerka,Saessa,Sallyra,Sanoic,Sara,Sassa,Searka,Sena,Senoic,Sera,Silonna,Sira,Siryan,Sona,Sorka,Subrylla,Sull,Sulonna,Sulyan,Sura,Sussa,Swlla,Swlyan,Swngwen,Swnoic,Swvyan,Syllyra,Sylyan,Syssa,Ysacla,Ysaenoic,Ysaerka,Ysanoic,Yseacla,Ysealonna,Ysealyan,Ysedda,Ysell,Yselonna,Ysilyan,Ysinoic,Ysodda,Ysongwen,Ysonoic,Ysura,Yswniver,Ysycla,Ysylla,Ysylyan,Ysyrka,Ysyssa"}
        {VARIABLE_OP tmp_tomb_title rand ("an ordinary peasant by the name of","Lady","Countess","Duchess","Archmage","an infamous assassin","Princess","Queen")}
        {VARIABLE_OP tmp_tomb_cause_of_death rand ("lived a fulfilling life and died of old age","lived a fulfilling life and died of old age","killed by an assassin","betrayed and killed by her subordinate","her cause of death is unknown")}

            {RANDOM_TEXTITEM $tmp_tomb_image| _"Tomb" _"Here lies $tmp_tomb_title| $tmp_tomb_name|, $tmp_tomb_cause_of_death|. May she rest in peace."}
        
      [/case]
    [/switch]
  [/then]
  [/elseif]
  [elseif]
  {VARIABLE_CONDITIONAL hoplite_biome equals aquatic}
  [then]
    {VARIABLE_OP itemtype rand 1..5}
    [switch]
      variable=itemtype
      [case]
        value=1
        {RANDOM_TEXTITEM "scenery/shipwreck-1.png" _"Shipwreck" _"<i>An old shipwreck seems to have founds its way all the way into this flooded part of the caves. Seems it's already been thoroughly ransacked by the nagas.</i>"}
      [/case]
      [case]
        value=2
            {RANDOM_TEXTITEM "scenery/signpost.png" _"Sign" _"Caution: water resevoir infested by cuttlefish and crabs"}
      [/case]
      [case]
        value=3
        {RANDOM_TEXTITEM "scenery/shipwreck-1.png~GS()~BLEND(0,0,0,0.4)" _"Shipwreck" _"<i>You can barely see a sign on ship's side, with 'Black Pearl' written on it. How did this ship get here?.</i>"}
      [/case]
      [case]
        value=4
        {RANDOM_TEXTITEM "scenery/shipwreck-1.png" _"Shipwreck" _"<i>You can barely see a sign on ship's side, with 'Mary Celeste' written on it. How did this ship get here?.</i>"}
      [/case]
      [case]
        value=5
        {RANDOM_TEXTITEM "scenery/shipwreck-1.png~GS()" _"Shipwreck" _"<i>You can see a team of skeleton pirates aboard, repairing the ship. You better not approach it too close.</i>"}
      [/case]
    [/switch]
  [/then]
  [/elseif]
  [elseif]
  {VARIABLE_CONDITIONAL hoplite_biome equals jungle}
  [then]
    {VARIABLE_OP itemtype rand 1..3}
    [switch]
      variable=itemtype
      [case]
        value=1
            {RANDOM_TEXTITEM "scenery/rock4.png" _"Rock" _"Today's offering to the gods: one freshly cooked dwarf and six leg bones of the undead."}
      [/case]
      [case]
        value=2
            {RANDOM_TEXTITEM "items/altar-bloody.png" _"Lizard Altar" _"<i>One can only imagine what kind of unspeakable deeds have been done here...</i>"}
      [/case]
      [case]
        value=3
        {RANDOM_TEXTITEM "items/parchment.png" _"Note" _"If anyone is going to follow me, remember! These caves are still inhabited by saurians! - Otto Lidenbrock"}
      [/case]
    [/switch]
  [/then]
  [/elseif]
  [/if]
#  [/then])}
  [/then])}
  [/then])}
[/event]

[event]
#    id=hoplite_death_event
    id=hoplite_automove_event
    name=turn refresh
    first_time_only=no
    [filter_condition]
        [not]
        [have_unit]
            side=$hoplite_enemyside
#            [not]
#           ability=hoplite_dying
#       [/not]
        [/have_unit]
        [or]
            {VARIABLE_CONDITIONAL noautomove_this_depth equals yes}
        [/or]
        [/not]
    [/filter_condition]
    {CHATMSG "automove event"}

            [set_variable]
                name=hoplite_nospear
                value=yes
            [/set_variable]
            [set_variable]
                name=hoplite_depthdescending#matters for the harpoon upgrade
                value=yes
            [/set_variable]
            [if]
                [have_unit]
                    type=Hoplite_Runesmith
                [/have_unit]
                [then]
                {ACHIEVEMENT_MESSAGE runesmith}
                    [move_unit]
                        id=runesmith
                        to_x=6
                        to_y=5
                    [/move_unit]
                    [move_unit]
                        id=Hoplite,Hoplite2,Algadur
                        to_x=6
                        to_y=5
                    [/move_unit]
	{IF_VAR algadurlinesmith2 not_equals yes (
	[and]
	[have_unit]
	  id=Algadur
	[/have_unit]
	[/and]
	[then]
	{VARIABLE algadurlinesmith2 yes}
	[message]
	          speaker=runesmith
		  message=_"May I ask to whom I owe my life bein' saved?"
        [/message]
	[message]
	          speaker=Algadur
		  message=_"It's 'tis lad over 'ere, a 'hoplite' as they call 'em. He saved me sorry arse too, and killed plenty of orcs along the way!"
        [/message]
	[message]
	          speaker=runesmith
		  message=_"That is good ta hear, my friend. (to the hoplite) As my gratitude, I will offer ye the finest smithin' Knalga has to offer, free of charge! I 'ave not managed ta save much from my forge, but it should be about enough ta make some fine enchanted gear. Nowhere near enough for a new set of full plate armor, though."
        [/message]
	[/then])}
	{IF_VAR linesmith not_equals yes (
	[and]
	[not]
	[have_unit]
	  id=Algadur
	[/have_unit]
	[/not]
	[/and]
	[then]
	{VARIABLE linesmith yes}
	[message]
	          speaker=runesmith
		  message=_"May I ask to whom I owe my life bein' saved?"
        [/message]
        [message]
            id=Hoplite,Hoplite2
            message=_"I am a hoplite from Sparta."
        [/message]
    	[message]
	          speaker=runesmith
		  message=_"A 'hoplite', eh? I wonder what that even means... Nevermind, as my gratitude, I will offer ye the finest smithin' Knalga has to offer, free of charge! I 'ave not managed ta save much from my forge, but it should be about enough ta make some fine enchanted gear. Nowhere near enough for a new set of full plate armor, though."
        [/message]
	[/then])}
    {VARIABLE spartan_runesmithupgrade yes}#normal forge can still be used after runesmith
                    [if]
                        [have_unit]
                            id=Hoplite2
                        [/have_unit]
                        [then]
                            {HOPLITE_CREATE_FORGE_OPTIONS 1}
                            [message]
                                speaker=narrator
                                caption= _ "Runesmith"
                                image="portraits/dwarves/runemaster.png"
                                message= _ "As gratitude for saving him, the runesmith offers you a free upgrade. (side 1):"
#ifdef MULTIPLAYER
                                side_for=1
#endif
                                [insert_tag]
                                    name=option
                                    variable=hoplite_forgeupgrades_options
                                [/insert_tag]                           
                            [/message]
                            {CLEAR_VARIABLE hoplite_forgeupgrades_options}
                            {HOPLITE_CREATE_FORGE_OPTIONS 2}
                            [set_variable]
                                name=current_side_2
                                value=yes
                            [/set_variable]
                            [message]
                                speaker=narrator
                                caption= _ "Runesmith"
                                image="portraits/dwarves/runemaster.png"
                                message= _ "As gratitude for saving him, the runesmith offers you a free upgrade. (side 2):"
#ifdef MULTIPLAYER
                                side_for=2
#endif
                                [insert_tag]
                                    name=option
                                    variable=hoplite_forgeupgrades_options
                                [/insert_tag]                           
                            [/message]
                            {CLEAR_VARIABLE current_side_2}
                            {CLEAR_VARIABLE hoplite_forgeupgrades_options}
                        [/then]
                        [else]
                            {HOPLITE_CREATE_FORGE_OPTIONS 1}
                            [message]
                                speaker=narrator
                                caption= _ "Runesmith"
                                image="portraits/dwarves/runemaster.png"
                                message= _ "As gratitude for saving him, the runesmith offers you a free upgrade:"
                                [insert_tag]
                                    name=option
                                    variable=hoplite_forgeupgrades_options
                                [/insert_tag]                           
                            [/message]
                            {CLEAR_VARIABLE hoplite_forgeupgrades_options}
                        [/else]
                    [/if]
                    {CLEAR_VARIABLE spartan_runesmithupgrade}

                    [move_unit]
                        type=Hoplite_Runesmith,Hoplite_Dwarffighter
                        side=$hoplite_allyside
                        to_x=6
                        to_y=10
                    [/move_unit]
                    [kill]
                        race=dwarf
                        side=$hoplite_allyside
                        [not]
                            ability=hoplite_companion
                        [/not]
                        animate=no
                        fire_event=no
                    [/kill]
                [/then]
            [/if]
            [if]
                [have_unit]
                    id=Algadur
                    type=Hoplite_Steelclad
                [/have_unit]
                [then]
		{IF_VAR algadurmet not_equals yes (
		[then]
		[message]
		    speaker=Algadur
		    message=_"I... ain't dead? (looks around) By Thursagan's beard, I'm alive! I'm a-bloodly-live! (looks at the hoplite) I don't know who ye are, but ye have saved me from certain death! I owe ye everythin' I got; my life, my axe and my loyalty. The one thing we dwarves take more seriously than our grudges is our debts."
		[/message]

        [message]
            id=Hoplite,Hoplite2
            message=_"I am a hoplite from Sparta, on a quest to retrieve Prometheus' Heart from these caves. Very well, honorable warrior, I accept you into my team!"
        [/message]

        [message]
            speaker=Algadur
            message=_"A hoplite, ye say? From Sparta? Never heard of either, but given that I spent my whole life in the caves, that ain't saying much. Anyway, now that ya introduced yerself it's my turn - name's Algadur, was a commander of a nearby small outpost here 'til orcs slaughtered most of my lads and we had to retreat. If not for yer arrival I would've met the same fate."
        [/message]

        [message]
            speaker=Algadur
            message=_"Henceforth, ye are my Shield-Brother, and I shall fight for ye as if ye were me own kin! It has been many centuries since my clan welcome a non-dwarf as Shield-Brother! Now anyone standing in yer path will have a taste of my battleaxe and my trusty hammer!"
        [/message]

        [remove_unit_overlay]
               id=Algadur
               image=misc/hero-icon.png
        [/remove_unit_overlay]
        [modify_unit]
            [filter]
                id=Algadur
            [/filter]
            {TRAIT_LOYAL}
        [/modify_unit]
        [object]
		silent=yes
		duration=forever
		[filter]
		  id=Algadur
		[/filter]
		[effect]
		  apply_to=type
		  name=Hoplite_Steelclad2
	    [/effect]
                [/object]
		[/then])}
		{VARIABLE algadurmet yes}
                {ACHIEVEMENT_MESSAGE algadur}
                [/then]
            [/if]
            [if]
                [variable]
                    name=haveforge
                    equals=yes
                [/variable]
                [and]
                    [variable]
                        name=usedforge
                        not_equals=yes
                    [/variable]
                [/and]
                [then]
                    [if]
                    [have_unit]
                        x,y=$forge_x,$forge_y
                        [not]
                            id=Hoplite,Hoplite2
                        [/not]
                    [/have_unit]
                    [then]
                    [move_unit]
                        x,y=$forge_x,$forge_y
                        to_x,to_y=6,10
                    [/move_unit]
                    [/then]
                    [/if]
                    [move_unit]
                        id=Hoplite,Hoplite2
                        to_x,to_y=$forge_x,$forge_y
                    [/move_unit]
                    [fire_event]
                        name=moveto
                        [primary_unit]
                            side=$hoplite_playerside
                            x,y=$forge_x,$forge_y
                        [/primary_unit]
                    [/fire_event]
                [/then]
            [/if]
            {IF_VAR darkcircle_x greater_than 0 (
                [then]
                    {MOVE_UNIT id=Hoplite,Hoplite2 $darkcircle_x $darkcircle_y}
                    [fire_event]
                        name=moveto
                        [primary_unit]
                            side=$hoplite_playerside
                            x,y=$darkcircle_x,$darkcircle_y
                        [/primary_unit]
                    [/fire_event]
                [/then]
            )}
            {IF_VAR textitem.x greater_than 0 (
	    [and]
                {VARIABLE_CONDITIONAL textitem_seen not_equals yes}
	    [/and]
                [then]
                    {MOVE_UNIT id=Hoplite,Hoplite2 $textitem.x $textitem.y}
                    [fire_event]
                        name=moveto
                        [primary_unit]
                            side=$hoplite_playerside
                            x,y=$textitem.x $textitem.y
                        [/primary_unit]
                    [/fire_event]
                [/then]
            )}
            {IF_VAR circle_x greater_than 0 (
                [then]
                    {MOVE_UNIT id=Hoplite,Hoplite2 $circle_x $circle_y}
                    [fire_event]
                        name=moveto
                        [primary_unit]
                            side=$hoplite_playerside
                            x,y=$circle_x,$circle_y
                        [/primary_unit]
                    [/fire_event]
                [/then]
            )}
            {IF_VAR hoplite_usedportal not_equals yes (
                [then]
                    [kill]
                        side=$hoplite_allyside
                        x,y=6,2
                        animate=no
                    [/kill]
                    [move_unit]
                        id=Hoplite
                        to_x=6
                        to_y=2
                    [/move_unit]
                    [if]
                        [have_unit]
                            id=Hoplite2
                        [/have_unit]
                        [then]
                            [move_unit]
                                id=Hoplite2
                                to_x=5
                                to_y=3
                            [/move_unit]
                        [/then]
                    [/if]

            #if player ends turn after beating a level, don't automove him over and over next to exit. instead wait for depthdescent to re-enable automove
            {VARIABLE noautomove_this_depth yes}
		    
		    {IF_VAR hoplite_depth less_than 40 (
		    [and]
		    {VARIABLE_CONDITIONAL darkcircle_x not_equals 6}
		    [/and]
		    [and]
		    {VARIABLE_CONDITIONAL darkcircle_y not_equals 2}
		    [/and]
		    [then]
                [fire_event]
                    id=hoplite_depthdescent
                [/fire_event]
		    [/then])}
                [/then]
            )}
[/event]    

[event]
    name=side 1 turn
    first_time_only=no
  	{CHATMSG "patience/rest side 1"}

#ifdef MULTIPLAYER    
    {IF_VAR patience_unlocked1 equals yes (
        [and]
            {VARIABLE_CONDITIONAL side1_patience not_equals yes}
        [/and]
        [then]
            [allow_end_turn]
            [/allow_end_turn]
	    {VARIABLE side1_patience yes}
        [/then]
        [elseif]
           {VARIABLE_CONDITIONAL patience_unlocked2 equals yes}
	   [and]
            {VARIABLE_CONDITIONAL patience_unlocked1 not_equals yes}
	   [/and]
	   [then]
            [disallow_end_turn]
            [/disallow_end_turn]
	    {CLEAR_VARIABLE side1_patience}
	  [/then]
        [/elseif]
    )}
#endif
    {IF_VAR hoplite_still equals yes (
    [then]
        {IF_VAR hoplite_rest_energybonus1 greater_than 0 (
        [then]
            {HOPLITE_ADD_ENERGY_BY_SIDE 1 $hoplite_rest_energybonus1}
        [/then]
        )}
        {IF_VAR hoplite_rest_heal1 greater_than 0 (
        [then]
            [heal_unit]
                [filter]
                    id=Hoplite
                    [not]
                        [filter_wml]
                            [status]
                                unhealable=yes
                            [/status]
                        [/filter_wml]
                    [/not]
                [/filter]
                amount=$hoplite_rest_heal1
                animate=yes
                restore_statuses=no
            [/heal_unit]
            [modify_unit]
                [filter]
                    id=Hoplite
                    [not]
                        [filter_wml]
                            [status]
                                unhealable=yes
                            [/status]
                        [/filter_wml]
                    [/not]
                [/filter]
                [status]
                    poisoned=no
                [/status]
            [/modify_unit]
        [/then]
        )}
    [/then]
    )}

    {CLEAR_VARIABLE hoplite_still}
    {CLEAR_VARIABLE hoplite_nospear}
    {CLEAR_VARIABLE hoplite_depthdescending}
    {VARIABLE_OP hoplite_wizardbeam_cooldown sub 1}
    {VARIABLE_OP hoplite_wizardbeam_cooldown1 sub 1}
    {VARIABLE_OP hoplite_wizardbeam_cooldown2 sub 1}
#unused
#    {VARIABLE_OP hoplite_enthrall_cooldown sub 1}
#    {VARIABLE_OP hoplite_enthrall_cooldown1 sub 1}
#    {VARIABLE_OP hoplite_enthrall_cooldown2 sub 1}
#    {VARIABLE_OP hoplite_harpoon_cooldown2 sub 1}
#    {VARIABLE_OP hoplite_harpoon_cooldown2_1 sub 1}
#    {VARIABLE_OP hoplite_harpoon_cooldown2_2 sub 1}
[/event]
#ifdef MULTIPLAYER
[event]
    name=side 2 turn
    first_time_only=no
    {CHATMSG "patience/rest side 2"}

    {IF_VAR patience_unlocked2 equals yes (
        [and]
            {VARIABLE_CONDITIONAL side2_patience not_equals yes}
        [/and]
        [then]
            [allow_end_turn]
            [/allow_end_turn]
	    {VARIABLE side2_patience yes}
        [/then]
        [elseif]
           {VARIABLE_CONDITIONAL patience_unlocked1 equals yes}
	   [and]
            {VARIABLE_CONDITIONAL patience_unlocked2 not_equals yes}
	   [/and]
	   [then]
            [disallow_end_turn]
            [/disallow_end_turn]
	    {CLEAR_VARIABLE side2_patience}
	  [/then]
        [/elseif]
    )}
    {IF_VAR hoplite_still2 equals yes (
    [then]
        #add extra energy per upgrade:

        {IF_VAR hoplite_rest_energybonus2 greater_than 0 (
        [then]
            {HOPLITE_ADD_ENERGY_BY_SIDE 2 $hoplite_rest_energybonus2}
        [/then]
        )}
        {IF_VAR hoplite_rest_heal2 greater_than 0 (
        [then]
            [heal_unit]
                [filter]
                    id=Hoplite2
                    [not]
                        [filter_wml]
                            [status]
                                unhealable=yes
                            [/status]
                        [/filter_wml]
                    [/not]
                [/filter]
                amount=$hoplite_rest_heal2
                animate=yes
                restore_statuses=no
            [/heal_unit]
            [modify_unit]
                [filter]
                    id=Hoplite2
                    [not]
                        [filter_wml]
                            [status]
                                unhealable=yes
                            [/status]
                        [/filter_wml]
                    [/not]
                [/filter]
                [status]
                    poisoned=no
                [/status]
            [/modify_unit]
        [/then]
        )}
    [/then]
    )}

    {CLEAR_VARIABLE hoplite_still2}
[/event]
#endif
[event]
    name=side turn
    first_time_only=no
    [filter_condition]
        [have_unit]
            id=Hoplite,Hoplite2
            side=$side_number
        [/have_unit]
    [/filter_condition]
	{CHATMSG "if slowed end turn"}
#no longer needed, as rest heal is disabled in Spartan.cfg lua code
#    {MODIFY_UNIT side=$side_number resting false}
    [if]
        [have_unit]
            id=Hoplite,Hoplite2
            side=$side_number
            [filter_wml]
                [status]
                    slowed=yes
                [/status]
            [/filter_wml]
        [/have_unit]
        [and]
            [not]
                [have_unit]
                    side=$hoplite_enemyside
                    [filter_adjacent]
                        id=Hoplite,Hoplite2
                        side=$side_number
                    [/filter_adjacent]
                [/have_unit]
            [/not]
        [/and]
        [then]
            [end_turn]
            [/end_turn]
        [/then]
    [/if]
[/event]
#this is probably to make the ally side not waste turns until an ally has actually been placed
[event]
   name=unit placed
   first_time_only=yes
   [filter]
      side=$hoplite_allyside
   [/filter]
   {CHATMSG "hoplite allyside ai or null check"}
   [modify_side]
      side=$hoplite_allyside
      controller=ai
      hidden=no
   [/modify_side]
[/event]
[event]
   name=unit placed
   first_time_only=no
   [filter]
      side=$hoplite_allyside
      type=Hoplite_Giantrat_ally
      ability=spartan_ally_owner_side1
   [/filter]
   {CHATMSG "hoplite rat buff"}
#this code seems a bit unneccessary, check it later
   {IF_VAR rat_powerII_unlocked1 equals yes (
   [then]
            [object]
		silent=yes
		duration=forever
		[filter]
		  id=$unit.id
		[/filter]
		[effect]
		  apply_to=type
		  name=Hoplite_Colossalrat_ally
	        [/effect]
		[effect]
		  apply_to=hitpoints
		  heal_full=yes
	        [/effect]
            [/object]
   [/then])}
   {IF_VAR rat_power_unlocked1 equals yes (
   [and]
   [variable]
     name=rat_powerII_unlocked1
     not_equals=yes
   [/variable]
   [/and]
   [then]
        [object]
		silent=yes
		duration=forever
		[filter]
		  id=$unit.id
          [not]
             ability=hoplite_ratbuff1
          [/not]
		[/filter]
		[effect]
		  apply_to=attack
		  range=melee
		  increase_damage=2
	        [/effect]
		[effect]
		  apply_to=hitpoints
		  increase=5
		  increase_total=5
	        [/effect]
            [effect]
                apply_to=new_ability
                [abilities]
                    [dummy]
                        id=hoplite_ratbuff1
                    [/dummy]
                [/abilities]
            [/effect]
        [/object]
   [/then])}

#unused
#   {IF_VAR rat_powerIII_unlocked equals yes (
#   [and]
#    {VARIABLE_CONDITIONAL hoplite_ratking not_equals yes}
#   [/and]
#   [or]
#   {VARIABLE_CONDITIONAL rat_powerIII_unlocked1 equals yes}
#   [and]
#    {VARIABLE_CONDITIONAL hoplite_ratking1 not_equals yes}
#   [/and]
#   [/or]
#   [then]
#            [object]
#		silent=yes
#		duration=forever
#		[filter]
#		  id=$unit.id
#		[/filter]
#		[effect]
#		  apply_to=attack
#		  range=melee
#		  increase_damage=2
#	        [/effect]
#		[effect]
#		  apply_to=hitpoints
#		  increase=10
#		  increase_total=10
#	        [/effect]
#	        [effect]
#		apply_to=new_ability
#		[abilities]
#			{ABILITY_HOPLITE_KNOCKBACKIMMUNE}
#		[/abilities]
#        	[/effect]	
#		[effect]
#		  apply_to=movement
#		  set=1
#	        [/effect]
#		[effect]
#		  apply_to=image_mod
#		  add="~SCALE(88,88)"
#	        [/effect]
#            [/object]
#	    {VARIABLE hoplite_ratking yes}
#	    {VARIABLE hoplite_ratking1 yes}
#   [/then])}
[/event]
[event]
   name=unit placed
   first_time_only=no
   [filter]
      side=$hoplite_allyside
      type=Hoplite_Cavebear_ally
      ability=spartan_ally_owner_side1
   [/filter]
   {CHATMSG "hoplite bear buff"}
   {IF_VAR bearII_unlocked1 equals yes (
   [then]
        [object]
        silent=yes
        duration=forever
        [filter]
          id=$unit.id
          [not]
             ability=hoplite_bearbuff1
          [/not]
        [/filter]
        [effect]
          apply_to=hitpoints
          increase=10
          increase_total=10
        [/effect]
        [effect]
            apply_to=new_ability
            [abilities]
                [dummy]
                    id=hoplite_bearbuff1
                [/dummy]
            [/abilities]
        [/effect]
        [/object]
   [/then])}
[/event]
#ifdef MULTIPLAYER
[event]
   name=unit placed
   first_time_only=no
   [filter]
      side=$hoplite_allyside
      type=Hoplite_Cavebear_ally
      ability=spartan_ally_owner_side2
   [/filter]
   {CHATMSG "hoplite bear buff"}
   {IF_VAR bearII_unlocked2 equals yes (
   [then]
        [object]
        silent=yes
        duration=forever
        [filter]
          id=$unit.id
          [not]
             ability=hoplite_bearbuff1
          [/not]
        [/filter]
        [effect]
          apply_to=hitpoints
          increase=10
          increase_total=10
        [/effect]
        [effect]
            apply_to=new_ability
            [abilities]
                [dummy]
                    id=hoplite_bearbuff1
                [/dummy]
            [/abilities]
        [/effect]
        [/object]
   [/then])}
[/event]
[event]
   name=unit placed
   first_time_only=no
   [filter]
      side=$hoplite_allyside
      type=Hoplite_Giantrat_ally
      ability=spartan_ally_owner_side2
   [/filter]
   {CHATMSG "hoplite multiplayer rat buff"}
   {IF_VAR rat_powerII_unlocked2 equals yes (
   [then]
            [object]
		silent=yes
		duration=forever
		[filter]
		  id=$unit.id
		[/filter]
		[effect]
		  apply_to=type
		  name=Hoplite_Colossalrat_ally
	        [/effect]
		[effect]
		  apply_to=hitpoints
		  heal_full=yes
	        [/effect]
            [/object]
   [/then])}
   {IF_VAR rat_power_unlocked2 equals yes (
   [and]
   [variable]
     name=rat_powerII_unlocked2
     not_equals=yes
   [/variable]
   [/and]
   [then]
        [object]
        silent=yes
        duration=forever
        [filter]
          id=$unit.id
          [not]
             ability=hoplite_ratbuff1
          [/not]
        [/filter]
        [effect]
          apply_to=attack
          range=melee
          increase_damage=2
            [/effect]
        [effect]
          apply_to=hitpoints
          increase=5
          increase_total=5
            [/effect]
            [effect]
                apply_to=new_ability
                [abilities]
                    [dummy]
                        id=hoplite_ratbuff1
                    [/dummy]
                [/abilities]
            [/effect]
        [/object]
   [/then])}
#unused
#   {IF_VAR rat_powerIII_unlocked2 equals yes (
#   [and]
#    {VARIABLE_CONDITIONAL hoplite_ratking2 not_equals yes}
#   [/and]
#   [then]
#            [object]
#		silent=yes
#		duration=forever
#        id=hoplite_ratbuff3#added id to prevent this being stacked
#		[filter]
#		  id=$unit.id
#		[/filter]
#		[effect]
#		  apply_to=attack
#		  range=melee
#		  increase_damage=2
#	        [/effect]
#		[effect]
#		  apply_to=hitpoints
#		  increase=10
#		  increase_total=10
#	        [/effect]
#	        [effect]
#		apply_to=new_ability
#		[abilities]
#			{ABILITY_HOPLITE_KNOCKBACKIMMUNE}
#		[/abilities]
#        	[/effect]	
#		[effect]
#		  apply_to=movement
#		  set=1
#	        [/effect]
#		[effect]
#		  apply_to=image_mod
#		  add="~SCALE(88,88)"
#	        [/effect]
#            [/object]
#	    {VARIABLE hoplite_ratking2 yes}
#   [/then])}
[/event]
[event]
   name=unit placed
   first_time_only=no
   [filter]
      side=$hoplite_enemyside
      [not]
        ability=hoplite_buffed
        [or]
        ability=hoplite_boss_statmultiplier
        [/or]
      [/not]
   [/filter]
   {CHATMSG "hoplite multiplayer enemy buff"}
   {IF_VAR unit.level equals 0 (
   [then]
     {VARIABLE hpbuff_amount 3}
   [/then]
   [else]
     {VARIABLE hpbuff_amount 5}
   [/else])}
            [object]
		silent=yes
		duration=forever
		[filter]
		  x,y=$x1,$y1
		[/filter]
		[effect]
		  apply_to=hitpoints
		  increase=$hpbuff_amount
		  increase_total=$hpbuff_amount
	        [/effect]
        	[effect]
		apply_to=new_ability
		[abilities]
                    [dummy]
                       id=hoplite_buffed
                    [/dummy]
		[/abilities]
          	[/effect]	
            [/object]
	    {CLEAR_VARIABLE hpbuff_amount}
[/event]
[event]
   name=unit placed
   first_time_only=no
   [filter]
      side=$hoplite_enemyside
      ability=hoplite_boss_statmultiplier
      [not]
        ability=hoplite_buffed
      [/not]
   [/filter]
   {CHATMSG "hoplite multiplayer boss buff"}
            [object]
    silent=yes
    duration=forever
    [filter]
      x,y=$x1,$y1
    [/filter]
    [effect]
      apply_to=hitpoints
      increase=66%
      increase_total=66%
    [/effect]
    [effect]
      apply_to=attack
      increase_damage=33%
    [/effect]

          [effect]
    apply_to=new_ability
    [abilities]
                    [dummy]
                       id=hoplite_buffed
                    [/dummy]
    [/abilities]
            [/effect] 
            [/object]
[/event]
#endif
[event]
    name=side 2 turn end
    first_time_only=no
#ifdef MULTIPLAYER    
    {CHATMSG "hoplite rest event 2"}
    {IF_VAR rest_unlocked2 equals yes (
        [then]
            [store_unit]
                [filter]
                    id=Hoplite2
                    side=$side_number
                [/filter]
                variable=hoplite_rest2
                kill=no
            [/store_unit]
            [if]
                [variable]
                    name=hoplite_rest2.moves
                    greater_than=0
                [/variable]
                [and]
                    [variable]
                        name=hoplite_rest2.attacks_left
                        greater_than=0
                    [/variable]
                [/and]
                [then]
                    {VARIABLE hoplite_still2 yes}
                [/then]
            [/if]
        [/then]
    )}
#endif    
    {CLEAR_VARIABLE hoplite_usedportal}
    {CLEAR_VARIABLE hoplite_rest2}
[/event]
#[event]
##ifdef MULTIPLAYER
#    name=side 3 turn
##else
#    name=side 2 turn
##endif
#
#	{CHATMSG "ally shortranged macros"}
#    first_time_only=no
#    {SHORTRANGED_MACRO_ALLY Hoplite_Orcgrunt orcgrunt sword blade}
#    {SHORTRANGED_MACRO_ALLY Hoplite_Orcwarrior orcwarrior greatsword blade}
#    {SHORTRANGED_MACRO_ALLY Hoplite_Giantcrab giantcrab claws blade}
#    {SHORTRANGED_MACRO_ALLY Hoplite_Hydra hydra bite blade}
#    {SHORTRANGED_MACRO_ALLY Hoplite_Spider_Minion spiderminion fangs blade}
#    {SHORTRANGED_MACRO_ALLY Hoplite_Faceless faceless sword blade}
#[/event]
[event]
    name=die
    id=spartan_deathevents_combined
    first_time_only=no
    [filter]
        side=$hoplite_enemyside
    [/filter]
#erasing of ranged targethexes is now handled inside the ranged attack file
#    [switch]
#        variable=unit.type
#        [case]
#            value=Hoplite_Orcarcher
#            [remove_item]
#                image=misc/targethex-archer.png
#                x,y=$x1,$y1
#                radius=4
#            [/remove_item]
#            {CLEAR_VARIABLE orcarcher}
#            {CLEAR_VARIABLE orcarcher_hopliteloc_x}
#            {CLEAR_VARIABLE orcarcher_hopliteloc_y}
#        [/case]
#        [case]
#            value=Hoplite_Skelearcher
#            [remove_item]
#                image=misc/targethex-archer.png
#                x,y=$x1,$y1
#                radius=4
#            [/remove_item]
#            {CLEAR_VARIABLE skelearcher}
#            {CLEAR_VARIABLE skelearcher_hopliteloc_x}
#            {CLEAR_VARIABLE skelearcher_hopliteloc_y}
#        [/case]
#        [case]
#            value=Hoplite_Nagahunter
#            [remove_item]
#                image=misc/targethex-archer.png
#                x,y=$x1,$y1
#                radius=4
#            [/remove_item]
#            {CLEAR_VARIABLE nagahunter}
#            {CLEAR_VARIABLE nagahunter_hopliteloc_x}
#            {CLEAR_VARIABLE nagahunter_hopliteloc_y}
#        [/case]
#        [case]
#            value=Hoplite_Dark_Wizard
#            [remove_item]
#                image=misc/targethex.png
#                x,y=$x1,$y1
#                radius=4
#            [/remove_item]
#            {CLEAR_VARIABLE darkwizard}
#            {CLEAR_VARIABLE darkwizard_hopliteloc_x}
#            {CLEAR_VARIABLE darkwizard_hopliteloc_y}
#        [/case]
#        [case]
#            value=Hoplite_Spectremage
#            [remove_item]
#                image=misc/targethex.png
#                x,y=$x1,$y1
#                radius=4
#            [/remove_item]
#            {CLEAR_VARIABLE spectremage}
#            {CLEAR_VARIABLE spectremage_hopliteloc_x}
#            {CLEAR_VARIABLE spectremage_hopliteloc_y}
#        [/case]
#        [case]
#            value=Hoplite_Giantspider
#            [remove_item]
#                image=misc/targethex-archer.png
#                x,y=$x1,$y1
#                radius=3
#            [/remove_item]
#            {CLEAR_VARIABLE giantspider}
#            {CLEAR_VARIABLE giantspider_hopliteloc_x}
#            {CLEAR_VARIABLE giantspider_hopliteloc_y}
#        [/case]
#        [case]
#            value=Hoplite_Spider_Queen
#            [remove_item]
#                image=misc/targethex-archer.png
#                x,y=$x1,$y1
#                radius=3
#            [/remove_item]
#            {CLEAR_VARIABLE spiderqueen_web}
#            {CLEAR_VARIABLE spiderqueen_web_hopliteloc_x}
#            {CLEAR_VARIABLE spiderqueen_web_hopliteloc_y}
#        [/case]
#        [case]
#            value=Hoplite_Cuttlefish
#            [remove_item]
#                image=misc/targethex-cuttlefish.png
#                x,y=$x1,$y1
#                radius=3
#            [/remove_item]
#            {CLEAR_VARIABLE cuttlefish}
#            {CLEAR_VARIABLE cuttlefish_hopliteloc_x}
#            {CLEAR_VARIABLE cuttlefish_hopliteloc_y}
#        [/case]
#    [/switch]

    [fire_event]
        id=hoplite_bossdeaths
        [primary_unit]
            id=$unit.id
        [/primary_unit]
        [secondary_unit]
            id=$second_unit.id
        [/secondary_unit]
    [/fire_event]
    [fire_event]
        id=hoplite_death_achievement_events
    [/fire_event]
#    [fire_event]
#       id=hoplite_death_event
#    [/fire_event]
    {IF_VAR reaper_being_unstored not_equals yes (
    [then]
        {VARIABLE energybonus $unit.level}
        {VARIABLE_OP energybonus multiply 10}
        {IF_VAR unit.level less_than 1 (
            [then]
                {VARIABLE_OP energybonus add 5}
            [/then]
        )}
        [if]
        [have_unit]
            id=$second_unit.id
            side=$hoplite_playerside
        [/have_unit]
        [then]
            {IF_VAR bloodlust_unlocked$second_unit.side equals yes (
                [then]
                    {VARIABLE_OP energybonus add 5}
                [/then]
            )}
            {IF_VAR bloodlustIV_unlocked$second_unit.side equals yes (
                [then]
                    {VARIABLE_OP energybonus add "$($killstreak$second_unit.side| * 2)"}
                    {VARIABLE_OP energybonus round ceil}
                [/then]
            )}
            {IF_VAR bloodlustII_unlocked$second_unit.side equals yes (
                [and]
                    [have_unit]
                        id=$second_unit.id
                        [not]
                            [filter_wml]
                                [status]
                                    unhealable=yes
                                [/status]
                            [/filter_wml]
                        [/not]
                    [/have_unit]
                [/and]
                [then]
                    {VARIABLE hopliteheal $unit.level}
                    {VARIABLE_OP hopliteheal multiply 2}
                    [heal_unit]
                        [filter]
                            id=$second_unit.id
                        [/filter]
                        amount=$hopliteheal
                        animate=yes
                        restore_statuses=no
                    [/heal_unit]
                    [modify_unit]
                        [filter]
                            id=$second_unit.id
                        [/filter]
                        [status]
                            poisoned=no
                        [/status]
                    [/modify_unit]
                    {CLEAR_VARIABLE hopliteheal}
                [/then]
            )}
            [if]
                [have_unit]
                    id=$second_unit.id
                    [filter_wml]
                        [status]
                            unhealable=yes
                        [/status]
                    [/filter_wml]
                [/have_unit]
                [then]
                    {VARIABLE_OP energybonus divide 2}
                    {VARIABLE_OP energybonus round floor}
                [/then]
            [/if]
            {HOPLITE_ADD_ENERGY_BY_SIDE $second_unit.side $energybonus}

            {CLEAR_VARIABLE energybonus}
            [/then]
            [elseif]
            [have_unit]
                id=$second_unit.id
                side=$hoplite_allyside
            [/have_unit]
            [then]
                {HOPLITE_ADD_ENERGY_BY_SIDE $second_unit.side $energybonus}
            [/then]
            [/elseif]
            [else]
            [/else]
            [/if]
        [/then]
    )}

    [switch]
        variable=second_unit.id
        [case]
            value=Hoplite
            {VARIABLE_OP killstreak1 add 1}
#frenzy/berserk are no longer progress achievements, so commented out
#            {VARIABLE frenzy_progress1 $killstreak1}
#            {VARIABLE berserk_progress1 $killstreak1}
            {IF_VAR hoplite_multiplayer equals yes (
                [then]
                    {VARIABLE hoplite_killedenemy_thisturn1 yes}
                [/then]
                [else]
                    {VARIABLE hoplite_killedenemy_thisturn yes}
                [/else]
            )}
            {IF_VAR bloodlustIII_unlocked1 equals yes (
            [then]
                {IF_VAR killstreak1 greater_than_equal_to 3 (
                [and]
                    {VARIABLE_CONDITIONAL bloodlustIII_active1 not_equals yes}
                [/and]
                [then]
                    {HOPLITE_RAGE_EVENT Hoplite}
                    {VARIABLE bloodlustIII_active1 yes}
                [/then]
                )}
            [/then]
            )}
            {IF_VAR killstreak1 greater_than_equal_to 10 (
            [then]
                {ALGADUR_LINE killstreak (
                [message]
                    speaker=Algadur
                    message=_"If I didn't know any better, I'd call ya an Ulfserker! Keep it going, shield-brother!"
                [/message]
                )}
                {ELIZABETH_LINE killstreak (
                [message]
                    speaker=Elizabeth
                    message=_"How many is that now!? Only the finest warriors and generals of Wesnoth would be capable of fighting like that!"
                [/message]
                [message]
                    speaker=Hoplite
                    message=_"Ten foes in a row. And I do not know how this 'Wesnoth' would fight, but every warrior of Sparta has to be capable of at least this much!"
                [/message]
                [message]
                    speaker=Elizabeth
                    message=_"Goodness, then I'm glad I'm on your side!"
                [/message]
                )}
            [/then]
            )}
        [/case]
        [case]
            value=Hoplite2
            {VARIABLE hoplite_killedenemy_thisturn2 yes}
            {VARIABLE_OP killstreak2 add 1}
#frenzy/berserk are no longer progress achievements, so commented out
#            {VARIABLE frenzy_progress2 $killstreak2}
#            {VARIABLE berserk_progress2 $killstreak2}
            {IF_VAR bloodlustIII_unlocked2 equals yes (
            [then]                {IF_VAR killstreak2 greater_than_equal_to 3 (
                [and]
                    {VARIABLE_CONDITIONAL bloodlustIII_active2 not_equals yes}
                [/and]
                [then]
                    {HOPLITE_RAGE_EVENT Hoplite2}
                    {VARIABLE bloodlustIII_active2 yes}
                [/then]
                )}
            [/then]
            )}
            {IF_VAR killstreak2 greater_than_equal_to 10 (
            [then]
                {ALGADUR_LINE killstreak (
                [message]
                    speaker=Algadur
                    message=_"If I didn't know any better, I'd call ya an Ulfserker! Keep it going, shield-brother!"
                [/message]
                )}
                {ELIZABETH_LINE killstreak (
                [message]
                    speaker=Elizabeth
                    message=_"How many is that now!? Only the finest warriors and generals of Wesnoth would be capable of fighting like that!"
                [/message]
                [message]
                    speaker=Hoplite2
                    message=_"Ten foes in a row. And I do not know how this 'Wesnoth' would fight, but every warrior of Sparta has to be capable of at least this much!"
                [/message]
                [message]
                    speaker=Elizabeth
                    message=_"Goodness, then I'm glad I'm on your side!"
                [/message]
                )}
                [/then]
            )}
            [/case]
    [/switch]
[/event]
[event]
#    name=die
    #now fire manually with fire_event, to ensure it happens earlier than "automove to forge" code
    id=hoplite_bossdeaths
    first_time_only=no
    [filter]
        side=$hoplite_enemyside
#        level=3,4
    [/filter]
#    [object]
#        silent=yes
#        duration=turn
#        [filter]
#	     x,y=$x1,$y1
#        [/filter]
#	[effect]
#		apply_to=new_ability
#		[abilities]
#                    [dummy]
#                       id=hoplite_dying
#                    [/dummy]
#               [/abilities]
#	[/effect]
#    [/object]
    [switch]
        variable=unit.type
        [case]
            value=Hoplite_Spider_Queen
            {IF_VAR hoplite_depth greater_than 20 (
                [then]
                    [remove_item]
                        image="scenery/trapdoor-closed.png"
                        x,y=7,2
                    [/remove_item]
                    [item]
                        image="scenery/trapdoor-open.png"
                        x,y=7,2
                    [/item]
                [/then]
                [else]
                    [remove_item]
                        image="scenery/trapdoor-closed.png"
                        x,y=6,2
                    [/remove_item]
                    [item]
                        image="scenery/trapdoor-open.png"
                        x,y=6,2
                    [/item]
                [/else]
            )}
            {IF_VAR bossfight equals yes (
                [then]
                    {SPARTAN_SMOOTH_REPLACE_MUSIC silence.ogg 500 0}
                    {FLASH_WHITE (
                        [sound]
                            name=lightning.ogg
                        [/sound]
                        {VARIABLE reaper_being_unstored yes}
                        [kill]
                            side=$hoplite_enemyside
                            [not]
                                id=$unit.id#to avoid some bugs with events
                            [/not]
                            animate=no
                            fire_event=yes
                        [/kill]
                        {CLEAR_VARIABLE reaper_being_unstored}
                    )}
                    [delay]
                        time=500
                    [/delay]
                    {SPARTAN_BOSSMUSICEND}
                    {ACHIEVEMENT_MESSAGE spiderqueen}
                [/then]
            )}
            {VARIABLE spiderqueen_beaten yes}
            {CLEAR_VARIABLE bossfight}
        [/case]
        [case]
            value=Hoplite_Archmage
            {VARIABLE archmage_beaten yes}
            [remove_item]
                image="scenery/trapdoor-closed.png"
                x,y=6,2
            [/remove_item]
            [item]
                image="scenery/trapdoor-open.png"
                x,y=6,2
            [/item]
            {IF_VAR bossfight equals yes (
                [then]
                    [if]
		    [have_unit]
		           id=Archmage
			   x,y=$x1,$y1
			   [filter_wml]
			   variation=shaxtal
			   [/filter_wml]
		    [/have_unit]
		    [then]
            {VARIABLE archmage_beaten2 yes}
		    [/then]
		    [/if]
                    {FLASH_WHITE (
                        [sound]
                            name=lightning.ogg
                        [/sound]
                        [kill]
                            side=$hoplite_enemyside
                            [not]
                                id=$unit.id#to avoid some bugs with events
                            [/not]
                            animate=no
                            fire_event=no
                        [/kill]
                    )}
                    {SPARTAN_BOSSMUSICEND}

                    {IF_VAR unit.variation equals shaxtal (
                    [then]
                    {ACHIEVEMENT_MESSAGE archmage2}
                    [/then]
                    [else]
                    {ACHIEVEMENT_MESSAGE archmage}
                    [/else]
                    )}

		    {IF_VAR hoplite_depth equals 35 (
		    [then]
       	{IF_VAR Elizabeth_stored.x greater_than 0 (
	[then]
        [unstore_unit]
            variable=Elizabeth_stored
	    find_vacant=yes
	    x,y=6,10
        [/unstore_unit]
	[animate_unit]
		flag=post_teleport
		[filter]
		         id=Elizabeth
		[/filter]
	[/animate_unit]
	[/then]
	)}
	{IF_VAR Algadur_stored.x greater_than 0 (
	[then]
        [unstore_unit]
            variable=Algadur_stored
	    find_vacant=yes
	    x,y=6,10
        [/unstore_unit]
	[/then]
	)}
		    [/then])}
                [/then]
            )}
            {CLEAR_VARIABLE bossfight}
            {CLEAR_VARIABLE archmage}
            {CLEAR_VARIABLE archmage_hopliteloc_x}
            {CLEAR_VARIABLE archmage_hopliteloc_y}
            {CLEAR_VARIABLE archmage_hopliteloc_lightning_x}
            {CLEAR_VARIABLE archmage_hopliteloc_lightning_y}
        [/case]
        [case]
            value=Hoplite_Ares
            {IF_VAR hoplite_artifacts not_equals yes (
                [then]
         	    {VARIABLE hoplite_artifacts yes}
                    [item]
                        image=items/armor-golden.png
                        x,y=6,4
                    [/item]
                    [item]
                        image=items/spear-ares.png
                        x,y=6,4
                    [/item]
                    {MOVE_UNIT id=Hoplite 6 4}
                    {MOVE_UNIT id=Hoplite2 6 4}
                    [remove_item]
                        x,y=6,4
                    [/remove_item]
                    {HOPLITE_ARTIFACTS}
                [/then]
            )}
            {VARIABLE ares_beaten yes}
            [remove_item]
                x,y=$ares_hopliteloc_explosion_x,$ares_hopliteloc_explosion_y
            [/remove_item]
            {IF_VAR hoplite_depth greater_than_equal_to 50 (
	    [then]
            [remove_item]
                image="scenery/trapdoor-closed.png"
                x,y=7,2
            [/remove_item]
            [item]
                image="scenery/trapdoor-open.png"
                x,y=7,2
            [/item]
	    [/then]
	    [else]
            [remove_item]
                image="scenery/trapdoor-closed.png"
                x,y=6,2
            [/remove_item]
            [item]
                image="scenery/trapdoor-open.png"
                x,y=6,2
            [/item]
	    [/else])}
            {IF_VAR bossfight equals yes (
                [then]
                    {SPARTAN_SMOOTH_REPLACE_MUSIC silence.ogg 500 0}
                    {FLASH_WHITE (
                        [sound]
                            name=lightning.ogg
                        [/sound]
                        [kill]
                            side=$hoplite_enemyside
                            [not]
                                id=$unit.id#to avoid some bugs with events
                            [/not]
                            animate=no
                            fire_event=no
                        [/kill]
                    )}
                    [delay]
                        time=500
                    [/delay]
                    {SPARTAN_BOSSMUSICEND}
                    {ACHIEVEMENT_MESSAGE ares}
                [/then]
            )}
            {CLEAR_VARIABLE bossfight}
        [/case]
        [case]
            value=Hoplite_Donovan
            {IF_VAR bossfight equals yes (
                [then]
                    {SPARTAN_SMOOTH_REPLACE_MUSIC silence.ogg 300 0}
                    {FLASH_WHITE (
                        [sound]
                            name=lightning.ogg
                        [/sound]
                        [kill]
                            side=$hoplite_enemyside
                            [not]
                                id=$unit.id#to avoid some bugs with events
                            [/not]
                            animate=no
                            fire_event=no
                        [/kill]
                    )}
                    [delay]
                        time=500
                    [/delay]
                    {SPARTAN_BOSSMUSICEND}
                    {ACHIEVEMENT_MESSAGE donovan}
            {VARIABLE donovan_beaten yes}
            {CLEAR_VARIABLE bossfight}
	    [/then])}
        [/case]
        [case]
            value=Hoplite_Minotaur
	    {REMOVE_IMAGE $unit.x $unit.y}
	    [if]
	    [have_unit]
	       type=Hoplite_Warlock
	    [/have_unit]
	    [then]
	    [/then]
	    [else]
            {VARIABLE duo_beaten yes}
            {IF_VAR bossfight equals yes (
                [then]
                    {CLEAR_VARIABLE bossfight}
                    {SPARTAN_SMOOTH_REPLACE_MUSIC silence.ogg 500 0}
                    {FLASH_WHITE (
                        [sound]
                            name=lightning.ogg
                        [/sound]
                        [kill]
                            side=$hoplite_enemyside
                            [not]
                                id=$unit.id#to avoid some bugs with events
                            [/not]
                            animate=no
                            fire_event=no
                        [/kill]
                    )}
                    [delay]
                        time=500
                    [/delay]
                    {SPARTAN_BOSSMUSICEND}
                    {ACHIEVEMENT_MESSAGE duo}
                [/then]
            )}
	    [/else]
	    [/if]
        [/case]
        [case]
            value=Hoplite_Warlock
	    [if]
	    [have_unit]
	       type=Hoplite_Minotaur
	    [/have_unit]
	    [then]
	    [/then]
	    [else]
            {VARIABLE duo_beaten yes}
            {IF_VAR bossfight equals yes (
                [then]
                    {CLEAR_VARIABLE bossfight}
                    {SPARTAN_SMOOTH_REPLACE_MUSIC silence.ogg 500 0}
                    {FLASH_WHITE (
                        [sound]
                            name=lightning.ogg
                        [/sound]
                        [kill]
                            side=$hoplite_enemyside
                            [not]
                                id=$unit.id#to avoid some bugs with events
                            [/not]
                            animate=no
                            fire_event=no
                        [/kill]
                    )}
                    [delay]
                        time=500
                    [/delay]
                    {SPARTAN_BOSSMUSICEND}
                    {ACHIEVEMENT_MESSAGE duo}
                [/then]
            )}
	    [/else]
	    [/if]
        [/case]
        [case]
            value=Hoplite_Grimreaper
            {VARIABLE reaper_being_unstored yes}
            {CLEAR_VARIABLE reaper_being_unstored}
            {IF_VAR bossfight equals yes (
                [then]
                    {FLASH_WHITE (
                        [sound]
                            name=lightning.ogg
                        [/sound]
                        [kill]
                            side=$hoplite_enemyside
                            [not]
                                id=$unit.id#to avoid some bugs with events
                            [/not]
                            animate=no
                            fire_event=no
                        [/kill]
                    )}
                    [delay]
                        time=500
                    [/delay]
                    {SPARTAN_BOSSMUSICEND}
                    {ACHIEVEMENT_MESSAGE reaper}
       	{IF_VAR Elizabeth_stored.x greater_than 0 (
	[then]
        [unstore_unit]
            variable=Elizabeth_stored
	    find_vacant=yes
	    x,y=6,10
        [/unstore_unit]
	[animate_unit]
		flag=post_teleport
		[filter]
		         id=Elizabeth
		[/filter]
	[/animate_unit]
    {CLEAR_VARIABLE Elizabeth_stored}
	[/then]
	)}
	{IF_VAR Algadur_stored.x greater_than 0 (
	[then]
        [unstore_unit]
            variable=Algadur_stored
	    find_vacant=yes
	    x,y=6,10
        [/unstore_unit]
        {CLEAR_VARIABLE Algadur_stored}
	[/then]
	)}
            [/then]
            )}
            {VARIABLE reaper_beaten yes}
            {CLEAR_VARIABLE bossfight}
            {CLEAR_VARIABLE grimreaper_cooldown}
            {CLEAR_VARIABLE reaperhorde}
        [/case]
    [/switch]
[/event]
[event]
    id=forge_dialog
    first_time_only=no
    [if]
        [variable]
            name=usedforge
            not_equals=yes
        [/variable]
        [and]
            [variable]
                name=bossfight
                not_equals=yes
            [/variable]
        [/and]
        [or]
            {VARIABLE_CONDITIONAL hoplite_debugmenu equals yes}#debug menu bypasses normal forge limitations
        [/or]
        [then]
            {IF_VAR hoplite_upgradesleft greater_than 0 (
                [or]
                    [variable]
                        name=hoplite_upgradesleft1
                        greater_than=0
                    [/variable]
                [/or]
                [or]
                    [variable]
                        name=hoplite_upgradesleft2
                        greater_than=0
                    [/variable]
                [/or]
                [then]
                    [if]
                        [have_unit]
                            id=Hoplite2
                        [/have_unit]
                        [then]
#            [chat]
#                message=$hoplite_upgradesleft1
#            [/chat]
            #note: putting $hoplite_upgradesleft1 directly into REPEAT does not work properly, as the variable is subtracted mid-loop, therefore ugprades happen half as many times as they are supposed to
            {VARIABLE tmp_hoplite_upgraderepeat $hoplite_upgradesleft1}
            {REPEAT $tmp_hoplite_upgraderepeat (
            {HOPLITE_CREATE_FORGE_OPTIONS 1}
            {VARIABLE hoplite_upgrademenu1 yes}
#            [chat]
#                message="message test $hoplite_upgradesleft1"
#            [/chat]
                        [while]
                         [variable]
                            name=hoplite_upgrademenu1
                            equals=yes
                         [/variable]
                         [do]
                            [message]
                                speaker=narrator
                                caption= _ "Forge"
                                message= _ "Choose an upgrade for side 1 ($hoplite_upgradesleft1| upgrades left):"
                                side_for=1
                                [insert_tag]
                                    name=option
                                    variable=hoplite_forgeupgrades_options
                                [/insert_tag]                           
                            [/message]
			 [/do]
			[/while]
            {CLEAR_VARIABLE hoplite_forgeupgrades_options}
            )}
                            [set_variable]
                                name=current_side_2
                                value=yes
                            [/set_variable]
            {VARIABLE tmp_hoplite_upgraderepeat $hoplite_upgradesleft2}
            {REPEAT $tmp_hoplite_upgraderepeat (
            {HOPLITE_CREATE_FORGE_OPTIONS 2}
            {VARIABLE hoplite_upgrademenu2 yes}
#            [chat]
#                message="message test 2 $hoplite_upgradesleft2"
#            [/chat]
                        [while]
                         [variable]
                            name=hoplite_upgrademenu2
                            equals=yes
                         [/variable]
                         [do]
                            [message]
                                speaker=narrator
                                caption= _ "Forge"
                                message= _ "Choose an upgrade for side 2 ($hoplite_upgradesleft2| upgrades left):"
                                side_for=2
                                [insert_tag]
                                    name=option
                                    variable=hoplite_forgeupgrades_options
                                [/insert_tag]                           
                            [/message]
			 [/do]
			[/while]
            {CLEAR_VARIABLE hoplite_forgeupgrades_options}
            )}
                            {CLEAR_VARIABLE current_side_2}
                            {CLEAR_VARIABLE tmp_hoplite_upgraderepeat}
                        [/then]
                        [else]
            {VARIABLE tmp_hoplite_upgraderepeat $hoplite_upgradesleft}
            {REPEAT $tmp_hoplite_upgraderepeat (
            {HOPLITE_CREATE_FORGE_OPTIONS 1}
            {VARIABLE hoplite_upgrademenu yes}
                        [while]
                         [variable]
                            name=hoplite_upgrademenu
                            equals=yes
                         [/variable]
			 [do]
                            [message]
                                speaker=narrator
                                caption= _ "Forge"
                                message= _ "Choose an upgrade ($hoplite_upgradesleft| upgrades left):"
                                [insert_tag]
                                    name=option
                                    variable=hoplite_forgeupgrades_options
                                [/insert_tag]                           
                            [/message]
			 [/do]
			[/while]
            {CLEAR_VARIABLE hoplite_forgeupgrades_options}
            )}
                            {CLEAR_VARIABLE tmp_hoplite_upgraderepeat}
                        [/else]
                    [/if]
                [/then]
                [else]
                    [if]
                        [have_unit]
                            id=Hoplite2
                        [/have_unit]
                        [then]
            {HOPLITE_CREATE_FORGE_OPTIONS 1}
			{VARIABLE hoplite_upgrademenu1 yes}
                        [while]
                         [variable]
                            name=hoplite_upgrademenu1
                            equals=yes
                         [/variable]
			 [do]
                            [message]
                                speaker=narrator
                                caption= _ "Forge"
                                message= _ "Choose an upgrade for side 1:"
                                side_for=1
                                [insert_tag]
                                    name=option
                                    variable=hoplite_forgeupgrades_options
                                [/insert_tag]
                            [/message]
			  [/do]
			 [/while]
                            {CLEAR_VARIABLE hoplite_forgeupgrades_options}
                            [set_variable]
                                name=current_side_2
                                value=yes
                            [/set_variable]
            {HOPLITE_CREATE_FORGE_OPTIONS 2}
			{VARIABLE hoplite_upgrademenu2 yes}
                        [while]
                         [variable]
                            name=hoplite_upgrademenu2
                            equals=yes
                         [/variable]
			 [do]
                            [message]
                                speaker=narrator
                                caption= _ "Forge"
                                message= _ "Choose an upgrade for side 2:"
                                side_for=2
                                [insert_tag]
                                    name=option
                                    variable=hoplite_forgeupgrades_options
                                [/insert_tag]
                            [/message]
			 [/do]
			[/while]
                            {CLEAR_VARIABLE current_side_2}
                            {CLEAR_VARIABLE hoplite_forgeupgrades_options}
                        [/then]
                        [else]
			{VARIABLE hoplite_upgrademenu yes}
            {HOPLITE_CREATE_FORGE_OPTIONS 1}
                        [while]
                         [variable]
                            name=hoplite_upgrademenu
                            equals=yes
                         [/variable]
			 [do]
                            [message]
                                speaker=narrator
                                caption= _ "Forge"
                                message= _ "Choose an upgrade:"
                                [insert_tag]
                                    name=option
                                    variable=hoplite_forgeupgrades_options
                                [/insert_tag]
                            [/message]
			 [/do]
			[/while]
                            {CLEAR_VARIABLE hoplite_forgeupgrades_options}
                        [/else]
                    [/if]
                [/else]
            )}
        [/then]
        [elseif]
            [variable]
                name=usedforge
                not_equals=yes
            [/variable]
            [and]
                [variable]
                    name=bossfight
                    equals=yes
                [/variable]
            [/and]
            [then]
                [message]
                    speaker=narrator
                    message= _ "Forges can't be used during a boss fight!"
                [/message]
            [/then]
        [/elseif]
    [/if]
[/event]
[event]
    id=hoplite_adrenaline
    first_time_only=no
    {IF_VAR adrenaline_unlocked1 equals yes (
        [then]
	{CHATMSG "adrenaline event"}
            [store_unit]
                [filter]
		    id=Hoplite
                [/filter]
                variable=hoplite_andrenalinerush
                kill=no
            [/store_unit]
                {VARIABLE andrenalinerushfilter $hoplite_andrenalinerush.max_hitpoints}
                {VARIABLE_OP andrenalinerushfilter divide 2}
                {VARIABLE_OP andrenalinerushfilter round ceiling}
                {IF_VAR hoplite_andrenalinerush.hitpoints greater_than 0 (
                    [and]
                        [variable]
                            name=hoplite_andrenalinerush.hitpoints
                            less_than_equal_to=$andrenalinerushfilter
                        [/variable]
                    [/and]
                    [and]
                        {VARIABLE_CONDITIONAL hoplite_adrenalinerush_cooldown1 less_than 1}
                    [/and]
                    [then]
                                {VARIABLE adrenalinerush_energybonus $hoplite_maxenergy1}
                                {VARIABLE_OP adrenalinerush_energybonus multiply 0.75}
                                {VARIABLE_OP adrenalinerush_energybonus round floor}
                                {HOPLITE_ADD_ENERGY_BY_SIDE 1 $adrenalinerush_energybonus}
                        				{VARIABLE hoplite_adrenalinerush_cooldown1 1}
                        [unstore_unit]
                            variable=hoplite_andrenalinerush
                            text= _ "Adrenaline rush!"
                            blue=255
                        [/unstore_unit]
			[sound]
			    name=magic-faeriefire.ogg
			[/sound]
			[delay]
			    time=500
			[/delay]
			{IF_VAR bloodlustIII_unlocked1 equals yes (
			[then]
                        {HOPLITE_RAGE_EVENT Hoplite}
                        {VARIABLE bloodlustIII_active1 yes}
                        {VARIABLE hoplite_continue_killstreak_thisturn1 yes}
			[/then])}
                    [/then]
                )}
            {CLEAR_VARIABLE hoplite_adrenalinerush}
            {CLEAR_VARIABLE adrenalinerush_energybonus}
       [/then])}
    [if]
        [have_unit]
	    id=Hoplite2
        [/have_unit]
        [then]
    {IF_VAR adrenaline_unlocked2 equals yes (
        [then]
	{CHATMSG "adrenaline event 2"}
            [store_unit]
                [filter]
		    id=Hoplite2
                [/filter]
                variable=hoplite_andrenalinerush
                kill=no
            [/store_unit]
                {VARIABLE andrenalinerushfilter $hoplite_andrenalinerush.max_hitpoints}
                {VARIABLE_OP andrenalinerushfilter divide 2}
                {VARIABLE_OP andrenalinerushfilter round ceiling}
                {IF_VAR hoplite_andrenalinerush.hitpoints greater_than 0 (
                    [and]
                        [variable]
                            name=hoplite_andrenalinerush.hitpoints
                            less_than_equal_to=$andrenalinerushfilter
                        [/variable]
                    [/and]
                    [and]
                        {VARIABLE_CONDITIONAL hoplite_adrenalinerush_cooldown2 less_than 1}
                    [/and]
                    [then]
                                {VARIABLE adrenalinerush_energybonus $hoplite_maxenergy2}
                                {VARIABLE_OP adrenalinerush_energybonus multiply 0.75}
                                {VARIABLE_OP adrenalinerush_energybonus round floor}
                                {HOPLITE_ADD_ENERGY_BY_SIDE 2 $adrenalinerush_energybonus}
                        				{VARIABLE hoplite_adrenalinerush_cooldown2 1}
                        [unstore_unit]
                            variable=hoplite_andrenalinerush
                            text= _ "Adrenaline rush!"
                            blue=255
                        [/unstore_unit]
			[sound]
			    name=magic-faeriefire.ogg
			[/sound]
			[delay]
			    time=500
			[/delay]
			{IF_VAR bloodlustIII_unlocked2 equals yes (
			[then]
                        {HOPLITE_RAGE_EVENT Hoplite2}
                        {VARIABLE bloodlustIII_active2 yes}
                        {VARIABLE hoplite_continue_killstreak_thisturn2 yes}
			[/then])}
                    [/then]
                )}
            {CLEAR_VARIABLE hoplite_adrenalinerush}
            {CLEAR_VARIABLE adrenalinerush_energybonus}
       [/then])}
	[/then]
    [/if]
[/event]
#define HOPLITE_ARCHER_AI_PART UNITVAR VAR DIR
    {VARIABLE blindspot_index -1}
    {VARIABLE previousloc.x ${UNITVAR}.x}
    {VARIABLE previousloc.y ${UNITVAR}.y}
#    [chat]
#        message={DIR}
#    [/chat]
#code supports enemies with up to 7 range
    {REPEAT 7 (
        [store_locations]
            terrain=!,{SPARTAN_WALL_TERRAIN}
            [filter_adjacent_location]
                x,y=$previousloc.x,$previousloc.y
                adjacent={DIR}
            [/filter_adjacent_location]
            variable=ranged_blindspots{DIR}
            include_borders=no
            mode=append
        [/store_locations]
        {VARIABLE_OP blindspot_index add 1}
        {IF_VAR ranged_blindspots{DIR}[$blindspot_index].x greater_than 0 (
        [then]
            {VARIABLE previousloc.x $ranged_blindspots{DIR}[$blindspot_index].x}
            {VARIABLE previousloc.y $ranged_blindspots{DIR}[$blindspot_index].y}
#only for debugging
#NOTE: rendering [item] is actually the laggiest part of the code, so only enable for testing
#            [item]
#                image="misc/targethex-archer.png~O(20%)"
#                name=spartan_test_{VAR}
#                x,y=$previousloc.x,$previousloc.y
#            [/item]
            [store_locations]
                x,y=$previousloc.x,$previousloc.y
                variable={VAR}
                include_borders=no
                mode=append
            [/store_locations]
        [/then]
        )}
    )}
    {CLEAR_VARIABLE ranged_blindspots{DIR}}
#enddef
[event]
    id=spartan_enemyrangedai_tiles
#    name=side turn end
    name=side turn
    first_time_only=no
    #optimized to happen less times per turn
    [filter_condition]
        {VARIABLE_CONDITIONAL side_number equals $hoplite_enemyside}
    [/filter_condition]
    {CHATMSG "enemy rangedai tiles. current side $side_number| "}
    {CLEAR_VARIABLE spartan_enemyranged_ai_locs}
    [remove_item]
        image=spartan_test_spartan_enemyranged_ai_locs
    [/remove_item]
    [store_unit]
        [filter]
            side=$hoplite_playerside,$hoplite_allyside
        [/filter]
        variable=tmp_hoplite_players_and_allies
        kill=no
    [/store_unit]
    [foreach]
        array=tmp_hoplite_players_and_allies
        index_var=i
        [do]
        {HOPLITE_ARCHER_AI_PART this_item spartan_enemyranged_ai_locs n}
        {HOPLITE_ARCHER_AI_PART this_item spartan_enemyranged_ai_locs ne}
        {HOPLITE_ARCHER_AI_PART this_item spartan_enemyranged_ai_locs nw}
        {HOPLITE_ARCHER_AI_PART this_item spartan_enemyranged_ai_locs s}
        {HOPLITE_ARCHER_AI_PART this_item spartan_enemyranged_ai_locs se}
        {HOPLITE_ARCHER_AI_PART this_item spartan_enemyranged_ai_locs sw}
        [/do]
    [/foreach]
    {CLEAR_VARIABLE tmp_hoplite_players_and_allies}
[/event]
[event]
    id=spartan_allyrangedai_tiles
    name=side turn
    first_time_only=no
    [filter_condition]
        {VARIABLE_CONDITIONAL side_number equals $hoplite_allyside}
        [and]
        [have_unit]
            side=$hoplite_allyside
            ability=hoplite_ranged
            [or]
                side=$hoplite_allyside
                ability=hoplite_semiranged
            [/or]
        [/have_unit]
        [/and]
    [/filter_condition]
    {CHATMSG "ally rangedai tiles"}
    {CLEAR_VARIABLE spartan_allyranged_ai_locs}
    [remove_item]
        image=spartan_test_spartan_allyranged_ai_locs
    [/remove_item]
    [store_unit]
        [filter]
            side=$hoplite_enemyside
            [not]
                ability=spartan_bombfilter
            [/not]
        [/filter]
        variable=tmp_hoplite_enemies
        kill=no
    [/store_unit]
#    [chat]
#        message=_"targethex loop start"
#    [/chat]
    [foreach]
        array=tmp_hoplite_enemies
        index_var=i
        [do]
        {HOPLITE_ARCHER_AI_PART this_item spartan_allyranged_ai_locs n}
        {HOPLITE_ARCHER_AI_PART this_item spartan_allyranged_ai_locs ne}
        {HOPLITE_ARCHER_AI_PART this_item spartan_allyranged_ai_locs nw}
        {HOPLITE_ARCHER_AI_PART this_item spartan_allyranged_ai_locs s}
        {HOPLITE_ARCHER_AI_PART this_item spartan_allyranged_ai_locs se}
        {HOPLITE_ARCHER_AI_PART this_item spartan_allyranged_ai_locs sw}
        [/do]
    [/foreach]
#    [chat]
#        message=_"targethex loop end"
#    [/chat]
    {CLEAR_VARIABLE tmp_hoplite_enemies}
[/event]
[event]
    name=start
    id=hoplite_ally_not_attack_bomb_ai_event
    [modify_ai]
        side=$hoplite_allyside
        action=add
        path=aspect[attacks].facet[]
        [facet]
            invalidate_on_gamestate_change=yes
            [filter_own]
            [/filter_own]
            [filter_enemy]
                [not]
                    ability=spartan_bombfilter
                [/not]
            [/filter_enemy]
        [/facet]
    [/modify_ai]
[/event]
[event]
    name=preload
    id=spartan_ironman_preload
    first_time_only=no
    [filter_condition]
        {VARIABLE_CONDITIONAL spartan_ironman equals yes}
    [/filter_condition]
    {VARIABLE tmp_local_turn_backup $spartan_ironman_latest_turn}
    {SPARTAN_IRONMAN_GET_TURN}
    {IF_VAR tmp_local_turn_backup less_than $spartan_ironman_latest_turn (
    [then]
#        [chat]
#            message=_"savescum attempt detected"
#        [/chat]
        {COLOR_ADJUST -512 -512 -512}
        [hide_unit]
        [/hide_unit]
        [sound]
            name=lich-die.ogg
        [/sound]
        [message]
            speaker=narrator
            caption=_"Ironman Mode"
            message=_"You are trying to load a save file with a lower turn number than the latest one, either by savescumming or trying to load a different ironman mode run. This is not allowed in Ironman mode. Load your latest ironman mode save file to continue!"
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/then]
    )}
[/event]
[event]
    name=new turn
    id=spartan_ironman_update_turn
    first_time_only=no
    [filter_condition]
        {VARIABLE_CONDITIONAL spartan_ironman equals yes}
    [/filter_condition]
    {VARIABLE spartan_ironman_latest_turn $turn_number}
    {SPARTAN_IRONMAN_UPDATE_TURN}
[/event]