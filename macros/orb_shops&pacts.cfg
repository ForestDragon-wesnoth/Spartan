#textdomain wesnoth-Hoplite

#define ORBSHOP_OPTION ID TEXT IMAGE COST EFFECT
        [option]
            image={IMAGE}
            description={TEXT}
            [show_if]
                {VARIABLE_CONDITIONAL {ID}_taken not_equals yes}#can only take it once per shop depth
            [/show_if]
            [command]
                {IF_VAR spartan_orbs_of_insight$side_number| greater_than_equal_to {COST} (
                [then]
                    {VARIABLE_OP spartan_orbs_of_insight$side_number| sub {COST}}
                    {VARIABLE_OP spartan_orbs_of_spent$side_number| add {COST}}#TODO: rework this to be a global variable, and count for an achievement too
                	{EFFECT}
                    {VARIABLE {ID}_taken yes}
                    [set_variables]
                        name=spartan_taken_shop_items
                        mode=append
                        [value]
                            var={ID}_taken#for mentioning duration in info menu, use something like $$array[0].var||
                        [/value]
                    [/set_variables]
                [/then]
                [else]
                [message]
                    speaker=merchant
                    message=_"Unfortunately you do not have enough orbs to buy this."
                [/message]
                [/else]
                )}
            [/command]
        [/option]
#enddef

#define SPARTAN_PACT_OPTION ID DURATION NAME IMAGE DETAILED_DESCRIPTION EFFECT
        [option]
            image={IMAGE}
            description={NAME}
            [show_if]
                [not]
                    {VARIABLE_CONDITIONAL {ID} greater_than 0}#cannot re-apply a pact you already have
                [/not]
            [/show_if]
            [command]
            	[message]
            		speaker=pact_dealer
            		message={DETAILED_DESCRIPTION}_"

Do you want to pick this pact?"
                    [option]
                        description=_"No"
                        image=attacks/blank-attack.png
                    	[command]
                    	[/command]
                    [/option]
                    [option]
                        description=_"Yes"
                        image=attacks/blank-attack.png
                    	[command]
                            #TODO: in multiplayer (except local), make it so that the other player has to confirm too, since it applies to both

                    		{EFFECT}
                            {VARIABLE {ID} {DURATION}}
                            {VARIABLE spartan_pact_taken yes}
                            [set_variables]
                                name=spartan_activepacts#TODO: make this used for infomenu
                                mode=append
                                [value]
                                    var={ID}#for mentioning duration in info menu, use something like $$spartan_activepacts[0].var||
                                    name={NAME}
                                    image={IMAGE}
                                    descr={DETAILED_DESCRIPTION}
                                [/value]
                            [/set_variables]
                    	[/command]
                    [/option]
            	[/message]
            [/command]
        [/option]
#enddef

#define SPARTAN_GENERATE_ACTIVE_PACT_OPTIONS
[foreach]
    array=spartan_activepacts
    index_var=i
    [do]
    [set_variables]
        name=spartan_activepact_options
        mode=append
        [value]
            image=$this_item.image
            description=$this_item.name|
#            [show_if]
#                {VARIABLE_CONDITIONAL $this_item.id|_hintunlocked$side_number equals yes}
#            [/show_if]
            [command]
                [message]
                    speaker=narrator
                    caption=$this_item.name
                    image="portraits/book.png~GS()~BLEND(0,0,0,0.4)"
                    message=$this_item.descr|+_"

This pact has $$this_item.var|| depths left"
                [/message]
            [/command]
        [/value]
    [/set_variables]
    [/do]
[/foreach]
#enddef

#define SPARTAN_CLEAR_ACTIVEPACT VAR
[foreach]
    array=spartan_activepacts
    index_var=i
    [do]
    {IF_VAR this_item.var equals {VAR} (
    [then]
        {VARIABLE tmp_delectpact_index $i}
        [break][/break]#no need to continue the loop after the pact is found
#commented out for now
#        {CLEAR_VARIABLE $this_item.var}#pact duration variable is no longer needed now
    [/then]
    )}
    [/do]
[/foreach]
{IF_VAR tmp_delectpact_index not_equals $emptyvar (
[then]
    {CLEAR_VARIABLE spartan_activepacts[$tmp_delectpact_index]}
    {CLEAR_VARIABLE tmp_delectpact_index}
[/then]
)}
#enddef

#define HOPLITE_ORB_SHOP_EVENTS
[event]
    name=moveto
    id=spartan_orbshop
    first_time_only=no
    [filter]
        side=$hoplite_playerside
        [filter_location]
            [filter]
                id=merchant
            [/filter]
            radius=1
        [/filter_location]
    [/filter]
    {VARIABLE spartan_orbshop_menu yes}
    [while]
    {VARIABLE_CONDITIONAL spartan_orbshop_menu equals yes}
    [do]
    [message]
        speaker=merchant
        message=_"What do you want to buy?

(You currently have <span color='#a456ff'>$spartan_orbs_of_insight$side_number|| Orbs of Insight</span>, carries over between playthroughs)"
        [option]
            image="misc/red-x.png"
            description=_"Return to the Game"
            [command]
                {CLEAR_VARIABLE spartan_orbshop_menu}
            [/command]
        [/option]
        {ORBSHOP_OPTION orbshop_energy _"+15 max energy - costs <span color='#a456ff'>1 orb of insight</span>" "icons/boots_elven.png" 1 (
            [sound]
               name=magic-faeriefire.ogg
            [/sound]
            {IF_VAR hoplite_maxenergy greater_than 0 (
            [then]
                {VARIABLE_OP hoplite_energy add 15}
                {VARIABLE_OP hoplite_maxenergy add 15}
            {SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
            [/then])}
            {IF_VAR hoplite_maxenergy1 greater_than 0 (
            [then]
                {HOPLITE_PLAYERFILTER1b (
                {VARIABLE_OP hoplite_energy1 add 15}
                {VARIABLE_OP hoplite_maxenergy1 add 15}
            {SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
                ) (
                {VARIABLE_OP hoplite_energy2 add 15}
                {VARIABLE_OP hoplite_maxenergy2 add 15}
            {SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
                )}
            [/then])}
        )}
        #TODO: maybe add some custom summons too, instead of just reusing powerful enemies
        {ORBSHOP_OPTION summon_stormtide _"Summon a loyal Stormtide Demon - costs <span color='#a456ff'>1 orb of insight</span>" "units/demons/storm.png~RC(magenta>green)" 1 (
            [sound]
               name=magic-faeriefire.ogg
            [/sound]
            {UNIT $hoplite_allyside (Hoplite_Demonstorm) 4 5 (
            placement=map
            passable=yes
            generate_name=yes
            random_gender=yes
            [modifications]
                {TRAIT_LOYAL}
            [/modifications]
                )}
        )}
        {ORBSHOP_OPTION summon_lich _"Summon a loyal Lich - costs <span color='#a456ff'>2 orbs of insight</span>" "units/undead-necromancers/lich.png~RC(magenta>green)" 2 (
            [sound]
               name=magic-faeriefire.ogg
            [/sound]
            {UNIT $hoplite_allyside (Hoplite_Lich) 4 5 (
            placement=map
            passable=yes
            generate_name=yes
            random_gender=yes
            [modifications]
                {TRAIT_LOYAL}
            [/modifications]
                )}
        )}
        #shop ideas: 
         #maybe some very expensive permanent upgrades that carry over between playthroughs, for example:
          # Chronos Forge: each new playthrough, start with 1 extra forge upgrade - costs 10 orbs (in multiplayer, only affects the specific player that bought it)
          # consider changing starting depths so that they (except sandbox start) need to be bought in the orb shop, maybe like this:
           #depth 11 start: costs 2 orbs, requires being at depth 11 or above in the shop
           #depth 21 start: costs 3 orbs, requires being at depth 21 or above in the shop, and buying the previous start
           #underworld start: costs 4 orbs, requires being at depth 31 or above or in underworld in the shop, and buying the previous start
           #depth 31 start: costs 5 orbs, requires being at depth 31 or above in the shop, and buying the previous start
           #depth 41 start: costs 7 orbs, requires being at depth 41 or above in the shop, and buying the previous start
    [/message]
    [/do]
    [/while]
[/event]
[event]
    name=moveto
    id=spartan_pacts
    first_time_only=no
    [filter]
        side=$hoplite_playerside
        [filter_location]
            [filter]
                id=pact_dealer
            [/filter]
            radius=1
        [/filter_location]
    [/filter]

    [if]
    {VARIABLE_CONDITIONAL spartan_pact_taken equals yes}
    [then]
    [message]
        speaker=pact_dealer
        message=_"I can't offer you another pact yet... If we meet again you can have another one."
    [/message]
    [/then]
    [else]

    #TODO: maybe instead of all pacts being available at once, maybe make the dealer choose 3-5 pacts at random

    [message]
        speaker=pact_dealer
        message=_"Choose a pact..."
        [option]
            image="misc/red-x.png"
            description=_"Return to the Game"
            [command]
            [/command]
        [/option]
        #NOTE: ID matches pact variable here
        {SPARTAN_PACT_OPTION spartan_pact_forbidden_knowledge 3 _"Forbidden Knowledge" icons/book2.png _"Forbidden Knowledge:
<span color='#99ff66'>-gain 1 orb of insight</span>
<span color='#ff6666'>-some ghost enemies will spawn on the next 3 depths</span>" (
            [sound]
               name=magic-dark-big.ogg
            [/sound]
            [sound]
               name={SOUND_LIST:LICH_HIT}
            [/sound]
            {SPARTAN_ADD_INSIGHT_ORB_WITH_POPUP}
        )}
        #TODO: add different icon for pact of patience
        {SPARTAN_PACT_OPTION spartan_pact_patience 3 _"Pact of Patience" icons/book2.png _"Pact of Patience:
<span color='#99ff66'>-after 3 depths, instantly gain 4 forge upgrades</span>
<span color='#ff6666'>-the next 3 depths have no forges</span>" (
            [sound]
               name=magic-dark-big.ogg
            [/sound]
            [sound]
               name={SOUND_LIST:LICH_HIT}
            [/sound]
            {VARIABLE_OP forge_delay sub 3}
        )}

        #TODO: add different icon:
        {SPARTAN_PACT_OPTION spartan_pact_pacifist 5 _"Persuasive Pacifist" icons/book2.png _"Persuasive Pacifist:
<span color='#99ff66'>-at the start of each depth, 33% (rounded up) of enemies becoming your allies, with stronger enemies being more likely to be converted</span>
<span color='#ff6666'>-you are unable to attack</span>
-the pact lasts for the next 5 depths
-pact has no effect in boss depths" (
            [sound]
               name=magic-dark-big.ogg
            [/sound]
            [sound]
               name={SOUND_LIST:LICH_HIT}
            [/sound]
        )}

        #TODO: add different icon:
        #TODO: maybe rework lightweight's energy from flat 20 to 15% of max, so it scales better in late-game (might need to nerf to 15 flat or 10% later tho)
        {SPARTAN_PACT_OPTION spartan_pact_lightweight 5 _"Lightweight" icons/book2.png _"Lightweight:
<span color='#99ff66'>-you gain 1 more movement</span>
<span color='#99ff66'>-recover 20 energy each turn</span>
<span color='#ff6666'>-your max hp is reduced by 40%</span>
-the pact lasts for the next 5 depths" (
            [sound]
               name=magic-dark-big.ogg
            [/sound]
            [sound]
               name={SOUND_LIST:LICH_HIT}
            [/sound]
        [object]
            silent=yes
            duration=forever
            id=pact_lightweight
            take_only_once=no
            [filter]
                id=Hoplite
            [/filter]
            [effect]
                apply_to=movement
                increase=1
            [/effect]
            [effect]
                apply_to=hitpoints
                increase=-40%
                increase_total=-40%
            [/effect]
        [/object]
        #ifdef MULTIPLAYER
        [object]
            silent=yes
            duration=forever
            id=pact_lightweight
            take_only_once=no
            [filter]
                id=Hoplite2
            [/filter]
            [effect]
                apply_to=movement
                increase=1
            [/effect]
            [effect]
                apply_to=hitpoints
                increase=-40%
                increase_total=-40%
            [/effect]
        [/object]
        #endif
        )}


        #TODO: add more pacts
    [/message]
    [/else]
    [/if]
[/event]
[event]
    id=hoplite_depthdescent_pacteffects
    first_time_only=no
    [foreach]
        array=spartan_taken_shop_items
        index_var=i
        [do]
            {CLEAR_VARIABLE $this_item.var}
        [/do]
    [/foreach]
    {CLEAR_VARIABLE spartan_taken_shop_items}

    #to avoid running more code than necessary if there are no pacts taken whatsoever
    [if]
    {VARIABLE_CONDITIONAL spartan_activepacts.length greater_than 0}
    [then]
    {CLEAR_VARIABLE spartan_pact_taken}
    {CLEAR_VARIABLE pacifist_debuff_active_thisdepth}
    {IF_VAR spartan_pact_patience equals 0 (
    [then]
        [message]
            speaker=narrator
            caption=_"???"
            message=_"Now, as agreed in our pact, here are your upgrades..."
        [/message]

        [if]
            [have_unit]
                id=Hoplite2
            [/have_unit]
            [then]
                {VARIABLE hoplite_upgradesleft1 4}
                {VARIABLE hoplite_upgradesleft2 4}
            [/then]
            [else]
                {VARIABLE hoplite_upgradesleft 4}
            [/else]
        [/if]

        {VARIABLE spartan_runesmithupgrade yes}#normal forge can still be used after pact upgrade
        [fire_event]
            id=forge_dialog
        [/fire_event]
        {CLEAR_VARIABLE spartan_runesmithupgrade}
        {SPARTAN_CLEAR_ACTIVEPACT spartan_pact_patience}
    [/then]
    )}
    #important: this must go into negative values, otherwise the patience effect will trigger over and over sometimes
    {IF_VAR spartan_pact_patience greater_than -1 (
    [then]
    {VARIABLE_OP spartan_pact_patience sub 1}
    [/then]
    )}
    #no effect in in shop depths
    {IF_VAR spartan_pact_forbidden_knowledge greater_than 0 (
    [then]
        [if]
        {VARIABLE_CONDITIONAL hoplite_biome not_equals rarebiome_mysterious_shop}
        [then]

        #for scatter units, the unit list is in order instead of random, so later depths will slowly start adding lvl2 shadows
        {SCATTER_UNITS "$(1 + $hoplite_depth / 6)" Hoplite_Poltergeist,Hoplite_Poltergeist,Hoplite_Poltergeist,Hoplite_Shadow,Hoplite_Poltergeist,Hoplite_Shadow 0 (
            terrain=!,{SPARTAN_WALL_TERRAIN}
            [not]
                [filter]
                [/filter]
                [or]
                   x=4-8
                   y=8-10
                [/or]
            [/not]
        ) (
            side=$hoplite_enemyside
        )}
        [sound]
            name=wail.wav
        [/sound]
        [/then]
        [/if]
        {VARIABLE_OP spartan_pact_forbidden_knowledge sub 1}
    [/then]
    [else]
    [/else]
    )}
    {IF_VAR spartan_pact_forbidden_knowledge equals 0 (
    [then]
        {SPARTAN_CLEAR_ACTIVEPACT spartan_pact_forbidden_knowledge}
    [/then]
    )}

    {IF_VAR spartan_pact_pacifist greater_than 0 (
    [then]
        #no effect on boss or shop levels:
        [if]
        {VARIABLE_CONDITIONAL hoplite_biome not_equals rarebiome_mysterious_shop}
        [not]
            [have_unit]
                ability=hoplite_boss
                side=$hoplite_enemyside
            [/have_unit]
        [/not]
        [then]
        [store_unit]
            [filter]
                side=$hoplite_enemyside
                [not]
                    ability=hoplite_boss
                [/not]
            [/filter]
            variable=hoplite_converted_enemies
            kill=no
        [/store_unit]
#        {VARIABLE tmp_enemies_to_convert $hoplite_converted_enemies.length}
#        {VARIABLE_OP tmp_enemies_to_convert divide 3}
#        {VARIABLE tmp_enemies_to_convert divide 3}

        #choosing a third of enemies (rounded up) from the end of the list, since the strongest enemies are usually there

        {VARIABLE tmp_pacifist_startindex $hoplite_converted_enemies.length}
        {VARIABLE_OP tmp_pacifist_startindex divide 3}
        {VARIABLE_OP tmp_pacifist_startindex multiply 2}
        {VARIABLE_OP tmp_pacifist_startindex round floor}#rounding down the start index, so the player gets more converted enemies

        [while]
            {VARIABLE_CONDITIONAL tmp_pacifist_startindex less_than $hoplite_converted_enemies.length}
            [do]
                {MODIFY_UNIT id=$hoplite_converted_enemies[$tmp_pacifist_startindex].id side $hoplite_allyside}
                [floating_text]
                   x,y=$hoplite_converted_enemies[$tmp_pacifist_startindex].x,$hoplite_converted_enemies[$tmp_pacifist_startindex].y
                   text="<span color='#00ff00'>" + _ "persuaded!" + "</span>"
                [/floating_text]
                {VARIABLE_OP tmp_pacifist_startindex add 1}
            [/do]
        [/while]

#scrapped code:
#        [foreach]
#            array=hoplite_converted_enemies
#            index_var=i
#            [do]
#                {RANDOM 1..3}
#                {IF_VAR random equals 1 (
#                [then]
#                    {MODIFY_UNIT id=$this_item.id side $hoplite_allyside}
#                    [floating_text]
#                       x,y=$this_item.x,$this_item.y
#                       text="<span color='#00ff00'>" + _ "persuaded!" + "</span>"
#                    [/floating_text]
#                [/then]
#                )}
#            [/do]
#        [/foreach]
        [sound]
            name={SOUND_LIST:HOLY}
        [/sound]
        {VARIABLE pacifist_debuff_active_thisdepth yes}
        {CLEAR_VARIABLE hoplite_converted_enemies}
        [/then]
        [/if]
        {VARIABLE_OP spartan_pact_pacifist sub 1}
    [/then]
    )}
    {IF_VAR pacifist_debuff_active_thisdepth not_equals yes (
    #to prevent the pact being deleted on shop/boss levels
    [not]
        {VARIABLE_CONDITIONAL spartan_pact_pacifist greater_than 0}
    [/not]
    [then]
        {SPARTAN_CLEAR_ACTIVEPACT spartan_pact_pacifist}
    [/then]
    )}

    {IF_VAR spartan_pact_lightweight equals 0 (
    [then]
        [remove_object]
            id=Hoplite
            object_id=pact_lightweight
        [/remove_object]
        #ifdef MULTIPLAYER
        [remove_object]
            id=Hoplite2
            object_id=pact_lightweight
        [/remove_object]
        #endif

        {SPARTAN_CLEAR_ACTIVEPACT spartan_pact_lightweight}
    [/then]
    )}
    #important: this must go into negative values, otherwise the patience effect will trigger over and over sometimes
    {IF_VAR spartan_pact_lightweight greater_than -1 (
    [then]
    {VARIABLE_OP spartan_pact_lightweight sub 1}
    [/then]
    )}

    [/then]
    [/if]
[/event]
[event]
    name=turn refresh
    id=spartan_pact_pacifist_debuff
    first_time_only=no
    [filter_condition]
        {VARIABLE_CONDITIONAL pacifist_debuff_active_thisdepth equals yes}
    [/filter_condition]
    {MODIFY_UNIT side=$hoplite_playerside attacks_left 0}
[/event]
[event]
    name=turn refresh
    id=spartan_pact_lightweight_energyrestore
    first_time_only=no
    [filter_condition]
        {VARIABLE_CONDITIONAL spartan_pact_lightweight greater_than 0}
        [and]
            [have_unit]
                side=$hoplite_playerside
                [and]
                    side=$side_number
                [/and]
            [/have_unit]
        [/and]
    [/filter_condition]
    {HOPLITE_ADD_ENERGY_BY_SIDE $side_number 20}
[/event]
#enddef