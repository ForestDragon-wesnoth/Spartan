#textdomain wesnoth-Hoplite

#define HOPLITE_LAVA_EXPLOSION_KILL ATTACKER_UNIT_VAR
    [object]
        silent=yes
        duration=forever
        [filter]
            x,y=$knockback_target_hex.x,$knockback_target_hex.y
            side=$hoplite_enemyside
        [/filter]
        [effect]
            apply_to=new_animation
            [extra_anim]
                flag=explode
                [missile_frame]
                    halo="projectiles/fireball-impact-[1~16].png:60"
                    offset=0.0
                    auto_vflip=no
                [/missile_frame]
                [frame]
                    alpha=1~0:200,0
                    sound=fire.wav
                [/frame]
            [/extra_anim]
        [/effect]
    [/object]

    [animate_unit]
        flag=explode
        [filter]
            x,y=$knockback_target_hex.x,$knockback_target_hex.y
            side=$hoplite_enemyside
        [/filter]
    [/animate_unit]
    [kill]
        x,y=$knockback_target_hex.x,$knockback_target_hex.y
        side=$hoplite_enemyside
        animate=no
        fire_event=yes
        [secondary_unit]
            id=${ATTACKER_UNIT_VAR}.id
        [/secondary_unit]
    [/kill]
    {VARIABLE hoplite_killedenemy_thisturn yes}
    #note: if I decide to give full knockback to allies, maybe add an exception for allies here
    {VARIABLE_OP shieldbash_progress${ATTACKER_UNIT_VAR}.side add 1}
    {IF_VAR shieldbash_progress${ATTACKER_UNIT_VAR}.side equals 10 (
        [then]
            {ACHIEVEMENT_MESSAGE_LONE shieldbash ${ATTACKER_UNIT_VAR}.side}
        [/then]
    )}
    [fire_event]
       id=hoplite_death_event
    [/fire_event]
#enddef

#define HOPLITE_KNOCKBACK_CODE UNITVAR ATTACKER_UNIT_VAR DIRECTION
    {VARIABLE tmp_origloc_x ${UNITVAR}.x}
    {VARIABLE tmp_origloc_y ${UNITVAR}.y}
    [store_locations]
        [not]
            [filter]
            [/filter]
        [/not]

        [filter_adjacent_location]
            x,y=$tmp_origloc_x,$tmp_origloc_y
            adjacent={DIRECTION}
        [/filter_adjacent_location]

        variable=knockback_target_hex
    [/store_locations]

    [if]
        [variable]
            name=knockback_target_hex.length
            greater_than=0
        [/variable]
        [and]
            [have_location]
                x,y=$knockback_target_hex.x,$knockback_target_hex.y
#                terrain=!,Qx**
            [/have_location]
        [/and]

        [then]
            [move_unit]
                id=${UNITVAR}.id
                to_x,to_y=$knockback_target_hex.x,$knockback_target_hex.y
                check_passability=no
            [/move_unit]

            [if]
                [have_unit]
                    id=${UNITVAR}.id
                    [filter_location]
                        terrain=Xu*^*,Xo*^*
                    [/filter_location]
                [/have_unit]
#                [and]
#                    [variable]
#                        name=damagebashedthisturn
#                        not_equals=yes
#                    [/variable]
#                [/and]
                [then]
                    {VARIABLE tmp_bashdamage 5}
                    {VARIABLE_OP tmp_bashdamage multiply $tmp_times_left}
                    {QUAKE "rumble.ogg"}
                    {IF_VAR tmp_bashdamage greater_than_equal_to ${UNITVAR}.hitpoints (
                    [then]
                    [kill]
                        x,y=$knockback_target_hex.x,$knockback_target_hex.y
                        side=$hoplite_enemyside
                        animate=yes
                        fire_event=yes
                        [secondary_unit]
                            id=${ATTACKER_UNIT_VAR}.id
                        [/secondary_unit]
                    [/kill]
                    [fire_event]
                       id=hoplite_death_event
                    [/fire_event]
                    [/then]
                    [else]
                    [move_unit]
                        id=${UNITVAR}.id
                        to_x,to_y=$tmp_origloc_x,$tmp_origloc_y
                        check_passability=yes
                    [/move_unit]
                    [harm_unit]
                        [filter]
                            id=${UNITVAR}.id
                        [/filter]
                        [filter_second]
                            id=${ATTACKER_UNIT_VAR}.id
                        [/filter_second]
                        amount=$tmp_bashdamage
                        damage_type=impact
                        fire_event=no
                        kill=no
                        animate=defender
                        delay=0
                        experience=no
                    [/harm_unit]                
                    {VARIABLE damagebashedthisturn yes}
                    [/else]
                    )}
                [/then]
                [elseif]
                    [have_unit]
                        id=${UNITVAR}.id
                        x,y=$knockback_target_hex.x,$knockback_target_hex.y
                        [not]
                            ability=hoplite_flying
                        [/not]
                        [not]
                            ability=hoplite_boss
                        [/not]
                        [filter_location]
                            terrain=Qlf^*
                        [/filter_location]
                    [/have_unit]
                    [then]
                        {HOPLITE_LAVA_EXPLOSION_KILL {ATTACKER_UNIT_VAR}}
                    [/then]
                [/elseif]
                #if a boss is pushed into lava, it just takes some damage instead of being instakilled
                [elseif]
                    [have_unit]
                        id=${UNITVAR}.id
                        x,y=$knockback_target_hex.x,$knockback_target_hex.y
                        ability=hoplite_boss
                        [not]
                            ability=hoplite_flying
                        [/not]
                        [filter_location]
                            terrain=Qlf^*
                        [/filter_location]
                    [/have_unit]
                    [then]
                    {VARIABLE tmp_bashdamage 10}
                    {VARIABLE_OP tmp_bashdamage multiply $tmp_times_left}
                    {IF_VAR tmp_bashdamage greater_than_equal_to ${UNITVAR}.hitpoints (
                    [then]
                        {HOPLITE_LAVA_EXPLOSION_KILL {ATTACKER_UNIT_VAR}}
                    [/then]
                    [else]
                        [sound]
                            name=fire.wav
                        [/sound]
                        [move_unit]
                            id=${UNITVAR}.id
                            to_x,to_y=$tmp_origloc_x,$tmp_origloc_y
                            check_passability=yes
                        [/move_unit]
                        [harm_unit]
                            [filter]
                                id=${UNITVAR}.id
                            [/filter]
                            [filter_second]
                                id=${ATTACKER_UNIT_VAR}.id
                            [/filter_second]
                            amount=$tmp_bashdamage
                            damage_type=fire
                            fire_event=no
                            kill=no
                            animate=defender
                            delay=0
                            experience=no
                        [/harm_unit]    
                        {VARIABLE damagebashedthisturn yes}
                    [/else])}
                    [/then]
                [/elseif]
                [elseif]
                    [have_unit]
                        id=${UNITVAR}.id
                        x,y=$knockback_target_hex.x,$knockback_target_hex.y
                        [not]
                            ability=hoplite_flying
                            [or]
                                ability=hoplite_boss
                            [/or]
                        [/not]
                        [filter_location]
                            terrain=Qx*^*#bashing into a pit
                        [/filter_location]
                    [/have_unit]
                    [then]
                    [sound]
                        name=falling_enemy.ogg
                    [/sound]
                    [kill]
                        x,y=$knockback_target_hex.x,$knockback_target_hex.y
                        side=$hoplite_enemyside
                        animate=no
                        fire_event=yes
                        [secondary_unit]
                            id=${ATTACKER_UNIT_VAR}.id
                        [/secondary_unit]
                    [/kill]
                    {VARIABLE hoplite_killedenemy_thisturn yes}
                    #note: if I decide to give full knockback to allies, maybe add an exception for allies here
                    {VARIABLE_OP shieldbash_progress${ATTACKER_UNIT_VAR}.side add 1}
                    {IF_VAR shieldbash_progress${ATTACKER_UNIT_VAR}.side equals 10 (
                        [then]
                            {ACHIEVEMENT_MESSAGE_LONE shieldbash ${ATTACKER_UNIT_VAR}.side}
                        [/then]
                    )}
                    [fire_event]
                       id=hoplite_death_event
                    [/fire_event]
                    [/then]
                [/elseif]
                [elseif]
                    [have_unit]
                        id=${UNITVAR}.id
                        x,y=$knockback_target_hex.x,$knockback_target_hex.y
                        [not]
                            ability=hoplite_swimmer
                            [or]
                                ability=hoplite_flying
                            [/or]
                        [/not]
                        [filter_location]
                            terrain=W*^*
                            [not]
                                terrain=Wwf^*#ford is unaffected
                            [/not]
                        [/filter_location]
                    [/have_unit]
                    [then]
                    {VARIABLE tmp_bashdamage 5}
                    {VARIABLE_OP tmp_bashdamage multiply $tmp_times_left}
                    [sound]
                        name=water-blast.wav
                    [/sound]
                    {IF_VAR tmp_bashdamage greater_than_equal_to ${UNITVAR}.hitpoints (
                    [then]
                    [kill]
                        x,y=$knockback_target_hex.x,$knockback_target_hex.y
                        side=$hoplite_enemyside
                        animate=yes
                        fire_event=yes
                    [/kill]
                    [fire_event]
                       id=hoplite_death_event
                    [/fire_event]
                    [/then]
                    [else]
                    [move_unit]
                        id=${UNITVAR}.id
                        to_x,to_y=$tmp_origloc_x,$tmp_origloc_y
                        check_passability=yes
                    [/move_unit]
                    [harm_unit]
                        [filter]
                            id=${UNITVAR}.id
                        [/filter]
                        [filter_second]
                            id=${ATTACKER_UNIT_VAR}.id
                        [/filter_second]
                        amount=$tmp_bashdamage
                        damage_type=cold
                        fire_event=no
                        kill=no
                        animate=defender
                        delay=0
                        experience=no
                    [/harm_unit]                
                    {VARIABLE damagebashedthisturn yes}
                    [/else]
                    )}
                    [/then]
                [/elseif]
            [/if]

            [if]
            [have_unit]
                id=${UNITVAR}.id
            [/have_unit]
            [then]

            [store_unit]
                [filter]
                    id=${UNITVAR}.id
                [/filter]
                kill=no
                variable=knockbacked
            [/store_unit]
            {VARIABLE knockbacked.status.slowed yes}
            [unstore_unit]
                variable=knockbacked
                text= _ "Knockback!"
                {COLOR_HARM}
                find_vacant=no
            [/unstore_unit]

            {CLEAR_VARIABLE knockbacked}
            [/then]
            [/if]

        [/then]
    [/if]

    [if]
#        {VARIABLE_CONDITIONAL damagebashedthisturn not_equals yes}
        [have_unit]
            id=${UNITVAR}.id
            x,y=$knockback_target_hex.x,$knockback_target_hex.y
        [/have_unit]
        [then]
            {VARIABLE tmp_knockback_succeeded yes}
#            [chat]
#                message=$knockback_target_hex.x|,$knockback_target_hex.y|
#            [/chat]
        [/then]
        [else]
            {VARIABLE tmp_knockback_succeeded no}
        [/else]
    [/if]


    {CLEAR_VARIABLE knockback_direction,knockback_target_hex,damagebashedthisturn}
#enddef

#define HOPLITE_KNOCKBACK_CHAINBASH UNITVAR ATTACKER_UNIT_VAR DIRECTION
    [if]
    [have_unit]
        [filter_location]
            [filter_adjacent_location]
                [filter]
                    x,y=${UNITVAR}.x,${UNITVAR}.y
                [/filter]
                adjacent={DIRECTION}
            [/filter_adjacent_location]
        [/filter_location]
    [/have_unit]
    [and]
    [have_unit]
        id=${UNITVAR}.id
        [not]
            ability=knockback_immune
        [/not]
    [/have_unit]
    [/and]
    [then]
        [store_unit]
            [filter]
                [filter_location]
                    [filter_adjacent_location]
                        [filter]
                            x,y=${UNITVAR}.x,${UNITVAR}.y
                        [/filter]
                        adjacent={DIRECTION}
                    [/filter_adjacent_location]
                [/filter_location]
                [not]
                    ability=knockback_immune
                [/not]
            [/filter]
            variable=tmp_chainbashed_unit
            kill=no
        [/store_unit]
        #saving these variables so they don't affect the knockback of the previous unit
        {VARIABLE tmp_times_left_orig $tmp_times_left}
        {VARIABLE tmp_knockback_succeeded_orig $tmp_knockback_succeeded}
        {VARIABLE_OP tmp_times_left sub 1}#to reduce the power of collision damage
        {IF_VAR tmp_times_left greater_than_equal_to $tmp_chainbashed_unit.abilities.knockback_resistance.value (
        [then]
            {IF_VAR tmp_times_left greater_than 0 (
            [then]
                {HOPLITE_KNOCKBACK_CODE tmp_chainbashed_unit {ATTACKER_UNIT_VAR} {DIRECTION}}
            [/then]
            [else]
                [modify_unit]
                    [filter]
                        id=$tmp_chainbashed_unit.id
                    [/filter]
                    [status]
                        slowed=yes
                    [/status]
                [/modify_unit]
            [/else]
            )}
        [/then]
        )}
        {VARIABLE tmp_times_left $tmp_times_left_orig}
        {VARIABLE tmp_knockback_succeeded $tmp_knockback_succeeded_orig}
    [/then]
    [/if]
#enddef


#define HOPLITE_KNOCKBACK_CODE_REPEATED TIMES UNITVAR ATTACKER_UNIT_VAR DIRECTION
    {VARIABLE tmp_knockback_succeeded yes}
    {VARIABLE tmp_times {TIMES}}
    {VARIABLE_OP tmp_times sub ${UNITVAR}.abilities.knockback_resistance.value}
    {VARIABLE tmp_times_left $tmp_times}

    {IF_VAR tmp_times_left greater_than_equal_to ${UNITVAR}.abilities.knockback_resistance.value (
    [then]

    [modify_unit]
        [filter]
            id=${UNITVAR}.id
        [/filter]
        [status]
            slowed=yes
        [/status]
    [/modify_unit]

    [/then])}

    [while]
        [variable]
            name=tmp_times_left
            greater_than=0
        [/variable]

        [do]
            [store_unit]
                [filter]
                    id=${UNITVAR}.id
                [/filter]
                variable=tmp_knockback_target#storing the unit again to refresh the coordinates
                kill=no
            [/store_unit]
            {HOPLITE_KNOCKBACK_CHAINBASH tmp_knockback_target {ATTACKER_UNIT_VAR} {DIRECTION}}
            {IF_VAR tmp_knockback_succeeded equals yes (
            [then]
                {HOPLITE_KNOCKBACK_CODE tmp_knockback_target {ATTACKER_UNIT_VAR} {DIRECTION}}
            [/then]
            )}
            {VARIABLE_OP tmp_times_left sub 1}
            {CLEAR_VARIABLE tmp_knockback_target}
        [/do]
    [/while]

    {CLEAR_VARIABLE tmp_knockback_succeeded}
    {CLEAR_VARIABLE tmp_times}
    {CLEAR_VARIABLE tmp_times_left}
#enddef

#define HOPLITE_KNOCKBACK_LESSER_CODE UNITVAR ATTACKER_UNIT_VAR DIRECTION
    {VARIABLE tmp_origloc_x ${UNITVAR}.x}
    {VARIABLE tmp_origloc_y ${UNITVAR}.y}
    [store_locations]
        [not]
            [filter]
            [/filter]
        [/not]

        [filter_adjacent_location]
            x,y=$tmp_origloc_x,$tmp_origloc_y
            adjacent={DIRECTION}
        [/filter_adjacent_location]

        variable=knockback_target_hex
    [/store_locations]

    [if]
        [variable]
            name=knockback_target_hex.length
            greater_than=0
        [/variable]
        [and]
            [have_location]
                x,y=$knockback_target_hex.x,$knockback_target_hex.y
                terrain=!,Qx*^*
            [/have_location]
        [/and]

        [then]
            [move_unit]
                id=${UNITVAR}.id
                to_x,to_y=$knockback_target_hex.x,$knockback_target_hex.y
                check_passability=no
            [/move_unit]

            [if]
                [have_unit]
                    id=${UNITVAR}.id
                    [filter_location]
                        terrain=Xu*^*,Xo*^*
                    [/filter_location]
                [/have_unit]
#                [and]
#                    [variable]
#                        name=damagebashedthisturn
#                        not_equals=yes
#                    [/variable]
#                [/and]
                [then]
                    [move_unit]
                        id=${UNITVAR}.id
                        to_x,to_y=$tmp_origloc_x,$tmp_origloc_y
                        check_passability=yes
                    [/move_unit]
        {IF_VAR damagebashedthisturn not_equals yes (
        [then]
                    [harm_unit]
                        [filter]
                            id=${UNITVAR}.id
                        [/filter]
                        [filter_second]
                            id=${ATTACKER_UNIT_VAR}.id
                        [/filter_second]
                        amount=5
                        damage_type=impact
                        fire_event=yes
                        animate=defender
                        delay=0
                        experience=no
                    [/harm_unit]                
                    {VARIABLE damagebashedthisturn yes}
        [/then])}
                [/then]
                [elseif]
                    [have_unit]
                        id=${UNITVAR}.id
                        x,y=$knockback_target_hex.x,$knockback_target_hex.y
                        [not]
                            ability=hoplite_flying
                        [/not]
                        [filter_location]
                            terrain=Qlf^*
                        [/filter_location]
                    [/have_unit]
                    [then]
                    {IF_VAR damagebashedthisturn not_equals yes (
                    [then]
                        [sound]
                            name=fire.wav
                        [/sound]
                        [move_unit]
                            id=${UNITVAR}.id
                            to_x,to_y=$tmp_origloc_x,$tmp_origloc_y
                            check_passability=yes
                        [/move_unit]
                        [harm_unit]
                            [filter]
                                id=${UNITVAR}.id
                            [/filter]
                            [filter_second]
                                id=${ATTACKER_UNIT_VAR}.id
                            [/filter_second]
                            amount=10
                            damage_type=fire
                            fire_event=yes
                            animate=defender
                            delay=0
                            experience=no
                        [/harm_unit]
                    {VARIABLE damagebashedthisturn yes}
                    [/then])}
                    [/then]
                [/elseif]
                #TODO: edit this filter so that units able to walk on water are knocked back normally
                [elseif]
                    [have_unit]
                        id=${UNITVAR}.id
                        x,y=$knockback_target_hex.x,$knockback_target_hex.y
                        [not]
                            ability=hoplite_swimmer
                            [or]
                                ability=hoplite_flying
                            [/or]
                        [/not]
                        [filter_location]
                            terrain=W*^*
                            [not]
                                terrain=Wwf^*#ford is unaffected
                            [/not]
                        [/filter_location]
                    [/have_unit]
                    [then]
                    {IF_VAR damagebashedthisturn not_equals yes (
                    [then]
                        [sound]
                            name=water-blast.wav
                        [/sound]
                        [move_unit]
                            id=${UNITVAR}.id
                            to_x,to_y=$tmp_origloc_x,$tmp_origloc_y
                            check_passability=yes
                        [/move_unit]
                        [harm_unit]
                            [filter]
                                id=${UNITVAR}.id
                            [/filter]
                            [filter_second]
                                id=${ATTACKER_UNIT_VAR}.id
                            [/filter_second]
                            amount=5
                            damage_type=cold
                            fire_event=yes
                            animate=defender
                            delay=0
                            experience=no
                        [/harm_unit]
                    {VARIABLE damagebashedthisturn yes}
                    [/then])}
                    [/then]
                [/elseif]
            [/if]

            [if]
            [have_unit]
                id=${UNITVAR}.id
            [/have_unit]
            [then]

            [store_unit]
                [filter]
                    id=${UNITVAR}.id
                [/filter]
                kill=no
                variable=knockbacked
            [/store_unit]
            [unstore_unit]
                variable=knockbacked
                text= _ "Knockback!"
                find_vacant=no
                {COLOR_HARM}
            [/unstore_unit]

            {CLEAR_VARIABLE knockbacked}
            [/then]
            [/if]
        [/then]
    [/if]

    {CLEAR_VARIABLE knockback_direction,knockback_target_hex,damagebashedthisturn}
#enddef


#define WEAPON_SPECIAL_KNOCKBACK
    [dummy]
        id=knockback
        name= _ "knockback"
        description=_ "When a unit is hit with a knockback attack, it is immediately pushed back one hex away from the attacker. Units cannot be knocked back into an occupied hex, out of villages or onto terrain they normally could not move to. Non-flying enemies pushed into lava/chasms will be killed, and ones pushed into a wall will receive impact damage. The ability also slows the target for one turn. Knocking an enemy into another enemy slows them both."
    [/dummy]
[/specials]
[/attack]

[event]
    name=attacker hits
    id=spartan_knockback
    first_time_only=no

    [filter_attack]
        special_id=knockback
    [/filter_attack]

#not needed due to 0 base damage now
#    [if]
#        [variable]
#            name=weapon.damage
#            less_than=2
#        [/variable]
#        [then]
#            [heal_unit]
#                [filter]
#                    id=$second_unit.id
#                [/filter]
#                amount=1
#                animate=no
#                restore_statuses=no
#            [/heal_unit]
#    [/then]
#    [/if]

    [if]
        [variable]
            name=second_unit.hitpoints
            greater_than=0
        [/variable]
        [and]
        [have_unit]
            id=$second_unit.id
            [not]
                ability=knockback_immune
            [/not]
        [/have_unit]
        [/and]

        [then]
            {HOPLITE_KNOCKBACK_CODE_REPEATED $hoplite_shield_distance$unit.side| second_unit unit -$unit.facing}
        [/then]
    [/if]

	[if]
#ifdef MULTIPLAYER
            {HOPLITE_PLAYERFILTER_VAR2 (
                [variable]
                    name=sweepingbash_unlocked1
                    equals=yes
                [/variable]
            ) (
                [variable]
                    name=sweepingbash_unlocked2
                    equals=yes
                [/variable]
            )}
#else
            [variable]
                name=sweepingbash_unlocked
                equals=yes
            [/variable]
#endif
        [then]
    [store_unit]
        [filter]
	    side=$hoplite_enemyside
        [not]
          ability=knockback_immune
        [/not]
        [filter_location]
            [filter_adjacent_location]
                x,y=$x2,$y2
            [/filter_adjacent_location]
            [filter_adjacent_location]
                x,y=$x1,$y1
            [/filter_adjacent_location]
        [/filter_location]
        [/filter]
        variable=bystander
        kill=no
    [/store_unit]
        [/then]
	[/if]

    [if]
#ifdef MULTIPLAYER
            {HOPLITE_PLAYERFILTER_VAR2 (
                [variable]
                    name=spinningbash_unlocked1
                    equals=yes
                [/variable]
            ) (
                [variable]
                    name=spinningbash_unlocked2
                    equals=yes
                [/variable]
            )}
#else
            [variable]
                name=spinningbash_unlocked
                equals=yes
            [/variable]
#endif
        [then]
        {CLEAR_VARIABLE bystander}
    [store_unit]
        [filter]
        side=$hoplite_enemyside
        [not]
          ability=knockback_immune
        [/not]
        [filter_location]
            [filter_adjacent_location]
                x,y=$x1,$y1
            [/filter_adjacent_location]
        [/filter_location]
        [/filter]
        variable=bystander
        kill=no
    [/store_unit]
        [/then]
    [/if]

    [foreach]
        array=bystander
        index_var=a
        [do]

            [if]
                [variable]
                    name=this_item.hitpoints
                    greater_than=0
                [/variable]
        
                [then]
                    {SPARTAN_GETDIR_REVERSED $x1 $y1 $this_item.x $this_item.y tmp_bystander_dir}
#                    [chat]
#                        message=$tmp_bystander_dir
#                    [/chat]
                    {HOPLITE_KNOCKBACK_CODE_REPEATED $hoplite_shield_distance$unit.side| this_item unit $tmp_bystander_dir}

                    {CLEAR_VARIABLE tmp_bystander_dir}
                [/then]
            [/if]

        [/do]
    [/foreach]
    {CLEAR_VARIABLE bystander}
[/event]
[event]
    name=attack end
    first_time_only=no

    [filter_attack]
        special_id=knockback
    [/filter_attack]
    {VARIABLE shieldup_id $unit.id}
    [fire_event]
       id=hoplite_shieldup
    [/fire_event]
    {CLEAR_VARIABLE shieldup_id}
[/event]
#TODO: clean up this code:
[event]
    id=hoplite_shieldup
    first_time_only=no
    {CHATMSG _"shieldup event"}
#    [message]
#        speaker=narrator
#	message=_"shieldup activated"
#    [/message]

    [object]
        silent=yes
        duration=turn
        id=shieldup
        take_only_once=no
        [filter]
            id=$shieldup_id
        [/filter]
        [effect]
            apply_to=new_ability
            [abilities]
            [resistance]
                id=shieldup_buff
                add=$shieldup_resistance$side_number
                max_value=$shieldup_resistance_cap$side_number
                # applies to any type if we leave it out
                #apply_to=blade,pierce,impact,fire,cold,arcane
                [filter_base_value]
#                    greater_than=0
                    less_than=70
                [/filter_base_value]
                affect_self=yes
            [/resistance]
            [/abilities]
        [/effect]
    [/object]
    {VARIABLE shieldup_active yes}
[/event]

[+attack]
    [+specials]
#enddef

#define WEAPON_SPECIAL_KNOCKBACK_LESSER
    [dummy]
        id=knockback_enemy
        name= _ "lesser knockback"
        description=_ "Like knockback, but doesn't slow/pushing into lava doesn't kill, only dealing 10 damage."
    [/dummy]
[/specials]
[/attack]

[event]
    name=attacker hits
    id=spartan_lesser_knockback
    first_time_only=no

    [filter_attack]
        special_id=knockback_enemy
    [/filter_attack]

    [filter_second]
        [not]
            ability=knockback_immune
        [/not]
    [/filter_second]
#no longer needed due to 0 base damage
#    [if]
#        [variable]
#            name=weapon.damage
#            less_than=2
#        [/variable]
#        [then]
#            [heal_unit]
#                [filter]
#                    id=$second_unit.id
#                [/filter]
#                amount=1
#                animate=no
#                restore_statuses=no
#            [/heal_unit]
#	[/then]
#    [/if]

    [if]
        [variable]
            name=second_unit.hitpoints
            greater_than=0
        [/variable]

        [then]
            {HOPLITE_KNOCKBACK_LESSER_CODE second_unit unit -$unit.facing}
        [/then]
    [/if]
[/event]
[+attack]
    [+specials]
#enddef

#define ABILITY_LEAPING
    [teleport]
        id=hoplite_leap
        name= _ ""
        female_name= _ ""
        description= _ ""
        [tunnel]
            id=hoplite_leap
            [source]
                terrain=!,Xu*^*,Xo*^*,Q*^*
                [not]
                    [filter]
                        [not]
                            id=$teleport_unit.id
                        [/not]
                    [/filter]
                [/not]
            [/source]
            [target]
                terrain=!,Xu*^*,Xo*^*,Q*^*
                [not]
                    [filter]
                    [/filter]
                [/not]
                [and]
                    [filter]
                        id=$teleport_unit.id
                    [/filter]
                    radius=2
                    [filter_radius]
                        terrain=!,Xu*^*,Xo*^*,Gll^F**
                    [/filter_radius]
                [/and]
            [/target]
            [filter]
                ability=hoplite_leap
            [/filter]
        [/tunnel]
    [/teleport]
#enddef

#using different variable substitution, to fix this not working inside menu item
#define ABILITY_LEAPING2
    [teleport]
        id=hoplite_leap
        name= _ ""
        female_name= _ ""
        description= _ ""
        [tunnel]
            id=hoplite_leap
            [source]
                terrain=!,Xu*^*,Xo*^*,Q*^*
                [not]
                    [filter]
                        [not]
                            id=$|teleport_unit.id
                        [/not]
                    [/filter]
                [/not]
            [/source]
            [target]
                terrain=!,Xu*^*,Xo*^*,Q*^*
                [not]
                    [filter]
                    [/filter]
                [/not]
                [and]
                    [filter]
                        id=$|teleport_unit.id
                    [/filter]
                    radius=2
                    [filter_radius]
                        terrain=!,Xu*^*,Xo*^*,Gll^F**
                    [/filter_radius]
                [/and]
            [/target]
            [filter]
                ability=hoplite_leap
            [/filter]
        [/tunnel]
    [/teleport]
#enddef

#using different variable substitution ($| instead of $), to fix this not working inside menu item
#define ABILITY_HOPLITE_TELEPORTING
    [teleport]
        id=hoplite_teleport
        name= _ ""
        female_name= _ ""
        description= _ ""
        [tunnel]
            id=hoplite_teleport
            [source]
                terrain=!,Xu*^*,Xo*^*,Q*^*
                [not]
                    [filter]
                        [not]
                            id=$|teleport_unit.id
                        [/not]
                    [/filter]
                [/not]
            [/source]
            [target]
                terrain=!,Xu*^*,Xo*^*,Q*^*
                [not]
                    [filter]
                    [/filter]
                [/not]
                [and]
                    [filter]
                        id=$|teleport_unit.id
#			side=1
                    [/filter]
                    radius=$|hoplite_teleport_radius$|teleport_unit.side
                    [filter_radius]
                        terrain=!,None
                    [/filter_radius]
#		    [or]
#                    [filter]
#                        id=$|teleport_unit.id
#			side=2
#                    [/filter]
#                    radius=$|hoplite_teleport_radius2
#                    [filter_radius]
#                        terrain=!,None
#                    [/filter_radius]
#		    [/or]
                [/and]
            [/target]
            [filter]
                ability=hoplite_teleport
            [/filter]
        [/tunnel]
    [/teleport]
#enddef

#define ABILITY_LEAP
    [dummy]
        id=hoplite_leap_dummy
        name= _ "leap"
        description=_ "Rightclick this unit to grant a temporary ability to move 2 hexes in one turn for a turn. Costs 50 energy, Energy is replenished by killing enemies, and descending into lower depths."
    [/dummy]
[/abilities]
[event]
    name=start
    id=spartan_leapmenu
    [set_menu_item]
        id=hoplite_leap
        description=_"Leap: Costs <span color='#2c9fed'>50</span> energy."
        image="misc/icon_leap.png"
        [show_if]
            [have_unit]
                id=Hoplite,Hoplite2
                x,y=$x1,$y1
                side=$side_number
                [not]
                    ability=hoplite_leap
#                    [filter_wml]
#                        variation=leaping
#                    [/filter_wml]
#                    [or]
#                        [filter_wml]
#                            variation=leaping_spearless
#                        [/filter_wml]
#                    [/or]
                [/not]
            [/have_unit]
#ifdef MULTIPLAYER
            {HOPLITE_PLAYERFILTER_VAR2 (
                {VARIABLE_CONDITIONAL teleport_unlocked1 not_equals yes}
            ) (
                {VARIABLE_CONDITIONAL teleport_unlocked2 not_equals yes}
            )}
#else
            {VARIABLE_CONDITIONAL teleport_unlocked not_equals yes}
#endif
        [/show_if]
        [command]
            [if]
#ifdef MULTIPLAYER
                [have_unit]
                    id=Hoplite
                    side=$side_number
                [/have_unit]
                [and]
                    [variable]
                        name=hoplite_energy1
                        greater_than_equal_to=50
                    [/variable]
                [/and]
                [or]
                    [have_unit]
                        id=Hoplite2
                        side=$side_number
                    [/have_unit]
                    [and]
                        [variable]
                            name=hoplite_energy2
                            greater_than_equal_to=50
                        [/variable]
                    [/and]
                [/or]
                [then]
                    [if]
                        [have_unit]
                            id=Hoplite
                            side=$side_number
                        [/have_unit]
                        [then]
                            {VARIABLE_OP hoplite_energy1 sub 50}
                            {SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
                        [/then]
                        [else]
                            {VARIABLE_OP hoplite_energy2 sub 50}
                            {SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
                        [/else]
                    [/if]
#endif
#ifndef MULTIPLAYER
                    [variable]
                        name=hoplite_energy
                        greater_than_equal_to=50
                    [/variable]
                    [then]
                        {VARIABLE_OP hoplite_energy sub 50}
                        {SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
#endif
                        [object]
                            silent=yes
                            duration=turn end
                            [filter]
                                side=$side_number
                                canrecruit=yes
                            [/filter]
                            [effect]
                                apply_to=new_ability
                                [abilities]
                                   {ABILITY_LEAPING2}
                                [/abilities]
                            [/effect]
                            [effect]
                                apply_to=new_animation
                                [animation]
                                    apply_to=pre_teleport
                                    [frame]
                                       duration=300
                                       offset=0.0~1.0:300
                                       y=0~-25:300
                                       sound={SOUND_LIST:MISS}
                                    [/frame]
                                [/animation]
                                [animation]
                                    apply_to=post_teleport
                                    [frame]
                                       duration=300
                                       offset=-1.0~0.0:300
                                       y=-25~0:300
                                    [/frame]
                                [/animation]
                            [/effect]
                        [/object]
	[if]
#ifdef MULTIPLAYER
            {HOPLITE_PLAYERFILTER_VAR2 (
                [variable]
                    name=swordlunge_unlocked1
                    equals=yes
                [/variable]
            ) (
                [variable]
                    name=swordlunge_unlocked2
                    equals=yes
                [/variable]
            )}
#else
            [variable]
                name=swordlunge_unlocked
                equals=yes
            [/variable]
#endif
        [then]
	{IF_VAR hoplite_artifacts equals yes (
	[then]
        [object]
            silent=yes
            duration=turn end
            [filter]
                side=$side_number
                canrecruit=yes
            [/filter]
            [effect]
        	apply_to=attack
        	name=sword
        	increase_damage=7
            [/effect]
        [/object]
	[/then]
	[else]
        [object]
            silent=yes
            duration=turn end
            [filter]
                side=$side_number
                canrecruit=yes
            [/filter]
            [effect]
        	apply_to=attack
        	name=sword
        	increase_damage=5
            [/effect]
        [/object]
	[/else])}
	[/then]
	[/if]
                        [print]
                            text= _ "Leap activated!"
                            size=20
                            blue=255
                            duration=2000
                        [/print]
                    [/then]
                    [else]
                        [print]
                            text= _ "Not enough energy!"
                            size=20
                            red=255
                            duration=2000
                        [/print]
                    [/else]
                [/if]
            [/command]
        [/set_menu_item]
        [set_menu_item]
            id=hoplite_teleport
            description=_"Teleport: Costs <span color='#2c9fed'>50</span> energy."
            image="misc/icon_teleport.png"
            [show_if]
                [have_unit]
                    id=Hoplite,Hoplite2
                    x,y=$x1,$y1
                    [not]
                        ability=hoplite_teleport
                    [/not]
                [/have_unit]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR2 (
                    {VARIABLE_CONDITIONAL teleport_unlocked1 equals yes}
                ) (
                    {VARIABLE_CONDITIONAL teleport_unlocked2 equals yes}
                )}
#else
                {VARIABLE_CONDITIONAL teleport_unlocked equals yes}
#endif
            [/show_if]
            [command]
                [if]
#ifdef MULTIPLAYER
                    [have_unit]
                        id=Hoplite
                        side=$side_number
                    [/have_unit]
                    [and]
                        [variable]
                            name=hoplite_energy1
                            greater_than_equal_to=50
                        [/variable]
                    [/and]
                    [or]
                        [have_unit]
                            id=Hoplite2
                            side=$side_number
                        [/have_unit]
                        [and]
                            [variable]
                                name=hoplite_energy2
                                greater_than_equal_to=50
                            [/variable]
                        [/and]
                    [/or]
                    [then]
                        [if]
                            [have_unit]
                                id=Hoplite
                                side=$side_number
                            [/have_unit]
                            [then]
                                {VARIABLE_OP hoplite_energy1 sub 50}
                                {SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
                            [/then]
                            [else]
                                {VARIABLE_OP hoplite_energy2 sub 50}
                                {SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
                            [/else]
                        [/if]
#endif
#ifndef MULTIPLAYER
                        [variable]
                            name=hoplite_energy
                            greater_than_equal_to=50
                        [/variable]
                        [then]
                            {VARIABLE_OP hoplite_energy sub 50}
                            {SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
#endif
                        [object]
                            silent=yes
                            duration=turn end
                            [filter]
                                side=$side_number
                                canrecruit=yes
                            [/filter]
                            [effect]
                                apply_to=new_ability
                                [abilities]
                                   {ABILITY_HOPLITE_TELEPORTING}
                                [/abilities]
                            [/effect]
                            [effect]
                                apply_to=new_animation
                                {HOPLITE_TELEPORTANIM}
                            [/effect]
                        [/object]
    	[if]
#ifdef MULTIPLAYER
            {HOPLITE_PLAYERFILTER_VAR2 (
                [variable]
                    name=swordlunge_unlocked1
                    equals=yes
                [/variable]
            ) (
                [variable]
                    name=swordlunge_unlocked2
                    equals=yes
                [/variable]
            )}
#else
            [variable]
                name=swordlunge_unlocked
                equals=yes
            [/variable]
#endif
        [then]
	{IF_VAR hoplite_artifacts equals yes (
	[then]
        [object]
            silent=yes
            duration=turn end
            [filter]
                side=$side_number
                canrecruit=yes
            [/filter]
            [effect]
        	apply_to=attack
        	name=sword
        	increase_damage=7
            [/effect]
        [/object]
	[/then]
	[else]
        [object]
            silent=yes
            duration=turn end
            [filter]
                side=$side_number
                canrecruit=yes
            [/filter]
            [effect]
        	apply_to=attack
        	name=sword
        	increase_damage=5
            [/effect]
        [/object]
	[/else])}
	[/then]
	[/if]
                            [print]
                                text= _ "Teleport activated!"
                                size=20
                                blue=255
                                duration=2000
                            [/print]
                        [/then]
                        [else]
                            [print]
                                text= _ "Not enough energy!"
                                size=20
                                red=255
                                duration=2000
                            [/print]
                        [/else]
                    [/if]
                [/command]
            [/set_menu_item]
        [/event]
        [+abilities]
#enddef

#define WEAPON_SPECIAL_SPEARTHROW
    [dummy]
        id=hoplite_spear_throw
        name= _ "spear throw"
        description=_ "Rightclick and enemy to throw your spear at it. While the spear is thrown, it deals damage and slows, but you will be unable to use your spear melee, forcing you to rely on other weapons in your arsenal. This attack has a 3-tile range by default, but that can be increased with upgrades."
    [/dummy]
[/specials]
[/attack]
[event]
    name=start
    [set_menu_item]
        id=hoplite_spear
        description=_"Throw your spear"
        image="misc/icon_spear.png"
        [show_if]
            [have_unit]
                side=$hoplite_enemyside
                x,y=$x1,$y1
                [filter_location]
                    [filter]
                        side=$side_number
                        canrecruit=yes
                        [not]
                            variation=spearless
                        [/not]
                    [/filter]
                    radius=$hoplite_spearthrow_radius$side_number
                    [filter_radius]
                        [not]
                            terrain=Xu*^*,Xo*^*
                        [/not]
                    [/filter_radius]
                [/filter_location]
            [/have_unit]
        [/show_if]
        [command]
            [store_locations]
                x,y=$x1,$y1
                variable=spearhex
            [/store_locations]
            #TODO: allow throwing spear on any terrain
            #TODO: replace this variable check with proper terrain filters
            {IF_VAR spearhex.terrain not_equals Qlf (
                [and]
                    [variable]
                        name=spearhex.terrain
                        not_equals=Wwg
                    [/variable]
                [/and]
                [and]
                    [variable]
                        name=spearhex.terrain
                        not_equals=Wog
                    [/variable]
                [/and]
                [and]
                    [variable]
                        name=spearhex.terrain
                        not_equals=Qxua
                    [/variable]
                [/and]
                [then]
                    [store_unit]
                        [filter]
                            id=Hoplite,Hoplite2
                            side=$side_number
                        [/filter]
                        variable=spearthrow
                        kill=no
                    [/store_unit]
                    [unstore_unit]
                        variable=spearthrow
                    [/unstore_unit]
                    {VARIABLE isspearthrowing yes}

                    [animate_unit]
                        flag=attack
                        hits=yes
                        [filter]
                            id=Hoplite,Hoplite2
                            side=$side_number
                        [/filter]
                        [facing]
                            x,y=$x1,$y1
                        [/facing]
                        [primary_attack]
                            range=ranged
                            type=pierce
                        [/primary_attack]
                    [/animate_unit]
                    [fire_event]
                        id=spearexplode
                        [primary_unit]
                            x,y=$x1,$y1
                        [/primary_unit]
                    [/fire_event]
                    [harm_unit]
                        [filter]
                            x,y=$x1,$y1
                        [/filter]
                        [filter_second]
                            id=Hoplite,Hoplite2
                            side=$side_number
                        [/filter_second]
#                        [primary_attack]
#                            range=ranged
#                            type=pierce
#                        [/primary_attack]
                        amount=$spearthrow.attack[3].damage
                        damage_type=pierce
                        #		slowed=yes
                        fire_event=yes
                        animate=defender
                        delay=0
                        experience=yes
                    [/harm_unit]
                    {CLEAR_VARIABLE isspearthrowing}
                    {IF_VAR spearthrowexplode_unlocked equals yes (
                        [or]
                            {HOPLITE_PLAYERFILTER_VAR2 (
                                {VARIABLE_CONDITIONAL spearthrowexplode_unlocked1 equals yes}
                            ) (
                                {VARIABLE_CONDITIONAL spearthrowexplode_unlocked2 equals yes}
                            )}
                        [/or]
                        [then]
                            {VARIABLE halfdmg $spearthrow.attack[3].damage}
                            {VARIABLE_OP halfdmg divide 2}
                            {VARIABLE_OP halfdmg round ceiling}
                            [harm_unit]
                                [filter]
                                    side=$hoplite_enemyside
                                    [filter_location]
                                        x,y=$x1,$y1
                                        radius=1
                                    [/filter_location]
                                    [not]
                                        x,y=$x1,$y1
                                    [/not]
                                [/filter]
                                [filter_second]
                                    id=Hoplite
                                [/filter_second]
				[primary_attack]
				    name=spear2
				[/primary_attack]
                                amount=$halfdmg
                                damage_type=fire
                                #		slowed=yes
                                fire_event=yes
                                animate=defender
                                delay=0
                                experience=yes
                            [/harm_unit]
                            {CLEAR_VARIABLE halfdmg}
                        [/then]
                    )}
#			[message]
#			    speaker=narrator
#			    message=_"hoplite_nospear: $hoplite_nospear|"#debug
#			[/message]
#			[message]
#			    speaker=narrator
#			    message=_"hoplite_spear_on_ground: $hoplite_spear_on_ground|"#debug
#			[/message]
            {IF_VAR hoplite_depthdescending not_equals yes (
            [then]
                {VARIABLE hoplite_spear_on_ground$side_number yes}
                    [if]
                        [have_unit]
                            id=Hoplite2
                        [/have_unit]
                        [then]
                            {HOPLITE_PLAYERFILTER (
                                {IF_VAR hoplite_artifacts equals yes (
                                    [then]
                                        {VARIABLE spearimg "items/spear-ares.png"}
                                    [/then]
                                    [else]
                                        {VARIABLE spearimg "items/spear-red.png"}
                                    [/else]
                                )}
                            ) (
                                {IF_VAR hoplite_artifacts equals yes (
                                    [then]
                                        {VARIABLE spearimg "items/spear-ares-teal.png"}
                                    [/then]
                                    [else]
                                        {VARIABLE spearimg "items/spear-teal.png"}
                                    [/else]
                                )}
                            )}
                        [/then]
                        [else]
                            {VARIABLE hoplite_spear_on_ground yes}
                            {IF_VAR hoplite_artifacts equals yes (
                                [then]
                                    {VARIABLE spearimg "items/spear-ares.png"}
                                [/then]
                                [else]
                                    {VARIABLE spearimg "items/spear.png"}
                                [/else]
                            )}
                        [/else]
                    [/if]
                            [set_variables]
                                name=hoplite_spearloc$side_number
                                mode=append
                                [value]
                                    x=$x1
                                    y=$y1
                                [/value]
                            [/set_variables]

                            [item]
                                x,y=$x1,$y1
                                image=$spearimg
                                name=hoplite_spear$side_number
                            [/item]
                            {CLEAR_VARIABLE spearimg}
                            [object]
                                silent=yes
                                duration=forever
                                [filter]
                                    side=$side_number
                                    canrecruit=yes
                                [/filter]
                                [effect]
                                    apply_to=variation
                                    name=spearless
                                [/effect]
                            [/object]
                    {IF_VAR spearthrowexplode_unlocked equals yes (
                        [or]
                            {HOPLITE_PLAYERFILTER_VAR2 (
                                {VARIABLE_CONDITIONAL spearthrowexplode_unlocked1 equals yes}
                            ) (
                                {VARIABLE_CONDITIONAL spearthrowexplode_unlocked2 equals yes}
                            )}
                        [/or]
                        [then]
                            [store_unit]
                                [filter]
                                    side=$hoplite_enemyside
                                    [filter_location]
                                        x,y=$x1,$y1
                                        radius=1
                                    [/filter_location]
                                [/filter]
                                kill=no
                                variable=slowed
                            [/store_unit]
                        [/then]
                        [else]
                            [store_unit]
                                [filter]
                                    x,y=$x1,$y1
                                    side=$hoplite_enemyside
                                [/filter]
                                kill=no
                                variable=slowed
                            [/store_unit]
                        [/else]
                    )}
                    [foreach]
                        array=slowed
                        index_var=a
                        [do]

                        {VARIABLE this_item.status.slowed yes}

                        [unstore_unit]
                            variable=this_item
                            #                  text= _ "Slowed"
                            #                  {COLOR_HARM}
                        [/unstore_unit]

                        [/do]
                    [/foreach]
                    [/then])}
                    {IF_VAR spearmove_unlocked equals yes (
                        [or]
                            {HOPLITE_PLAYERFILTER_VAR2 (
                                {VARIABLE_CONDITIONAL spearmove_unlocked1 equals yes}
                            ) (
                                {VARIABLE_CONDITIONAL spearmove_unlocked2 equals yes}
                            )}
                        [/or]
                        [else]
                            {MODIFY_UNIT side,canrecruit=$side_number,yes attacks_left 0}
                            {MODIFY_UNIT side,canrecruit=$side_number,yes moves 0}
                            [end_turn]
                            [/end_turn]
                        [/else]
                    )}
                    #        [/else]
                    #	[/if]
                [/then]
                [else]
                    [print]
                        text= _ "Spear can't be thrown on this terrain!"
                        size=22
                        red=255
                        duration=2000
                    [/print]
                [/else]
            )}
        [/command]
    [/set_menu_item]
[/event]
[event]
    name=moveto
    first_time_only=no
    [filter]
        id=Hoplite,Hoplite2
        [filter_location]
            find_in=hoplite_spearloc$side_number
        [/filter_location]
    [/filter]
    [object]
        silent=yes
        duration=forever
        [filter]
            side=$side_number
            canrecruit=yes
        [/filter]
        [effect]
            apply_to=variation
            name=none
        [/effect]
    [/object]

    [remove_item]
        image=hoplite_spear$side_number
        x=0-99
        y=0-99
    [/remove_item]

    {VARIABLE hoplite_spear_on_ground$side_number no}
    {CLEAR_VARIABLE hoplite_spearloc$side_number}
[/event]
[+attack]
    [+specials]
#enddef

#define WEAPON_SPECIAL_IMPALE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=hoplite_impale
        name= _ "impale"
        description=_ "When an enemy is killed by this attack, unit behind the primary target also receives the attack damage. This doesn't chain onto other units."
    [/damage]
#enddef

#define WEAPON_SPECIAL_IMPALEII
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=hoplite_impale
    [/damage]
    [damage]
        id=hoplite_impaleII
        name= _ "impale II"
        description=_ "When an enemy is killed by this attack, unit behind the primary target also receives the attack damage. This doesn't chain onto other units. Additionally, if the attacked enemy survives the hit, they will deal 33% less damage for one turn."
    [/damage]
#enddef

#define WEAPON_SPECIAL_IMPALEIII
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=hoplite_impale
    [/damage]
    [damage]
        id=hoplite_impaleII
    [/damage]
    [damage]
        id=hoplite_impaleIII
        name= _ "impale III"
        description=_ "When an enemy is killed by this attack, unit behind the primary target also receives the attack damage. This doesn't chain onto other units. If there isn't an enemy behind the killed target, the enemy behind you gets attacked instead. Additionally, if the attacked enemy survives the hit, they will deal 33% less damage for one turn."
    [/damage]
#enddef
#define HOPLITE_ABILITY_EVENTS
    [event]
        name=last breath
        id=hoplite_impale
        first_time_only=no

        [filter_second_attack]
            special_id=hoplite_impale
        [/filter_second_attack]

        [if]
            [have_unit]
                side=$hoplite_enemyside
                [filter_location]
                    [filter_adjacent_location]
                        x,y=$x1,$y1
                        adjacent=$unit.facing
                    [/filter_adjacent_location]
                [/filter_location]
            [/have_unit]
            [then]
                [store_locations]
                    [filter_adjacent_location]
                        x,y=$x1,$y1
                        adjacent=$unit.facing
                    [/filter_adjacent_location]
                    variable=next_target
                [/store_locations]

                {VARIABLE impaledmg $second_weapon.damage}

                [if]
                    {VARIABLE_CONDITIONAL second_unit.status.slowed boolean_equals yes}
                    [then]
                        {VARIABLE_OP impaledmg divide 2}
                    [/then]
                [/if]

                {VARIABLE_OP impaledmg round ceiling}

                #second unit:
                [harm_unit]
                    [filter]
                        x,y=$next_target[0].x,$next_target[0].y
                        [filter_side]
                            [enemy_of]
                                side=$side_number
                            [/enemy_of]
                        [/filter_side]
                        [not]
                            [filter_wml]
                                [status]
                                    petrified=yes
                                [/status]
                            [/filter_wml]
                        [/not]
                    [/filter]
                    [filter_second]
                        x,y=$x2,$y2
                    [/filter_second]
                    amount=$impaledmg
                    damage_type=$second_weapon.type
                    alignment=$second_unit.alignment
                    fire_event=yes
                    animate=defender
                    delay=0
                    experience=no
                [/harm_unit]
		{VARIABLE_OP impale_progress add 1}
		{IF_VAR impale_progress equals 50 (
		[then]
                {ACHIEVEMENT_MESSAGE impale}
		[/then])}

                {CLEAR_VARIABLE impaledmg}
            [/then]
            [elseif]
#ifdef MULTIPLAYER
                {HOPLITE_PLAYERFILTER_VAR2 (
                    [variable]
                        name=impaleIII_unlocked1
                        equals=yes
                    [/variable]
                ) (
                    [variable]
                        name=impaleIII_unlocked2
                        equals=yes
                    [/variable]
                )}
#else
                [variable]
                    name=impaleIII_unlocked
                    equals=yes
                [/variable]
#endif
                [then]
                    [store_locations]
                        [filter_adjacent_location]
                            x,y=$x2,$y2
                            adjacent=$second_unit.facing
                        [/filter_adjacent_location]
                        variable=next_target
                    [/store_locations]

                    {VARIABLE impaledmg $second_weapon.damage}

                    [if]
                        {VARIABLE_CONDITIONAL second_unit.status.slowed boolean_equals yes}
                        [then]
                            {VARIABLE_OP impaledmg divide 2}
                        [/then]
                    [/if]

                    {VARIABLE_OP impaledmg round ceiling}

                    #second unit:
                    [harm_unit]
                        [filter]
                            x,y=$next_target[0].x,$next_target[0].y
                            [filter_side]
                                [enemy_of]
                                    side=$side_number
                                [/enemy_of]
                            [/filter_side]
                            [not]
                                [filter_wml]
                                    [status]
                                        petrified=yes
                                    [/status]
                                [/filter_wml]
                            [/not]
                        [/filter]
                        [filter_second]
                            x,y=$x2,$y2
                        [/filter_second]
                        [primary_attack]
                            name=spear
                        [/primary_attack]
                        amount=$impaledmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=yes
                        delay=0
                        experience=no
                    [/harm_unit]

                    {CLEAR_VARIABLE impaledmg}
                [/then]
            [/elseif]
        [/if]
    [/event]
    [event]
        name=attacker hits
        id=hoplite_impaleII
        first_time_only=no

        [filter_attack]
            special_id=hoplite_impaleII
        [/filter_attack]
        [object]
            silent=yes
            duration=turn end
            [filter]
                find_in=second_unit
            [/filter]
            [effect]
                apply_to=new_ability
                [abilities]
                    [leadership]
                        id=impaled
                        value=-33
                        cumulative=no
                        affect_self=yes
                    [/leadership]
                [/abilities]
            [/effect]
        [/object]
    [/event]
    [event]
        name=start
        [set_menu_item]
            id=hoplite_healpotion
            description=_"Drink a healing potion to restore some hitpoints."
            image="misc/icon_healpotion.png"
            [show_if]
                [have_unit]
                    id=Hoplite,Hoplite2
                    side=$side_number
                    x,y=$x1,$y1
                    [not]
                        [filter_wml]
                            [status]
                                unhealable=yes
                            [/status]
                        [/filter_wml]
                    [/not]
                [/have_unit]
                {VARIABLE_CONDITIONAL hoplite_multiplayer equals yes}
                [and]
                    {HOPLITE_PLAYERFILTER_VAR2 (
                        {VARIABLE_CONDITIONAL healpotionI_unlocked1 equals yes}
                        [and]
                            {VARIABLE_CONDITIONAL hoplite_healpotion_cooldown1 less_than 1}
                        [/and]
                    ) (
                        {VARIABLE_CONDITIONAL healpotionI_unlocked2 equals yes}
                        [and]
                            {VARIABLE_CONDITIONAL hoplite_healpotion_cooldown2 less_than 1}
                        [/and]
                    )}
                [/and]
                [or]
                    [have_unit]
                        id=Hoplite
                        side=$side_number
                        x,y=$x1,$y1
                    [/have_unit]
                    [and]
                        {VARIABLE_CONDITIONAL hoplite_multiplayer not_equals yes}
                        {VARIABLE_CONDITIONAL healpotionI_unlocked equals yes}
                        {VARIABLE_CONDITIONAL hoplite_healpotion_cooldown less_than 1}
                    [/and]
                [/or]
            [/show_if]
            [command]
                [store_unit]
                    [filter]
                        id=Hoplite,Hoplite2
                        side=$side_number
                    [/filter]
                    variable=hoplite_healpotion
                    kill=no
                [/store_unit]
                [if]
                    [variable]
                        name=hoplite_healpotion.hitpoints
                        less_than=$hoplite_healpotion.max_hitpoints
                    [/variable]
                    [then]
                        [unstore_unit]
                            variable=hoplite_healpotion
                        [/unstore_unit]
                        [sound]
                            name=potion.ogg
                        [/sound]
                        [if]
                            [have_unit]
                                id=Hoplite2
                            [/have_unit]
                            [then]
                                {HOPLITE_PLAYERFILTER (
                                    [heal_unit]
                                        [filter]
                                            id=Hoplite
                                        [/filter]
                                        amount=$healpotion_restore1
                                        animate=yes
                                        restore_statuses=no
                                    [/heal_unit]
                                    [modify_unit]
                                        [filter]
                                            id=Hoplite
                                        [/filter]
                                        [status]
                                            poisoned=no
                                        [/status]
                                    [/modify_unit]
                                    {IF_VAR healpotionbag_unlocked1 equals yes (
                                        [then]
                                            {VARIABLE hoplite_healpotion_cooldown1 1}
                                        [/then]
                                        [else]
                                            {VARIABLE hoplite_healpotion_cooldown1 2}
                                        [/else]
                                    )}
                                    {IF_VAR healpotionenergy_unlocked1 equals yes (
                                        [then]
                                            [delay]
                                                time=500
                                            [/delay]
                                            [sound]
                                                name=magic-faeriefire.ogg
                                            [/sound]
                                            {HOPLITE_ADD_ENERGY_BY_SIDE $side_number 75}
                                        [/then]
                                    )}
                                    #energy is added a second time
                                    {IF_VAR healpotionenergyII_unlocked1 equals yes (
                                        [then]
                                            {HOPLITE_ADD_ENERGY_BY_SIDE $side_number 75}
                                            [object]
                                                silent=yes
                                                duration=turn
                                                [filter]
                                                    id=Hoplite
                                                [/filter]
                                                [effect]
                                                    apply_to=attack
                                                    increase_damage=50%
                                                [/effect]
                                            [/object]
                                            [floating_text]
                                                [filter]
                                                    id=Hoplite
                                                [/filter]
                                                text="<span color='#ffc800'>" + _ "+50% damage!" + "</span>"
                                            [/floating_text]
                                        [/then]
                                    )}

                                ) (
                                    [heal_unit]
                                        [filter]
                                            id=Hoplite2
                                        [/filter]
                                        amount=$healpotion_restore2
                                        animate=yes
                                        restore_statuses=no
                                    [/heal_unit]
                                    [modify_unit]
                                        [filter]
                                            id=Hoplite2
                                        [/filter]
                                        [status]
                                            poisoned=no
                                        [/status]
                                    [/modify_unit]
                                    {IF_VAR healpotionbag_unlocked2 equals yes (
                                        [then]
                                            {VARIABLE hoplite_healpotion_cooldown2 1}
                                        [/then]
                                        [else]
                                            {VARIABLE hoplite_healpotion_cooldown2 2}
                                        [/else]
                                    )}
                                    {IF_VAR healpotionenergy_unlocked2 equals yes (
                                        [then]
                                            [delay]
                                                time=500
                                            [/delay]
                                            [sound]
                                                name=magic-faeriefire.ogg
                                            [/sound]
                                            {HOPLITE_ADD_ENERGY_BY_SIDE $side_number 75}
                                        [/then]
                                    )}
                                    #energy is added a second time
                                    {IF_VAR healpotionenergyII_unlocked2 equals yes (
                                        [then]
                                            {HOPLITE_ADD_ENERGY_BY_SIDE $side_number 75}
                                            [object]
                                                silent=yes
                                                duration=turn
                                                [filter]
                                                    id=Hoplite2
                                                [/filter]
                                                [effect]
                                                    apply_to=attack
                                                    increase_damage=50%
                                                [/effect]
                                            [/object]
                                            [floating_text]
                                                [filter]
                                                    id=Hoplite2
                                                [/filter]
                                                text="<span color='#ffc800'>" + _ "+50% damage!" + "</span>"
                                            [/floating_text]
                                        [/then]
                                    )}
                                )}
                            [/then]
                            [else]
                                [heal_unit]
                                    [filter]
                                        id=Hoplite
                                    [/filter]
                                    amount=$healpotion_restore
                                    animate=yes
                                    restore_statuses=no
                                [/heal_unit]
                                [modify_unit]
                                    [filter]
                                        id=Hoplite
                                    [/filter]
                                    [status]
                                        poisoned=no
                                    [/status]
                                [/modify_unit]
                                {IF_VAR healpotionbag_unlocked equals yes (
                                    [then]
                                        {VARIABLE hoplite_healpotion_cooldown 1}
                                    [/then]
                                    [else]
                                        {VARIABLE hoplite_healpotion_cooldown 2}
                                    [/else]
                                )}
                                {IF_VAR healpotionenergy_unlocked equals yes (
                                    [then]
                                        [delay]
                                            time=500
                                        [/delay]
                                        [sound]
                                            name=magic-faeriefire.ogg
                                        [/sound]
                                        {VARIABLE_OP hoplite_energy add 75}
                                        {IF_VAR hoplite_energy greater_than $hoplite_maxenergy (
                                            [then]
                                                {VARIABLE hoplite_energy $hoplite_maxenergy}
                                            [/then]
                                        )}
                                        {SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
                                    [/then]
                                )}
                                #energy is added a second time
                                {IF_VAR healpotionenergyII_unlocked equals yes (
                                    [then]
                                        {VARIABLE_OP hoplite_energy add 75}
                                        {IF_VAR hoplite_energy1 greater_than $hoplite_maxenergy (
                                            [then]
                                                {VARIABLE hoplite_energy $hoplite_maxenergy}
                                            [/then]
                                        )}
                                        {SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
                                        [object]
                                            silent=yes
                                            duration=turn
                                            [filter]
                                                id=Hoplite
                                            [/filter]
                                            [effect]
                                                apply_to=attack
                                                increase_damage=50%
                                            [/effect]
                                        [/object]
                                        [floating_text]
                                            [filter]
                                                id=Hoplite
                                            [/filter]
                                            text="<span color='#ffc800'>" + _ "+50% damage!" + "</span>"
                                        [/floating_text]
                                    [/then]
                                )}

                            [/else]
                        [/if]
                    [/then]
                    [else]
                        [print]
                            text= _ "Hitpoints are already full!"
                            size=20
                            red=255
                            duration=2000
                        [/print]
                    [/else]
                [/if]
            [/command]
        [/set_menu_item]
        [set_menu_item]
            id=hoplite_teleportaway
            description=_"Toggle the 'Teleport Away' upgrade (if you want to save energy)."
            [show_if]
                [have_unit]
                    id=Hoplite,Hoplite2
                    side=$side_number
                    x,y=$x1,$y1
                [/have_unit]
                {VARIABLE_CONDITIONAL hoplite_multiplayer equals yes}
                [and]
                    {HOPLITE_PLAYERFILTER_VAR2 (
                        {VARIABLE_CONDITIONAL teleportaway_unlocked1 equals yes}
                    ) (
                        {VARIABLE_CONDITIONAL teleportaway_unlocked2 equals yes}
                    )}
                [/and]
                [or]
                    [have_unit]
                        id=Hoplite
                        side=$side_number
                        x,y=$x1,$y1
                    [/have_unit]
                    [and]
                        {VARIABLE_CONDITIONAL hoplite_multiplayer not_equals yes}
                        {VARIABLE_CONDITIONAL teleportaway_unlocked equals yes}
                    [/and]
                [/or]
            [/show_if]
            [command]
                [if]
                    [have_unit]
                        id=Hoplite2
                    [/have_unit]
                    [then]
                        {HOPLITE_PLAYERFILTER (
                            {IF_VAR teleportaway_enabled1 not_equals yes (
                                [then]
                                    {VARIABLE teleportaway_enabled1 yes}
                                [/then]
                                [else]
                                    {VARIABLE teleportaway_enabled1 no}
                                [/else]
                            )}
                            [print]
                                text= _ "Teleport Away set to <b>$teleportaway_enabled1|</b> for side 1"
                                size=20
                                blue=255
                                duration=3000
                            [/print]
                        ) (
                            {IF_VAR teleportaway_enabled2 not_equals yes (
                                [then]
                                    {VARIABLE teleportaway_enabled2 yes}
                                [/then]
                                [else]
                                    {VARIABLE teleportaway_enabled2 no}
                                [/else]
                            )}
                            [print]
                                text= _ "Teleport Away set to <b>$teleportaway_enabled2|</b> for side 2"
                                size=20
                                blue=255
                                duration=3000
                            [/print]
                        )}
                    [/then]
                    [else]
                        {IF_VAR teleportaway_enabled not_equals yes (
                            [then]
                                {VARIABLE teleportaway_enabled yes}
                            [/then]
                            [else]
                                {VARIABLE teleportaway_enabled no}
                            [/else]
                        )}
                        [print]
                            text= _ "Teleport Away set to <b>$teleportaway_enabled|</b>"
                            size=20
                            blue=255
                            duration=3000
                        [/print]
                    [/else]
                [/if]
            [/command]
        [/set_menu_item]
    [/event]

    [event]
        name=last breath
        first_time_only=no

        [filter]
            id=Hoplite,Hoplite2
            [not]
                [filter_wml]
                    [status]
                        unhealable=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]

        {IF_VAR phoenixamulet_unlocked equals yes (
            [and]
                {VARIABLE_CONDITIONAL hoplite_revive_cooldown less_than 1}
            [/and]
            [or]
                {VARIABLE_CONDITIONAL phoenixamulet_unlocked1 equals yes}
                [and]
                    {VARIABLE_CONDITIONAL hoplite_revive_cooldown1 less_than 1}
                [/and]
                [and]
                    {VARIABLE_CONDITIONAL unit.id equals Hoplite}
                [/and]
            [/or]
            [or]
                {VARIABLE_CONDITIONAL phoenixamulet_unlocked2 equals yes}
                [and]
                    {VARIABLE_CONDITIONAL hoplite_revive_cooldown2 less_than 1}
                [/and]
                [and]
                    {VARIABLE_CONDITIONAL unit.id equals Hoplite2}
                [/and]
            [/or]
            [then]
                [sound]
                    name={SOUND_LIST:HOLY}
                [/sound]
                [store_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    variable=hoplite_reborn
                    kill=no
                [/store_unit]
                {VARIABLE hoplite_reborn.hitpoints 0}
                [unstore_unit]
                    variable=hoplite_reborn
                    find_vacant=no
                [/unstore_unit]
                {FLASH_WHITE (
                    {IF_VAR phoenixamuletII_unlocked equals yes (
                        [or]
                            {VARIABLE_CONDITIONAL phoenixamuletII_unlocked1 equals yes}
                            [and]
                                {VARIABLE_CONDITIONAL unit.id equals Hoplite}
                            [/and]
                        [/or]
                        [or]
                            {VARIABLE_CONDITIONAL phoenixamuletII_unlocked2 equals yes}
                            [and]
                                {VARIABLE_CONDITIONAL unit.id equals Hoplite2}
                            [/and]
                        [/or]
                        [then]
                            [heal_unit]
                                [filter]
                                    x,y=$x1,$y1
                                [/filter]
                                amount=$healpotion_restore
                                animate=yes
                                restore_statuses=no
                            [/heal_unit]
                            [modify_unit]
                                [filter]
                                    x,y=$x1,$y1
                                [/filter]
                                [status]
                                    poisoned=no
                                [/status]
                            [/modify_unit]
                            [if]
                                [have_unit]
                                    id=Hoplite2
                                [/have_unit]
                                [then]
                                    {HOPLITE_PLAYERFILTER_X1_Y1 (
                                        {VARIABLE_OP hoplite_energy1 add 75}
                                        {IF_VAR hoplite_energy1 greater_than $hoplite_maxenergy1 (
                                            [then]
                                                {VARIABLE hoplite_energy1 $hoplite_maxenergy1}
                                            [/then]
                                        )}
                                        {SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
                                    ) (
                                        {VARIABLE_OP hoplite_energy2 add 75}
                                        {IF_VAR hoplite_energy2 greater_than $hoplite_maxenergy2 (
                                            [then]
                                                {VARIABLE hoplite_energy2 $hoplite_maxenergy2}
                                            [/then]
                                        )}
                                        {SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
                                    )}
                                [/then]
                                [else]
                                    {VARIABLE_OP hoplite_energy add 75}
                                    {IF_VAR hoplite_energy greater_than $hoplite_maxenergy (
                                        [then]
                                            {VARIABLE hoplite_energy $hoplite_maxenergy}
                                        [/then]
                                    )}
                                    {SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
                                [/else]
                            [/if]
                        [/then]
                        [else]
                            [heal_unit]
                                [filter]
                                    x,y=$x1,$y1
                                [/filter]
                                amount=10
                                animate=yes
                                restore_statuses=yes
                            [/heal_unit]
                        [/else]
                    )}
                    #	[delay]
                    #	  time=500
                    #	[/delay]
                    [sound]
                        name=fire.wav
                    [/sound]
                    [harm_unit]
                        [filter]
                            side=$hoplite_enemyside
                            [filter_adjacent]
                                x,y=$x1,$y1
                            [/filter_adjacent]
                        [/filter]
                        [filter_second]
                            x,y=$x1,$y1
                        [/filter_second]
                        amount=10
                        damage_type=fire
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=no
                        delay=0
                        experience=no
                    [/harm_unit]
                    [store_unit]
                        [filter]
                            side=$hoplite_enemyside
                        [/filter]

                        kill=no
                        variable=slowed
                    [/store_unit]

                    [foreach]
                        array=slowed
                        index_var=a
                        [do]
                            {VARIABLE this_item.status.slowed yes}
                            [unstore_unit]
                                variable=this_item
                            [/unstore_unit]
                        [/do]
                    [/foreach]
                )}
                [if]
                    [have_unit]
                        id=Hoplite2
                    [/have_unit]
                    [then]
                        {HOPLITE_PLAYERFILTER_X1_Y1 (
			{IF_VAR amuletcharge_unlocked1 equals yes (
			[then]
                            {VARIABLE hoplite_revive_cooldown1 2}
			[/then]
			[else]
                            {VARIABLE hoplite_revive_cooldown1 3}
			[/else])}
                        ) (
			{IF_VAR amuletcharge_unlocked2 equals yes (
			[then]
                            {VARIABLE hoplite_revive_cooldown2 2}
			[/then]
			[else]
                            {VARIABLE hoplite_revive_cooldown2 3}
			[/else])}
                        )}
                    [/then]
                    [else]
			{IF_VAR amuletcharge_unlocked equals yes (
			[then]
                            {VARIABLE hoplite_revive_cooldown 2}
			[/then]
			[else]
                            {VARIABLE hoplite_revive_cooldown 3}
			[/else])}
                    [/else]
                [/if]
                {VARIABLE_OP revive_progress add 1}
                {IF_VAR revive_progress equals 5 (
                    [then]
                        {ACHIEVEMENT_MESSAGE revive}
                    [/then]
                )}
                {CLEAR_VARIABLE hoplite_reborn}
            [/then]
        )}
    [/event]
    [event]
        name=attack
        first_time_only=no
        [filter]
            side=$hoplite_enemyside
        [/filter]
        [filter_second]
            id=Hoplite,Hoplite2
            ability=hoplite_teleportaway
        [/filter_second]

        [store_unit]
            [filter]
                id=Hoplite,Hoplite2
                x,y=$x2,$y2
            [/filter]
            variable=hoplite_teleportloc
            kill=no
        [/store_unit]

        {VARIABLE x2 $hoplite_teleportloc.x}
        {VARIABLE y2 $hoplite_teleportloc.y}
        {VARIABLE teleportaway_cost $weapon.damage}
        {VARIABLE_OP teleportaway_cost divide 10}
        {VARIABLE_OP teleportaway_cost multiply 75}
        {HOPLITE_GET_RESIST_MULT $second_unit.id $weapon.type}
        {VARIABLE_OP teleportaway_cost multiply $tmp_resistmult}
        {VARIABLE_OP teleportaway_cost round floor}
        {CLEAR_VARIABLE hoplite_teleportloc}
        {HOPLITE_TELEPORTAWAY_EVENT $teleportaway_cost (
            x,y=$x2,$y2
        )}
        {CLEAR_VARIABLE teleportaway_cost}
    [/event]
    [event]
        name=attack end
        first_time_only=no
        [filter_second]
            id=Hoplite,Hoplite2
        [/filter_second]
        [fire_event]
            id=hoplite_adrenaline
        [/fire_event]
    [/event]
    #handled slightly differently from enemy shortrange, to make it visible in the interface properly (you can't try to attack enemies outside range)
    [event]
        name=side turn
        id=hoplite_shortrange2_event
        first_time_only=no
        [store_unit]
            [filter]
                side=$side_number
                canrecruit=yes
            [/filter]
            variable=tmp_shortrange_hoplite
            kill=no
        [/store_unit]
        [object]
            silent=yes
            duration=turn end
            [filter]
                find_in=tmp_shortrange_hoplite
            [/filter]
            [effect]
                apply_to=attack
                special_id=shortranged2
                [set_specials]
                    mode=append
                    [disable]
                        id=shortranged_disableattack
                        [filter_opponent]
                            [not]
                                [filter_location]
                                    x,y=$tmp_shortrange_hoplite.x,$tmp_shortrange_hoplite.y
                                    radius=1
                                [/filter_location]
                            [/not]
                        [/filter_opponent]
                    [/disable]
                [/set_specials]
            [/effect]
        [/object]
        {CLEAR_VARIABLE tmp_shortrange_hoplite}
    [/event]
#enddef

#define HOPLITE_ADRENALINE_EVENT_OLD FILTER
    {IF_VAR adrenaline_unlocked equals yes (
        [or]
            {VARIABLE_CONDITIONAL adrenaline_unlocked1 equals yes}
            [and]
                [have_unit]
                    id=Hoplite
                    ability=hoplite_adrenaline
                    {FILTER}
                [/have_unit]
            [/and]
        [/or]
        [or]
            {VARIABLE_CONDITIONAL adrenaline_unlocked2 equals yes}
            [and]
                [have_unit]
                    id=Hoplite2
                    ability=hoplite_adrenaline
                    {FILTER}
                [/have_unit]
            [/and]
        [/or]
        [then]
            [if]
                [have_unit]
                    id=Hoplite2
                    ability=hoplite_adrenaline
                    {FILTER}
                [/have_unit]
                [then]
                    [store_unit]
                        [filter]
                            id=Hoplite2
                        [/filter]
                        variable=hoplite_andrenalinerush
                        kill=no
                    [/store_unit]
                [/then]
                [else]
                    [store_unit]
                        [filter]
                            id=Hoplite
                        [/filter]
                        variable=hoplite_andrenalinerush
                        kill=no
                    [/store_unit]
                [/else]
            [/if]
            {VARIABLE andrenalinerushfilter $hoplite_andrenalinerush.max_hitpoints}
            {VARIABLE_OP andrenalinerushfilter divide 2}
            {VARIABLE_OP andrenalinerushfilter round ceiling}
            {IF_VAR hoplite_andrenalinerush.hitpoints greater_than 0 (
                [and]
                    [variable]
                        name=hoplite_andrenalinerush.hitpoints
                        less_than_equal_to=$andrenalinerushfilter
                    [/variable]
                [/and]
                [and]
                    {VARIABLE_CONDITIONAL hoplite_adrenalinerush_cooldown less_than 1}
                    [and]
                        {VARIABLE_CONDITIONAL hoplite_multiplayer not_equals yes}
                    [/and]
                    [or]
                        {VARIABLE_CONDITIONAL hoplite_adrenalinerush_cooldown1 less_than 1}
                        [and]
                            [have_unit]
                                id=Hoplite
                                ability=hoplite_adrenaline
                                {FILTER}
                            [/have_unit]
                        [/and]
                    [/or]
                    [or]
                        {VARIABLE_CONDITIONAL hoplite_adrenalinerush_cooldown2 less_than 1}
                        [and]
                            [have_unit]
                                id=Hoplite2
                                ability=hoplite_adrenaline
                                {FILTER}
                            [/have_unit]
                        [/and]
                    [/or]
                [/and]
                [then]
                    [if]
                        [have_unit]
                            id=Hoplite2
                        [/have_unit]
                        [then]
                            [if]
                                [have_unit]
                                    id=Hoplite
                                    ability=hoplite_adrenaline
                                    {FILTER}
                                [/have_unit]
                                [then]
                                    {VARIABLE_OP hoplite_energy1 add 75}
                                    {IF_VAR hoplite_energy1 greater_than $hoplite_maxenergy1 (
                                        [then]
                                            {VARIABLE hoplite_energy1 $hoplite_maxenergy1}
                                        [/then]
                                    )}
                                    {SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
                                [/then]
                                [elseif]
                                    [have_unit]
                                        id=Hoplite2
                                        ability=hoplite_adrenaline
                                        {FILTER}
                                    [/have_unit]
                                    [then]
                                        {VARIABLE_OP hoplite_energy2 add 75}
                                        {IF_VAR hoplite_energy2 greater_than $hoplite_maxenergy2 (
                                            [then]
                                                {VARIABLE hoplite_energy2 $hoplite_maxenergy2}
                                            [/then]
                                        )}
                                        {SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
                                    [/then]
                                [/elseif]
                            [/if]
                        [/then]
                        [else]
                            {VARIABLE_OP hoplite_energy add 75}
                            {IF_VAR hoplite_energy greater_than $hoplite_maxenergy (
                                [then]
                                    {VARIABLE hoplite_energy $hoplite_maxenergy}
                                [/then]
                            )}
                            {SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
                        [/else]
                    [/if]
                    [unstore_unit]
                        variable=hoplite_andrenalinerush
                        text= _ "Adrenaline rush!"
                        blue=255
                    [/unstore_unit]
                    [sound]
                        name=magic-faerirefire.ogg
                    [/sound]
                    {IF_VAR bloodlustIII_unlocked equals yes (
                        [then]
                            {IF_VAR bloodlustIII_active not_equals yes (
                            [then]
                                {HOPLITE_RAGE_EVENT Hoplite}
                                {VARIABLE bloodlustIII_active yes}
                                {VARIABLE bloodlustIII_progress 0}
                            [/then])}
                        [/then]
                    )}
                    {IF_VAR bloodlustIII_unlocked1 equals yes (
                        [then]
                            {IF_VAR bloodlustIII_active1 not_equals yes (
                            [then]
                                {HOPLITE_RAGE_EVENT Hoplite}
                                {VARIABLE bloodlustIII_active1 yes}
                                {VARIABLE bloodlustIII_progress1 0}
                            [/then])}
                        [/then]
                    )}
                    {IF_VAR bloodlustIII_unlocked2 equals yes (
                        [then]
                            {IF_VAR bloodlustIII_active2 not_equals yes (
                            [then]
                                {HOPLITE_RAGE_EVENT Hoplite2}
                                {VARIABLE bloodlustIII_active2 yes}
                                {VARIABLE bloodlustIII_progress2 0}
                            [/then])}
                        [/then]
                    )}
                    [if]
                        [have_unit]
                            id=Hoplite2
                        [/have_unit]
                        [then]
                            [if]
                                [have_unit]
                                    id=Hoplite
                                    ability=hoplite_adrenaline
                                    {FILTER}
                                [/have_unit]
                                [then]
                                    {VARIABLE hoplite_adrenalinerush_cooldown1 1}
                                [/then]
                                [else]
                                    {VARIABLE hoplite_adrenalinerush_cooldown2 1}
                                [/else]
                            [/if]
                        [/then]
                        [else]
                            {VARIABLE hoplite_adrenalinerush_cooldown 1}
                        [/else]
                    [/if]
                [/then]
            )}
        [/then]
    )}
#enddef

#define HOPLITE_TELEPORTAWAY_EVENT ENERGY FILTER
    [if]
        [have_unit]
            id=Hoplite
            ability=hoplite_teleportaway
            [and]
                {FILTER}
            [/and]
        [/have_unit]
        [and]
            [variable]
                name=teleportaway_enabled
                equals=yes
            [/variable]
        [/and]
        [and]
            [variable]
                name=hoplite_energy
                greater_than_equal_to={ENERGY}
            [/variable]
            [or]
                [variable]
                    name=hoplite_energy1
                    greater_than_equal_to={ENERGY}
                [/variable]
            [/or]
        [/and]
        [or]
            [have_unit]
                id=Hoplite2
                ability=hoplite_teleportaway
                [and]
                    {FILTER}
                [/and]
            [/have_unit]
            [and]
                [variable]
                    name=teleportaway_enabled2
                    equals=yes
                [/variable]
            [/and]
            [and]
                [variable]
                    name=hoplite_energy2
                    greater_than_equal_to={ENERGY}
                [/variable]
            [/and]
        [/or]
        [then]
            [if]
                [have_unit]
                    id=Hoplite2
                    {FILTER}
                [/have_unit]
                [then]
                    {VARIABLE_OP hoplite_energy2 sub {ENERGY}}
                    {SET_LABEL 10 1 "Side 2 Energy: $hoplite_energy2|/$hoplite_maxenergy2|"}
                [/then]
                [elseif]
                    [have_unit]
                        id=Hoplite
                        {FILTER}
                    [/have_unit]
                    [and]
                        [have_unit]
                            id=Hoplite2
                        [/have_unit]
                    [/and]
                    [then]
                        {VARIABLE_OP hoplite_energy1 sub {ENERGY}}
                        {SET_LABEL 9 1 "Side 1 Energy: $hoplite_energy1|/$hoplite_maxenergy1|"}
                    [/then]
                [/elseif]
                [else]
                    {VARIABLE_OP hoplite_energy sub {ENERGY}}
                    {SET_LABEL 10 1 "Energy: $hoplite_energy|/$hoplite_maxenergy|"}
                [/else]
            [/if]
            [sound]
                name=magic-faeriefire.ogg
            [/sound]
            [if]
                [variable]
                    name=hoplite_spear_on_ground
                    equals=yes
                [/variable]
                [then]
                    [object]
                        silent=yes
                        duration=turn
                        [filter]
                            id=Hoplite
                            {FILTER}
                        [/filter]
                        [effect]
                            apply_to=variation
                            name=teleporting_spearless
                        [/effect]
                    [/object]
                [/then]
                [else]
                    [object]
                        silent=yes
                        duration=turn
                        [filter]
                            id=Hoplite
                            {FILTER}
                        [/filter]
                        [effect]
                            apply_to=variation
                            name=teleporting
                        [/effect]
                    [/object]
                [/else]
            [/if]
            [if]
                [variable]
                    name=hoplite_spear_on_ground2
                    equals=yes
                [/variable]
                [then]
                    [object]
                        silent=yes
                        duration=turn
                        [filter]
                            id=Hoplite2
                            {FILTER}
                        [/filter]
                        [effect]
                            apply_to=variation
                            name=teleporting_spearless
                        [/effect]
                    [/object]
                [/then]
                [else]
                    [object]
                        silent=yes
                        duration=turn
                        [filter]
                            id=Hoplite2
                            {FILTER}
                        [/filter]
                        [effect]
                            apply_to=variation
                            name=teleporting
                        [/effect]
                    [/object]
                [/else]
            [/if]
            #give the player the teleport anim until the start of next turn:
            [object]
                silent=yes
                duration=turn
                [filter]
                    id=Hoplite,Hoplite2
                    {FILTER}
                [/filter]
                [effect]
                    apply_to=new_animation
                    {HOPLITE_TELEPORTANIM}
                [/effect]
            [/object]
            [animate_unit]
                flag=pre_teleport
                [filter]
                    id=Hoplite,Hoplite2
                    {FILTER}
                [/filter]
            [/animate_unit]
            [store_unit]
                [filter]
                    id=Hoplite,Hoplite2
                    {FILTER}
                [/filter]
                variable=hoplite_stored
                kill=yes
            [/store_unit]
            {SCATTER_UNITS 1 "Hoplite_Dummy_Unit" 2 (
                terrain=Ur*^*,D*^*
                #	    x,y=$hoplite_stored.x,$hoplite_stored.y
                #	    radius=3
                [not]
                    [filter]
                    [/filter]
                    [or]
                        [filter]
                            side=$hoplite_enemyside
                        [/filter]
                        radius=1
                    [/or]
                    [or]
                        y=1-5
                    [/or]
                    [or]
                        {FILTER}
                    [/or]
                [/not]
            ) (
                side=$hoplite_enemyside
            )}
            #adding gradually less strict filters, if the event can't place a dummy unit:
            [if]
            [have_unit]
                    type=Hoplite_Dummy_Unit
            [/have_unit]
            [else]
            {SCATTER_UNITS 1 "Hoplite_Dummy_Unit" 1 (
                terrain=Ur*^*,D*^*
                #       x,y=$hoplite_stored.x,$hoplite_stored.y
                #       radius=3
                [not]
                    [filter]
                    [/filter]
                    [or]
                        y=1-3
                    [/or]
                    [or]
                        {FILTER}
                    [/or]
                [/not]
            ) (
                side=$hoplite_enemyside
            )}
            [/else]
            [/if]
            [if]
            [have_unit]
                    type=Hoplite_Dummy_Unit
            [/have_unit]
            [else]
            {SCATTER_UNITS 1 "Hoplite_Dummy_Unit" 0 (
                terrain=Ur*^*,D*^*
                [not]
                    [filter]
                    [/filter]
                    [or]
                        {FILTER}
                    [/or]
                [/not]
            ) (
                side=$hoplite_enemyside
            )}
            [/else]
            [/if]
            [store_unit]
                [filter]
                    type=Hoplite_Dummy_Unit
                [/filter]
                variable=hoplite_teleportloc
                kill=yes
            [/store_unit]
            {VARIABLE hoplite_stored.x $hoplite_teleportloc.x}
            {VARIABLE hoplite_stored.y $hoplite_teleportloc.y}
            {CLEAR_VARIABLE hoplite_teleportloc}
            [unstore_unit]
                variable=hoplite_stored
                find_vacant=yes
            [/unstore_unit]
            [animate_unit]
                flag=post_teleport
                [filter]
                    id=$hoplite_stored.id
                [/filter]
            [/animate_unit]
            [store_unit]
                [filter]
                    side=$hoplite_enemyside
                    [filter_location]
                        [filter]
                            id=$hoplite_stored.id
                        [/filter]
                        radius=2
                    [/filter_location]
                [/filter]
                kill=no
                variable=slowed
            [/store_unit]

            [foreach]
                array=slowed
                index_var=a
                [do]
                    {VARIABLE this_item.status.slowed yes}
                    [unstore_unit]
                        variable=this_item
                    [/unstore_unit]
                [/do]
            [/foreach]

            {CLEAR_VARIABLE hoplite_teleport}
            {CLEAR_VARIABLE hoplite_stored}
        [/then]
    [/if]
#enddef

#define ABILITY_HOPLITE_KNOCKBACKIMMUNE
    [dummy]
        id=knockback_immune
        name= _ "immune to knockback"
        description=_ "This unit is unaffected by the knockback special."
    [/dummy]
#enddef

#define ABILITY_HOPLITE_KNOCKBACKRESIST VALUE
    [knockback_resistance]
        id=knockback_resistance
        name= _ "knockback resistance"+" {VALUE}"
        description=_ "This unit is resistant to knockback (for example, with knockback resistance 1, if a unit would be pushed 2 tiles it is pushed 1 tile instead. If the knockback resistance is equal or higher to the distance that the unit would be pushed, the unit is unaffected by the knockback)."
        value={VALUE}
    [/knockback_resistance]
#enddef

#define ABILITY_HOPLITE_EASY_TO_PUSH
    [knockback_resistance]
        id=knockback_resistance
        name= _ "easy to push"
        description=_ "This unit can be pushed 1 tile further than normal by knockback."
        value=-1
    [/knockback_resistance]
#enddef

#define ABILITY_HOPLITE_SWIMMER
#dummy ability to make the unit not take damage when knocked into water
    [dummy]
        id=hoplite_swimmer
    [/dummy]
#enddef

#define ABILITY_HOPLITE_FLYING
#dummy ability to make the unit not take damage when knocked into lava/chasms
    [dummy]
        id=hoplite_flying
    [/dummy]
#enddef


#enemy abilities:
#define WEAPON_SPECIAL_HOPLITE_DISABLEONSLOW
    [disable]
        id=hoplite_disableonslow
        [filter_self]
            [filter_wml]
                [status]
                    slowed=yes
                [/status]
            [/filter_wml]
        [/filter_self]
    [/disable]
#enddef

#define SPECIAL_HOPLITE_SHORTRANGED
    [dummy]
        id=shortranged
        name= _ "short-ranged"
        description=_ "This attack can only used if the unit is standing next to the target at the start of the unit's turn."
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
[event]
    name=moveto
    id=hoplite_shortrange_event
    first_time_only=no
    [filter]
    [has_attack]
        special_id=shortranged
    [/has_attack]
    [/filter]
    [object]
        silent=yes
        duration=turn
        [filter]
            find_in=unit
        [/filter]
        [effect]
            apply_to=attack
            special_id=shortranged
            [set_specials]
                mode=append
                [disable]
                    id=shortranged_disableattack
                    [filter_opponent]
                        [not]
                            [filter_location]
                                x,y=$x2,$y2
                                radius=1
                            [/filter_location]
                        [/not]
                    [/filter_opponent]
                [/disable]
            [/set_specials]
        [/effect]
    [/object]
[/event]
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring

#enddef

#define SPECIAL_HOPLITE_LIGHTNINGSTRIKE
    [dummy]
        id=lightningstrike
        name= _ "lightning strike"
        description=_ "This attack can attack any tile. However, it needs one turn to charge up (the target hex is highlighted in red), and can't retarget from the original target location."
    [/dummy]
#enddef

#define SPECIAL_HOPLITE_WEB
    [dummy]
        id=hoplite_web
        name= _ "web spit"
        description=_ "This attack can attack units in a 3-tile line in the direction that the unit is facing. However, the attack can't be used on targets standing directly next to the attacker. It has a 1-turn charge time, and a 1-turn cooldown. The target tiles are highlighted in yellow. On impact, the web deals 1 damage and slows."
    [/dummy]
#enddef

#define SPECIAL_HOPLITE_ARCHERY
    [dummy]
        id=archery
        name= _ "archery"
        description=_ "This attack can attack units in a 4-tile line in the direction that the unit is facing. However, the attack can't be used on targets standing directly next to the attacker. It has a 1-turn charge time, and a 1-turn cooldown. The target tiles are highlighted in yellow."
    [/dummy]
#enddef

#define SPECIAL_HOPLITE_WIZARD_BEAM NUMBER
    [dummy]
        id=hoplite_beam
        name= _ "wizard beam"
        description=_ "This attack can attack units in a "+{NUMBER}+"-tile line in the direction that the unit is facing. It has a 1-turn charge time, and a 1-turn cooldown. The target tiles are highlighted in red."
    [/dummy]
#enddef

#define SPECIAL_HOPLITE_EXPLOSION
    [dummy]
        id=hoplite_explosion
        name= _ "explosion"
        description=_ "This attack targets hexes around a random hex adjacent to an enemy. The targeted hexes are marked with a yellow hexagon."
    [/dummy]
#enddef

#define WEAPON_SPECIAL_HOPLITE_UNHEALABLE
    [dummy]
        id=hoplite_unhealable
        name= _ "jungle's curse"
        description=_ "When hit with this attack, the target becomes cursed. While under the effect of the jungle curse, it becomes unable to use healing potions, and bloodlust II/phoenix amulet effects do not activate. On top of that, the energy gained from kills is halved (rounded down). The effect wears off after 1 or 2 turns have passed."
    [/dummy]
[/specials]
[/attack]
[event]
    name=attacker_hits
    first_time_only=no
    [filter_attack]
        special_id=hoplite_unhealable
    [/filter_attack]

    # Record information about the stoning
    [floating_text]
        [filter]
            id=$second_unit.id
        [/filter]
        text="<span color='#ff0000'>cursed</span>"
    [/floating_text]
    [if]
        [have_unit]
            id=$second_unit.id
            [not]
                [filter_wml]
                    [status]
                        unhealable=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/have_unit]
        [then]
            [object]
                silent=yes
                duration=scenario
                id=cursed
                take_only_once=no
                [filter]
                    id=$second_unit.id
                [/filter]
#                [effect]
#                    apply_to=status
#                    add=unhealable
#                [/effect]
                [effect]
                    apply_to=image_mod
                    add="CS(-15,-50,0)"
                [/effect]
            [/object]
                [modify_unit]
                [filter]
                    id=$second_unit.id
                [/filter]
                [status]
                    unhealable=yes
                [/status]
                [/modify_unit]
            [set_variables]
                name=unhealable_unit_information
                mode=append
                [value]
                    id=$second_unit.id
                    side=$second_unit.side
                    turn_of_rehealing=$"($turn_number| + 2)"
                [/value]
            [/set_variables]
        [/then]
    [/if]
[/event]
[event]
    name=side turn
    first_time_only=no

	{CHATMSG "unhealable_unit_information"}
	{IF_VAR unhealable_unit_information.length greater_than 0 (
	[then]

    [foreach]
        array=unhealable_unit_information
        index_var=i
        [do]

        [if]
            [variable]
                name=turn_number
                greater_than_equal_to=$this_item.turn_of_rehealing
            [/variable]
            [and]
                [variable]
                    name=this_item.side
                    equals=$side_number
                [/variable]
            [/and]

            [then]
                [remove_object]
                    object_id=cursed
                    [filter]
                        id=$this_item.id
                    [/filter]
                [/remove_object]
                [modify_unit]
                [filter]
                    id=$this_item.id
                [/filter]
                [status]
                    unhealable=no
                [/status]
                [/modify_unit]
                [clear_variable]
                    name=this_item
                [/clear_variable]
            [/then]
        [/if]

        [/do]
    [/foreach]

	[/then]
	)}
[/event]
[+attack]
    [+specials]
#enddef

#define ABILITY_TELEPORTAWAY
    [dummy]
        id=teleportaway
        name= _ "teleport away"
        description=_ "This unit teleports to a random location after being attacked."
    [/dummy]
#enddef

#define ABILITY_COWARDLY
    [dummy]
        id=cowardly
        name= _ "cowardly"
        description=_ "This unit tries to keep a safe distance from enemies, and only attacks if cornered. (unable to move, or there's an enemy next to the hex retreated to)"
    [/dummy]
#enddef

#define ABILITY_RANGED
#dummy ability used for indentifying ranged units, instead of having unit types pasted everywhere
    [dummy]
        id=hoplite_ranged
    [/dummy]
#enddef
#define ABILITY_SEMIRANGED
#for units like cuttlefish, for whom the coward ai is not needed
    [dummy]
        id=hoplite_semiranged
    [/dummy]
#enddef
#define ABILITY_HOPLITE_BOSS
#for filtering bosses
    [dummy]
        id=hoplite_boss
        name=_"boss"
        description=_"This unit can't be instantly killed by being knocked into lava (takes damage instead), and can't be enthralled."
    [/dummy]
#enddef

#define ABILITY_GHOSTLY
    [hides]
        id=ghostly
        name= _ "ghostly"
        female_name= _ "female^ghostly"
        description= _ "This unit is invisible unless there's an enemy standing in a 2-tile radius near it."
        affect_self=yes
        [filter]
            [filter_location]
                [not]
                    [filter]
                        side=$hoplite_playerside,$hoplite_allyside
			[not]
			  ability=hoplite_keeneye
			[/not]
                    [/filter]
                    radius=2
                    [filter_radius]
                        [not]
                            terrain=Xu*^*,Xo*^*
                        [/not]
                    [/filter_radius]
		    [or]
                    [filter]
                        side=$hoplite_playerside
			ability=hoplite_keeneye
                    [/filter]
                    radius=3
                    [filter_radius]
                        [not]
                            terrain=Xu*^*,Xo*^*
                        [/not]
                    [/filter_radius]
		    [/or]
                [/not]
            [/filter_location]
        [/filter]
    [/hides]
#enddef

#define SPECIAL_HOPLITE_COUNTERATTACK
    [dummy]
        id=hoplite_counterattack
        name= _ "counterattack"
        description=_ "Unlike most attacks in this campaign, this attack can be used defensively."
    [/dummy]
#enddef

#define ABILITY_HOPLITE_DODGE VALUE
    [chance_to_hit] # this is a weapon special, but as of 1.15.0, it is possible to use it this way in [abilities]
        id=hoplite_dodge{VALUE}
        sub={VALUE}
        name= _ "dodge"+" {VALUE}"
        description= _ "This unit has a"+" {VALUE}% "+_"chance to dodge enemy attacks."
        affect_self=yes
        cumulative=yes
        apply_to=opponent
    [/chance_to_hit]
#enddef

#define ABILITY_HOPLITE_SUMMON ID NAME DESCRIPTION TYPES COOLDOWN SUMMONCAP
    [hoplite_summon]
        id=hoplite_summon_{ID}
        name={NAME}
        #using these params just in case I decide to give summoning to elizabeth or maybe to a companion ally
        #(this will allow upgrading summon via replacing the ability in [object])
        description={DESCRIPTION}
        types_list={TYPES}
        cooldown={COOLDOWN}
        summoncap={SUMMONCAP}
    [/hoplite_summon]
    [dummy]
        id=summonerfilter
    [/dummy]
[/abilities]
    [event]
#needed, otherwise the moves=0 and attacks_left=0 code below won't work
#        name=side turn
        name=turn refresh
        first_time_only=no
        id=hoplite_summon_event_{ID}
        first_time_only=no
        [store_unit]
            [filter]
                ability=hoplite_summon_{ID}
                side=$side_number
            [/filter]
            variable={ID}
        [/store_unit]
        [foreach]
            array={ID}
            index_var=i
            [do]
#            #starts on cooldown, to make summoners not too frustrating to fight
#            {IF_VAR this_item.variables.summon_cooldown not_equals $emptyvar (
#            [else]
#                [modify_unit]
#                    [filter]
#                        id=$this_item.id
#                    [/filter]
#                    [set_variable]
#                        name=summon_cooldown
#                        value=$this_item.abilities.hoplite_summon.cooldown
#                    [/set_variable]
#                [/modify_unit]
#            [/else]
#            )}
            [modify_unit]
                [filter]
                    id=$this_item.id
                [/filter]
                [set_variable]
                    name=summon_cooldown
#                    sub=1
                    add=1#cooldown now counts up instead of down
                [/set_variable]
            [/modify_unit]
#            {IF_VAR this_item.variables.summon_cooldown greater_than 0 (
#            [else]
            {IF_VAR this_item.variables.summon_cooldown greater_than_equal_to $this_item.abilities.hoplite_summon.cooldown (
            [then]
                {VARIABLE tmp_summoncap ${ID}.length}
                {VARIABLE_OP tmp_summoncap multiply $this_item.abilities.hoplite_summon.summoncap}
                [store_unit]
                    [filter]
                        ability=summoned_by_{ID}
                    [/filter]
                    variable=tmp_summons
                    kill=no
                [/store_unit]
                {IF_VAR tmp_summons.length greater_than_equal_to $tmp_summoncap (
                [then]
                [/then]
                [else]
                   [animate_unit]
                       flag=summon
                       [filter]
                           id=$this_item.id
                       [/filter]
                   [/animate_unit]
                   {VARIABLE_OP tmp_summontype rand $this_item.abilities.hoplite_summon.types_list}
                   [unit]
                        type=$tmp_summontype
                        side=$side_number
                        x,y=$this_item.x,$this_item.y
                        moves=0
                        attacks_left=0
                        animate=yes
                        placement=map
                        passable=yes
                        [modifications]
                            [object]
                                silent=yes
                                duration=scenario
                                [effect]
                                    apply_to=new_ability
                                    [abilities]
                                        [dummy]
                                            id=summoned_by_{ID}#for filtering
                                        [/dummy]
                                    [/abilities]
                                [/effect]
                            [/object]
                        [/modifications]
                    [/unit]
                    [modify_unit]
                        [filter]
                            id=$this_item.id
                        [/filter]
                        [set_variable]
                            name=summon_cooldown
                            value=0
                        [/set_variable]
                    [/modify_unit]
                [/else]
                )}
                {CLEAR_VARIABLE tmp_summons}
                {CLEAR_VARIABLE tmp_summoncap}
                {CLEAR_VARIABLE tmp_summontype}
            [/then])}
            [/do]
        [/foreach]
        {CLEAR_VARIABLE {ID}}
    [/event]
[+abilities]
#enddef

#define ABILITY_HOPLITE_BOMB EFFECTS
    [dummy]
        id=hoplite_bomb
        name= _ "bomb"
        description=_"At the start of its turn, this unit self-destructs, dealing damage to all adjacent units (except other bombs) with its first attack. The unit also explodes if killed."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=die
    id=hoplite_bomb_event
    first_time_only=no
    [filter]
        ability=hoplite_bomb
    [/filter]

    [hide_unit]
        x,y=$x1,$y1
    [/hide_unit]

    [harm_unit]
        [filter]
            [and]
                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
            [/and]
            [not]
                ability=hoplite_bomb
                [or]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
                [/or]
                [or]
                    ability=hoplite_advanced_bomb
                [/or]
            [/not]
        [/filter]
        amount=$unit.attack[0].damage
        damage_type=$unit.attack[0].type
        fire_event=yes
        kill=yes
        animate=yes
        delay=0
        experience=no
    [/harm_unit]
    #other effects for bombs, in case I add other bomb types
    {EFFECTS}
[/event]
[event]
    name=side turn
    id=hoplite_bomb_event2
    first_time_only=no
    [kill]
        side=$side_number
        ability=hoplite_bomb
        animate=yes
        fire_event=yes
    [/kill]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#TODO: make a player-friendly version of advanced bomb too

#define ABILITY_HOPLITE_ADVANCED_BOMB EFFECTS
    [dummy]
        id=hoplite_advanced_bomb
        name= _ "advanced bomb"
        description=_"At the start of its turn, this unit self-destructs, dealing damage to all adjacent enemies (unlike normal bomb, which damages allies too) with its first attack. The unit also explodes if killed."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=die
    id=hoplite_advanced_bomb_event
    first_time_only=no
    [filter]
        ability=hoplite_advanced_bomb
    [/filter]

    [hide_unit]
        x,y=$x1,$y1
    [/hide_unit]

    [harm_unit]
        [filter]
            [filter_side]
                [enemy_of]
                    side=$unit.side
                [/enemy_of]
            [/filter_side]
            [and]
                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
            [/and]
            [not]
                ability=hoplite_bomb
                [or]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
                [/or]
                [or]
                    ability=hoplite_advanced_bomb
                [/or]
            [/not]
        [/filter]
        amount=$unit.attack[0].damage
        damage_type=$unit.attack[0].type
        fire_event=yes
        kill=yes
        animate=yes
        delay=0
        experience=no
    [/harm_unit]
    #other effects for bombs, in case I add other bomb types
    {EFFECTS}
[/event]
[event]
    name=side turn
    id=hoplite_advanced_bomb_event2
    first_time_only=no
    [kill]
        side=$side_number
        ability=hoplite_advanced_bomb
        animate=yes
        fire_event=yes
    [/kill]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_HOPLITE_THROW_BOMB TYPE COOLDOWN RADIUS NAME DESCRIPTION
    [dummy]
        id=hoplite_throw_bomb{TYPE}
        name={NAME}
        description={DESCRIPTION}
    [/dummy] # wmlxgettext: [abilities]
    [dummy]
        id=hoplite_bombthrow_ai
    [/dummy]
[/abilities]
[event]
    name=turn refresh
    id=hoplite_throw_bomb{TYPE}
    first_time_only=no
    [store_unit]
        [filter]
            ability=hoplite_throw_bomb{TYPE}
            side=$side_number
        [not]
        [filter_wml]
        [status]
            petrified=yes
        [/status]
        [/filter_wml]
        [/not]
        [/filter]
        variable=hoplite_bombthrower
        kill=no
    [/store_unit]
    [foreach]
        array=hoplite_bombthrower
        index_var=i
        [do]
            {VARIABLE_OP this_item.variables.bombthrow_cooldown add 1}
            [unstore_unit]
                variable=this_item
                find_vacant=no
            [/unstore_unit]
            {IF_VAR this_item.variables.bombthrow_cooldown greater_than_equal_to {COOLDOWN} (
            [then]
            {IF_VAR this_item.variation equals armed (
            [and]
                #check if potential targets exist
                [have_unit]
                    [filter_side]
                        [enemy_of]
                            side=$side_number
                        [/enemy_of]
                    [/filter_side]
                    [filter_location]
                        [filter]
                            id=$this_item.id
                        [/filter]
                        radius={RADIUS}
                        [filter_radius]
                            terrain=!,Xu*^*,Xo*^*
                        [/filter_radius]
                    [/filter_location]
                [/have_unit]
            [/and]
            [then]
                {VARIABLE this_item.variables.bombthrow_cooldown 0}
                [unstore_unit]
                    variable=this_item
                    find_vacant=no
                [/unstore_unit]
                [modify_unit]
                    [filter]
                        id=$this_item.id
                    [/filter]
                    variation=none
                [/modify_unit]
                [store_unit]
                    [filter]
                        [filter_side]
                            [enemy_of]
                                side=$side_number
                            [/enemy_of]
                        [/filter_side]
                        [filter_location]
                            [filter]
                                id=$this_item.id
                            [/filter]
                            radius={RADIUS}
                            [filter_radius]
                                terrain=!,Xu*^*,Xo*^*
                            [/filter_radius]
                        [/filter_location]
                    [/filter]
                    variable=hoplite_bombtarget
                    kill=no
                [/store_unit]
                [move_unit_fake]
                    type={TYPE}
                    side=$hoplite_enemyside
                    x=$this_item.x,$hoplite_bombtarget.x
                    y=$this_item.y,$hoplite_bombtarget.y
                [/move_unit_fake]

                #intentionally set to enemy side, so that bombs spawned by allied bombers can be shield-bashed
                {UNIT $hoplite_enemyside {TYPE} $hoplite_bombtarget.x $hoplite_bombtarget.y (
                    placement=map
                    passable=yes
                )}
            [/then]
            [else]
                [modify_unit]
                    [filter]
                        id=$this_item.id
                    [/filter]
                    variation=armed
                [/modify_unit]
            [/else]
            )}
            [/then]
            )}
            {CLEAR_VARIABLE hoplite_bombtarget}
        [/do]
    [/foreach]
    {CLEAR_VARIABLE hoplite_bombthrower}
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#version of throw bomb without relying on variation, cooldown is faster due to no "arming" state, and doesn't add bomb thrower AI
#define ABILITY_HOPLITE_THROW_BOMB_BOSS TYPE COOLDOWN RADIUS NAME DESCRIPTION
    [dummy]
        id=hoplite_throw_bomb_boss{TYPE}
        name={NAME}
        description={DESCRIPTION}
    [/dummy] # wmlxgettext: [abilities]
#    [dummy]
#        id=hoplite_bombthrow_ai
#    [/dummy]
[/abilities]
[event]
    name=turn refresh
    id=hoplite_throw_bomb_boss{TYPE}
    first_time_only=no
    [store_unit]
        [filter]
            ability=hoplite_throw_bomb_boss{TYPE}
            side=$side_number
        [not]
        [filter_wml]
        [status]
            petrified=yes
        [/status]
        [/filter_wml]
        [/not]
        [/filter]
        variable=hoplite_bombthrower
        kill=no
    [/store_unit]
    [foreach]
        array=hoplite_bombthrower
        index_var=i
        [do]
            {VARIABLE_OP this_item.variables.bombthrow_cooldown add 1}
            [unstore_unit]
                variable=this_item
                find_vacant=no
            [/unstore_unit]
            {IF_VAR this_item.variables.bombthrow_cooldown greater_than_equal_to {COOLDOWN} (
            [and]
                #check if potential targets exist
                [have_unit]
                    [filter_side]
                        [enemy_of]
                            side=$side_number
                        [/enemy_of]
                    [/filter_side]
                    [filter_location]
                        [filter]
                            id=$this_item.id
                        [/filter]
                        radius={RADIUS}
                        [filter_radius]
                            terrain=!,Xu,Xo*
                        [/filter_radius]
                    [/filter_location]
                [/have_unit]
            [/and]
            [then]
                {VARIABLE this_item.variables.bombthrow_cooldown 0}
                [unstore_unit]
                    variable=this_item
                    find_vacant=no
                [/unstore_unit]
                [modify_unit]
                    [filter]
                        id=$this_item.id
                    [/filter]
                    variation=none
                [/modify_unit]
                [store_unit]
                    [filter]
                        [filter_side]
                            [enemy_of]
                                side=$side_number
                            [/enemy_of]
                        [/filter_side]
                        [filter_location]
                            [filter]
                                id=$this_item.id
                            [/filter]
                            radius={RADIUS}
                            [filter_radius]
                                terrain=!,Xu,Xo*
                            [/filter_radius]
                        [/filter_location]
                    [/filter]
                    variable=hoplite_bombtarget
                    kill=no
                [/store_unit]
                [move_unit_fake]
                    type={TYPE}
                    side=$hoplite_enemyside
                    x=$this_item.x,$hoplite_bombtarget.x
                    y=$this_item.y,$hoplite_bombtarget.y
                [/move_unit_fake]

                #intentionally set to enemy side, so that bombs spawned by allied bombers can be shield-bashed
                {UNIT $hoplite_enemyside {TYPE} $hoplite_bombtarget.x $hoplite_bombtarget.y (
                    placement=map
                    passable=yes
                )}
            [/then]
            )}
            {CLEAR_VARIABLE hoplite_bombtarget}
        [/do]
    [/foreach]
    {CLEAR_VARIABLE hoplite_bombthrower}
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_HOPLITE_TELEPORT RADIUS
    [teleport]
        id=hoplite_teleport{RADIUS}
        name= _ "teleport"+" {RADIUS}"
        female_name= _ "teleport"+" {RADIUS}"
        description= _ "this unit can teleport to any tile in a"+" {RADIUS}"+_"-tile radius of itself except those in a 2-tile radius of the enemy units."
        [tunnel]
            id=hoplite_teleport{RADIUS}
            [source]
            terrain=!,Xu*,Xo*
            [/source]
            [target]
            terrain=!,Xu*,Xo*
                [not]
              [filter]
                 [filter_side]
                    [enemy_of]
                        side=$teleport_unit.side
                    [/enemy_of]
                 [/filter_side]
              [/filter]
              radius=2
                [/not]
                [and]
                    [filter]
                        id=$teleport_unit.id
                    [/filter]
                    radius={RADIUS}
                [/and]
            [/target]
        [redraw]
        [/redraw]
            [filter]
                ability=hoplite_teleport{RADIUS}
            [/filter]
        [/tunnel]
    [/teleport]
#enddef